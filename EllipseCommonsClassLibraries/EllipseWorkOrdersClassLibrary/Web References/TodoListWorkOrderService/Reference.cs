//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace EllipseWorkOrdersClassLibrary.TodoListWorkOrderService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="TodoListWorkOrderServiceHttpBinding", Namespace="http://todolistworkorder.m8mwp.service.ellipse.mincom.com")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BaseServiceResult))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Base))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Attribute[]))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WorkOrderTodoInstanceDTO[]))]
    public partial class TodoListWorkOrderService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback multipleUpdateTodoInstanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback multipleDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteTodoInstanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback multipleMoveDownTodoInstanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback readTodoInstanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchOperationCompleted;
        
        private System.Threading.SendOrPostCallback multipleUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback createOperationCompleted;
        
        private System.Threading.SendOrPostCallback multipleMoveUpTodoInstanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback assignTodoListOperationCompleted;
        
        private System.Threading.SendOrPostCallback retrieveTodoInstancesOperationCompleted;
        
        private System.Threading.SendOrPostCallback readOperationCompleted;
        
        private System.Threading.SendOrPostCallback multipleDeleteTodoInstanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback createTodoInstanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback multipleAssignTodoListOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateTodoInstanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback multipleBulkUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchByWorkGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback multipleReadTodoInstanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback moveUpTodoInstanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback multipleCreateTodoInstanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback bulkUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback moveDownTodoInstanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback multipleReadOperationCompleted;
        
        private System.Threading.SendOrPostCallback multipleCreateOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public TodoListWorkOrderService() {
            this.Url = global::EllipseWorkOrdersClassLibrary.Properties.Settings.Default.EllipseWorkOrdersClassLibrary_TodoListWorkOrderService_TodoListWorkOrderService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event multipleUpdateTodoInstanceCompletedEventHandler multipleUpdateTodoInstanceCompleted;
        
        /// <remarks/>
        public event multipleDeleteCompletedEventHandler multipleDeleteCompleted;
        
        /// <remarks/>
        public event updateCompletedEventHandler updateCompleted;
        
        /// <remarks/>
        public event deleteTodoInstanceCompletedEventHandler deleteTodoInstanceCompleted;
        
        /// <remarks/>
        public event multipleMoveDownTodoInstanceCompletedEventHandler multipleMoveDownTodoInstanceCompleted;
        
        /// <remarks/>
        public event deleteCompletedEventHandler deleteCompleted;
        
        /// <remarks/>
        public event readTodoInstanceCompletedEventHandler readTodoInstanceCompleted;
        
        /// <remarks/>
        public event searchCompletedEventHandler searchCompleted;
        
        /// <remarks/>
        public event multipleUpdateCompletedEventHandler multipleUpdateCompleted;
        
        /// <remarks/>
        public event createCompletedEventHandler createCompleted;
        
        /// <remarks/>
        public event multipleMoveUpTodoInstanceCompletedEventHandler multipleMoveUpTodoInstanceCompleted;
        
        /// <remarks/>
        public event assignTodoListCompletedEventHandler assignTodoListCompleted;
        
        /// <remarks/>
        public event retrieveTodoInstancesCompletedEventHandler retrieveTodoInstancesCompleted;
        
        /// <remarks/>
        public event readCompletedEventHandler readCompleted;
        
        /// <remarks/>
        public event multipleDeleteTodoInstanceCompletedEventHandler multipleDeleteTodoInstanceCompleted;
        
        /// <remarks/>
        public event createTodoInstanceCompletedEventHandler createTodoInstanceCompleted;
        
        /// <remarks/>
        public event multipleAssignTodoListCompletedEventHandler multipleAssignTodoListCompleted;
        
        /// <remarks/>
        public event updateTodoInstanceCompletedEventHandler updateTodoInstanceCompleted;
        
        /// <remarks/>
        public event multipleBulkUpdateCompletedEventHandler multipleBulkUpdateCompleted;
        
        /// <remarks/>
        public event searchByWorkGroupCompletedEventHandler searchByWorkGroupCompleted;
        
        /// <remarks/>
        public event multipleReadTodoInstanceCompletedEventHandler multipleReadTodoInstanceCompleted;
        
        /// <remarks/>
        public event moveUpTodoInstanceCompletedEventHandler moveUpTodoInstanceCompleted;
        
        /// <remarks/>
        public event multipleCreateTodoInstanceCompletedEventHandler multipleCreateTodoInstanceCompleted;
        
        /// <remarks/>
        public event bulkUpdateCompletedEventHandler bulkUpdateCompleted;
        
        /// <remarks/>
        public event moveDownTodoInstanceCompletedEventHandler moveDownTodoInstanceCompleted;
        
        /// <remarks/>
        public event multipleReadCompletedEventHandler multipleReadCompleted;
        
        /// <remarks/>
        public event multipleCreateCompletedEventHandler multipleCreateCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://todolistworkorder.m8mwp.service.ellipse.mincom.com", ResponseNamespace="http://todolistworkorder.m8mwp.service.ellipse.mincom.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("out", IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://instances.m8mwp.types.ellipse.mincom.com")]
        public TodoListItemInstanceServiceResult[] multipleUpdateTodoInstance([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] OperationContext context, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://instances.m8mwp.types.ellipse.mincom.com")] WorkOrderTodoInstanceDTO[] inputDtos) {
            object[] results = this.Invoke("multipleUpdateTodoInstance", new object[] {
                        context,
                        inputDtos});
            return ((TodoListItemInstanceServiceResult[])(results[0]));
        }
        
        /// <remarks/>
        public void multipleUpdateTodoInstanceAsync(OperationContext context, WorkOrderTodoInstanceDTO[] inputDtos) {
            this.multipleUpdateTodoInstanceAsync(context, inputDtos, null);
        }
        
        /// <remarks/>
        public void multipleUpdateTodoInstanceAsync(OperationContext context, WorkOrderTodoInstanceDTO[] inputDtos, object userState) {
            if ((this.multipleUpdateTodoInstanceOperationCompleted == null)) {
                this.multipleUpdateTodoInstanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmultipleUpdateTodoInstanceOperationCompleted);
            }
            this.InvokeAsync("multipleUpdateTodoInstance", new object[] {
                        context,
                        inputDtos}, this.multipleUpdateTodoInstanceOperationCompleted, userState);
        }
        
        private void OnmultipleUpdateTodoInstanceOperationCompleted(object arg) {
            if ((this.multipleUpdateTodoInstanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.multipleUpdateTodoInstanceCompleted(this, new multipleUpdateTodoInstanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://todolistworkorder.m8mwp.service.ellipse.mincom.com", ResponseNamespace="http://todolistworkorder.m8mwp.service.ellipse.mincom.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("out", IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://instances.m8mwp.types.ellipse.mincom.com")]
        public TodoListWorkOrderServiceResult[] multipleDelete([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] OperationContext context, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://instances.m8mwp.types.ellipse.mincom.com")] TodoListWorkOrderDTO[] inputDtos) {
            object[] results = this.Invoke("multipleDelete", new object[] {
                        context,
                        inputDtos});
            return ((TodoListWorkOrderServiceResult[])(results[0]));
        }
        
        /// <remarks/>
        public void multipleDeleteAsync(OperationContext context, TodoListWorkOrderDTO[] inputDtos) {
            this.multipleDeleteAsync(context, inputDtos, null);
        }
        
        /// <remarks/>
        public void multipleDeleteAsync(OperationContext context, TodoListWorkOrderDTO[] inputDtos, object userState) {
            if ((this.multipleDeleteOperationCompleted == null)) {
                this.multipleDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmultipleDeleteOperationCompleted);
            }
            this.InvokeAsync("multipleDelete", new object[] {
                        context,
                        inputDtos}, this.multipleDeleteOperationCompleted, userState);
        }
        
        private void OnmultipleDeleteOperationCompleted(object arg) {
            if ((this.multipleDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.multipleDeleteCompleted(this, new multipleDeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://todolistworkorder.m8mwp.service.ellipse.mincom.com", ResponseNamespace="http://todolistworkorder.m8mwp.service.ellipse.mincom.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public TodoListWorkOrderServiceResult update([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] OperationContext context, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] TodoListWorkOrderDTO serviceDTO) {
            object[] results = this.Invoke("update", new object[] {
                        context,
                        serviceDTO});
            return ((TodoListWorkOrderServiceResult)(results[0]));
        }
        
        /// <remarks/>
        public void updateAsync(OperationContext context, TodoListWorkOrderDTO serviceDTO) {
            this.updateAsync(context, serviceDTO, null);
        }
        
        /// <remarks/>
        public void updateAsync(OperationContext context, TodoListWorkOrderDTO serviceDTO, object userState) {
            if ((this.updateOperationCompleted == null)) {
                this.updateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateOperationCompleted);
            }
            this.InvokeAsync("update", new object[] {
                        context,
                        serviceDTO}, this.updateOperationCompleted, userState);
        }
        
        private void OnupdateOperationCompleted(object arg) {
            if ((this.updateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateCompleted(this, new updateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://todolistworkorder.m8mwp.service.ellipse.mincom.com", ResponseNamespace="http://todolistworkorder.m8mwp.service.ellipse.mincom.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public TodoListWorkOrderServiceResult deleteTodoInstance([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] OperationContext context, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] WorkOrderTodoInstanceDTO serviceDTO) {
            object[] results = this.Invoke("deleteTodoInstance", new object[] {
                        context,
                        serviceDTO});
            return ((TodoListWorkOrderServiceResult)(results[0]));
        }
        
        /// <remarks/>
        public void deleteTodoInstanceAsync(OperationContext context, WorkOrderTodoInstanceDTO serviceDTO) {
            this.deleteTodoInstanceAsync(context, serviceDTO, null);
        }
        
        /// <remarks/>
        public void deleteTodoInstanceAsync(OperationContext context, WorkOrderTodoInstanceDTO serviceDTO, object userState) {
            if ((this.deleteTodoInstanceOperationCompleted == null)) {
                this.deleteTodoInstanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteTodoInstanceOperationCompleted);
            }
            this.InvokeAsync("deleteTodoInstance", new object[] {
                        context,
                        serviceDTO}, this.deleteTodoInstanceOperationCompleted, userState);
        }
        
        private void OndeleteTodoInstanceOperationCompleted(object arg) {
            if ((this.deleteTodoInstanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteTodoInstanceCompleted(this, new deleteTodoInstanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://todolistworkorder.m8mwp.service.ellipse.mincom.com", ResponseNamespace="http://todolistworkorder.m8mwp.service.ellipse.mincom.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("out", IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://instances.m8mwp.types.ellipse.mincom.com")]
        public TodoListItemInstanceServiceResult[] multipleMoveDownTodoInstance([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] OperationContext context, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://instances.m8mwp.types.ellipse.mincom.com")] WorkOrderTodoInstanceDTO[] inputDtos) {
            object[] results = this.Invoke("multipleMoveDownTodoInstance", new object[] {
                        context,
                        inputDtos});
            return ((TodoListItemInstanceServiceResult[])(results[0]));
        }
        
        /// <remarks/>
        public void multipleMoveDownTodoInstanceAsync(OperationContext context, WorkOrderTodoInstanceDTO[] inputDtos) {
            this.multipleMoveDownTodoInstanceAsync(context, inputDtos, null);
        }
        
        /// <remarks/>
        public void multipleMoveDownTodoInstanceAsync(OperationContext context, WorkOrderTodoInstanceDTO[] inputDtos, object userState) {
            if ((this.multipleMoveDownTodoInstanceOperationCompleted == null)) {
                this.multipleMoveDownTodoInstanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmultipleMoveDownTodoInstanceOperationCompleted);
            }
            this.InvokeAsync("multipleMoveDownTodoInstance", new object[] {
                        context,
                        inputDtos}, this.multipleMoveDownTodoInstanceOperationCompleted, userState);
        }
        
        private void OnmultipleMoveDownTodoInstanceOperationCompleted(object arg) {
            if ((this.multipleMoveDownTodoInstanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.multipleMoveDownTodoInstanceCompleted(this, new multipleMoveDownTodoInstanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://todolistworkorder.m8mwp.service.ellipse.mincom.com", ResponseNamespace="http://todolistworkorder.m8mwp.service.ellipse.mincom.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public TodoListWorkOrderServiceResult delete([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] OperationContext context, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] TodoListWorkOrderDTO serviceDTO) {
            object[] results = this.Invoke("delete", new object[] {
                        context,
                        serviceDTO});
            return ((TodoListWorkOrderServiceResult)(results[0]));
        }
        
        /// <remarks/>
        public void deleteAsync(OperationContext context, TodoListWorkOrderDTO serviceDTO) {
            this.deleteAsync(context, serviceDTO, null);
        }
        
        /// <remarks/>
        public void deleteAsync(OperationContext context, TodoListWorkOrderDTO serviceDTO, object userState) {
            if ((this.deleteOperationCompleted == null)) {
                this.deleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteOperationCompleted);
            }
            this.InvokeAsync("delete", new object[] {
                        context,
                        serviceDTO}, this.deleteOperationCompleted, userState);
        }
        
        private void OndeleteOperationCompleted(object arg) {
            if ((this.deleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteCompleted(this, new deleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://todolistworkorder.m8mwp.service.ellipse.mincom.com", ResponseNamespace="http://todolistworkorder.m8mwp.service.ellipse.mincom.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public WorkOrderTodoInstanceServiceResult readTodoInstance([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] OperationContext context, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] WorkOrderTodoInstanceDTO serviceDTO) {
            object[] results = this.Invoke("readTodoInstance", new object[] {
                        context,
                        serviceDTO});
            return ((WorkOrderTodoInstanceServiceResult)(results[0]));
        }
        
        /// <remarks/>
        public void readTodoInstanceAsync(OperationContext context, WorkOrderTodoInstanceDTO serviceDTO) {
            this.readTodoInstanceAsync(context, serviceDTO, null);
        }
        
        /// <remarks/>
        public void readTodoInstanceAsync(OperationContext context, WorkOrderTodoInstanceDTO serviceDTO, object userState) {
            if ((this.readTodoInstanceOperationCompleted == null)) {
                this.readTodoInstanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnreadTodoInstanceOperationCompleted);
            }
            this.InvokeAsync("readTodoInstance", new object[] {
                        context,
                        serviceDTO}, this.readTodoInstanceOperationCompleted, userState);
        }
        
        private void OnreadTodoInstanceOperationCompleted(object arg) {
            if ((this.readTodoInstanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.readTodoInstanceCompleted(this, new readTodoInstanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://todolistworkorder.m8mwp.service.ellipse.mincom.com", ResponseNamespace="http://todolistworkorder.m8mwp.service.ellipse.mincom.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("out", IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://instances.m8mwp.types.ellipse.mincom.com")]
        public TodoListWorkOrderServiceResult[] search([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] OperationContext context, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] TodoListWorkOrderSearchParam searchParams, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] TodoListWorkOrderDTO restart) {
            object[] results = this.Invoke("search", new object[] {
                        context,
                        searchParams,
                        restart});
            return ((TodoListWorkOrderServiceResult[])(results[0]));
        }
        
        /// <remarks/>
        public void searchAsync(OperationContext context, TodoListWorkOrderSearchParam searchParams, TodoListWorkOrderDTO restart) {
            this.searchAsync(context, searchParams, restart, null);
        }
        
        /// <remarks/>
        public void searchAsync(OperationContext context, TodoListWorkOrderSearchParam searchParams, TodoListWorkOrderDTO restart, object userState) {
            if ((this.searchOperationCompleted == null)) {
                this.searchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchOperationCompleted);
            }
            this.InvokeAsync("search", new object[] {
                        context,
                        searchParams,
                        restart}, this.searchOperationCompleted, userState);
        }
        
        private void OnsearchOperationCompleted(object arg) {
            if ((this.searchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchCompleted(this, new searchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://todolistworkorder.m8mwp.service.ellipse.mincom.com", ResponseNamespace="http://todolistworkorder.m8mwp.service.ellipse.mincom.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("out", IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://instances.m8mwp.types.ellipse.mincom.com")]
        public TodoListWorkOrderServiceResult[] multipleUpdate([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] OperationContext context, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://instances.m8mwp.types.ellipse.mincom.com")] TodoListWorkOrderDTO[] inputDtos) {
            object[] results = this.Invoke("multipleUpdate", new object[] {
                        context,
                        inputDtos});
            return ((TodoListWorkOrderServiceResult[])(results[0]));
        }
        
        /// <remarks/>
        public void multipleUpdateAsync(OperationContext context, TodoListWorkOrderDTO[] inputDtos) {
            this.multipleUpdateAsync(context, inputDtos, null);
        }
        
        /// <remarks/>
        public void multipleUpdateAsync(OperationContext context, TodoListWorkOrderDTO[] inputDtos, object userState) {
            if ((this.multipleUpdateOperationCompleted == null)) {
                this.multipleUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmultipleUpdateOperationCompleted);
            }
            this.InvokeAsync("multipleUpdate", new object[] {
                        context,
                        inputDtos}, this.multipleUpdateOperationCompleted, userState);
        }
        
        private void OnmultipleUpdateOperationCompleted(object arg) {
            if ((this.multipleUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.multipleUpdateCompleted(this, new multipleUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://todolistworkorder.m8mwp.service.ellipse.mincom.com", ResponseNamespace="http://todolistworkorder.m8mwp.service.ellipse.mincom.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public TodoListWorkOrderServiceResult create([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] OperationContext context, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] TodoListWorkOrderDTO serviceDTO) {
            object[] results = this.Invoke("create", new object[] {
                        context,
                        serviceDTO});
            return ((TodoListWorkOrderServiceResult)(results[0]));
        }
        
        /// <remarks/>
        public void createAsync(OperationContext context, TodoListWorkOrderDTO serviceDTO) {
            this.createAsync(context, serviceDTO, null);
        }
        
        /// <remarks/>
        public void createAsync(OperationContext context, TodoListWorkOrderDTO serviceDTO, object userState) {
            if ((this.createOperationCompleted == null)) {
                this.createOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateOperationCompleted);
            }
            this.InvokeAsync("create", new object[] {
                        context,
                        serviceDTO}, this.createOperationCompleted, userState);
        }
        
        private void OncreateOperationCompleted(object arg) {
            if ((this.createCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createCompleted(this, new createCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://todolistworkorder.m8mwp.service.ellipse.mincom.com", ResponseNamespace="http://todolistworkorder.m8mwp.service.ellipse.mincom.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("out", IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://instances.m8mwp.types.ellipse.mincom.com")]
        public TodoListItemInstanceServiceResult[] multipleMoveUpTodoInstance([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] OperationContext context, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://instances.m8mwp.types.ellipse.mincom.com")] WorkOrderTodoInstanceDTO[] inputDtos) {
            object[] results = this.Invoke("multipleMoveUpTodoInstance", new object[] {
                        context,
                        inputDtos});
            return ((TodoListItemInstanceServiceResult[])(results[0]));
        }
        
        /// <remarks/>
        public void multipleMoveUpTodoInstanceAsync(OperationContext context, WorkOrderTodoInstanceDTO[] inputDtos) {
            this.multipleMoveUpTodoInstanceAsync(context, inputDtos, null);
        }
        
        /// <remarks/>
        public void multipleMoveUpTodoInstanceAsync(OperationContext context, WorkOrderTodoInstanceDTO[] inputDtos, object userState) {
            if ((this.multipleMoveUpTodoInstanceOperationCompleted == null)) {
                this.multipleMoveUpTodoInstanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmultipleMoveUpTodoInstanceOperationCompleted);
            }
            this.InvokeAsync("multipleMoveUpTodoInstance", new object[] {
                        context,
                        inputDtos}, this.multipleMoveUpTodoInstanceOperationCompleted, userState);
        }
        
        private void OnmultipleMoveUpTodoInstanceOperationCompleted(object arg) {
            if ((this.multipleMoveUpTodoInstanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.multipleMoveUpTodoInstanceCompleted(this, new multipleMoveUpTodoInstanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://todolistworkorder.m8mwp.service.ellipse.mincom.com", ResponseNamespace="http://todolistworkorder.m8mwp.service.ellipse.mincom.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public AssignTodoListServiceResult assignTodoList([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] OperationContext context, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] AssignTodoListDTO serviceDTO) {
            object[] results = this.Invoke("assignTodoList", new object[] {
                        context,
                        serviceDTO});
            return ((AssignTodoListServiceResult)(results[0]));
        }
        
        /// <remarks/>
        public void assignTodoListAsync(OperationContext context, AssignTodoListDTO serviceDTO) {
            this.assignTodoListAsync(context, serviceDTO, null);
        }
        
        /// <remarks/>
        public void assignTodoListAsync(OperationContext context, AssignTodoListDTO serviceDTO, object userState) {
            if ((this.assignTodoListOperationCompleted == null)) {
                this.assignTodoListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnassignTodoListOperationCompleted);
            }
            this.InvokeAsync("assignTodoList", new object[] {
                        context,
                        serviceDTO}, this.assignTodoListOperationCompleted, userState);
        }
        
        private void OnassignTodoListOperationCompleted(object arg) {
            if ((this.assignTodoListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.assignTodoListCompleted(this, new assignTodoListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://todolistworkorder.m8mwp.service.ellipse.mincom.com", ResponseNamespace="http://todolistworkorder.m8mwp.service.ellipse.mincom.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("out", IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://instances.m8mwp.types.ellipse.mincom.com")]
        public RetrieveTodoInstancesServiceResult[] retrieveTodoInstances([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] OperationContext context, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] TodoListWorkOrderSearchParam searchParams, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] TodoListItemInstanceDTO restart) {
            object[] results = this.Invoke("retrieveTodoInstances", new object[] {
                        context,
                        searchParams,
                        restart});
            return ((RetrieveTodoInstancesServiceResult[])(results[0]));
        }
        
        /// <remarks/>
        public void retrieveTodoInstancesAsync(OperationContext context, TodoListWorkOrderSearchParam searchParams, TodoListItemInstanceDTO restart) {
            this.retrieveTodoInstancesAsync(context, searchParams, restart, null);
        }
        
        /// <remarks/>
        public void retrieveTodoInstancesAsync(OperationContext context, TodoListWorkOrderSearchParam searchParams, TodoListItemInstanceDTO restart, object userState) {
            if ((this.retrieveTodoInstancesOperationCompleted == null)) {
                this.retrieveTodoInstancesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnretrieveTodoInstancesOperationCompleted);
            }
            this.InvokeAsync("retrieveTodoInstances", new object[] {
                        context,
                        searchParams,
                        restart}, this.retrieveTodoInstancesOperationCompleted, userState);
        }
        
        private void OnretrieveTodoInstancesOperationCompleted(object arg) {
            if ((this.retrieveTodoInstancesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.retrieveTodoInstancesCompleted(this, new retrieveTodoInstancesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://todolistworkorder.m8mwp.service.ellipse.mincom.com", ResponseNamespace="http://todolistworkorder.m8mwp.service.ellipse.mincom.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public TodoListWorkOrderServiceResult read([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] OperationContext context, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] TodoListWorkOrderDTO serviceDTO) {
            object[] results = this.Invoke("read", new object[] {
                        context,
                        serviceDTO});
            return ((TodoListWorkOrderServiceResult)(results[0]));
        }
        
        /// <remarks/>
        public void readAsync(OperationContext context, TodoListWorkOrderDTO serviceDTO) {
            this.readAsync(context, serviceDTO, null);
        }
        
        /// <remarks/>
        public void readAsync(OperationContext context, TodoListWorkOrderDTO serviceDTO, object userState) {
            if ((this.readOperationCompleted == null)) {
                this.readOperationCompleted = new System.Threading.SendOrPostCallback(this.OnreadOperationCompleted);
            }
            this.InvokeAsync("read", new object[] {
                        context,
                        serviceDTO}, this.readOperationCompleted, userState);
        }
        
        private void OnreadOperationCompleted(object arg) {
            if ((this.readCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.readCompleted(this, new readCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://todolistworkorder.m8mwp.service.ellipse.mincom.com", ResponseNamespace="http://todolistworkorder.m8mwp.service.ellipse.mincom.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("out", IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://instances.m8mwp.types.ellipse.mincom.com")]
        public TodoListWorkOrderServiceResult[] multipleDeleteTodoInstance([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] OperationContext context, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://instances.m8mwp.types.ellipse.mincom.com")] WorkOrderTodoInstanceDTO[] inputDtos) {
            object[] results = this.Invoke("multipleDeleteTodoInstance", new object[] {
                        context,
                        inputDtos});
            return ((TodoListWorkOrderServiceResult[])(results[0]));
        }
        
        /// <remarks/>
        public void multipleDeleteTodoInstanceAsync(OperationContext context, WorkOrderTodoInstanceDTO[] inputDtos) {
            this.multipleDeleteTodoInstanceAsync(context, inputDtos, null);
        }
        
        /// <remarks/>
        public void multipleDeleteTodoInstanceAsync(OperationContext context, WorkOrderTodoInstanceDTO[] inputDtos, object userState) {
            if ((this.multipleDeleteTodoInstanceOperationCompleted == null)) {
                this.multipleDeleteTodoInstanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmultipleDeleteTodoInstanceOperationCompleted);
            }
            this.InvokeAsync("multipleDeleteTodoInstance", new object[] {
                        context,
                        inputDtos}, this.multipleDeleteTodoInstanceOperationCompleted, userState);
        }
        
        private void OnmultipleDeleteTodoInstanceOperationCompleted(object arg) {
            if ((this.multipleDeleteTodoInstanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.multipleDeleteTodoInstanceCompleted(this, new multipleDeleteTodoInstanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://todolistworkorder.m8mwp.service.ellipse.mincom.com", ResponseNamespace="http://todolistworkorder.m8mwp.service.ellipse.mincom.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public TodoListItemInstanceServiceResult createTodoInstance([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] OperationContext context, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] WorkOrderTodoInstanceDTO serviceDTO) {
            object[] results = this.Invoke("createTodoInstance", new object[] {
                        context,
                        serviceDTO});
            return ((TodoListItemInstanceServiceResult)(results[0]));
        }
        
        /// <remarks/>
        public void createTodoInstanceAsync(OperationContext context, WorkOrderTodoInstanceDTO serviceDTO) {
            this.createTodoInstanceAsync(context, serviceDTO, null);
        }
        
        /// <remarks/>
        public void createTodoInstanceAsync(OperationContext context, WorkOrderTodoInstanceDTO serviceDTO, object userState) {
            if ((this.createTodoInstanceOperationCompleted == null)) {
                this.createTodoInstanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateTodoInstanceOperationCompleted);
            }
            this.InvokeAsync("createTodoInstance", new object[] {
                        context,
                        serviceDTO}, this.createTodoInstanceOperationCompleted, userState);
        }
        
        private void OncreateTodoInstanceOperationCompleted(object arg) {
            if ((this.createTodoInstanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createTodoInstanceCompleted(this, new createTodoInstanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://todolistworkorder.m8mwp.service.ellipse.mincom.com", ResponseNamespace="http://todolistworkorder.m8mwp.service.ellipse.mincom.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("out", IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://instances.m8mwp.types.ellipse.mincom.com")]
        public AssignTodoListServiceResult[] multipleAssignTodoList([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] OperationContext context, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://instances.m8mwp.types.ellipse.mincom.com")] AssignTodoListDTO[] inputDtos) {
            object[] results = this.Invoke("multipleAssignTodoList", new object[] {
                        context,
                        inputDtos});
            return ((AssignTodoListServiceResult[])(results[0]));
        }
        
        /// <remarks/>
        public void multipleAssignTodoListAsync(OperationContext context, AssignTodoListDTO[] inputDtos) {
            this.multipleAssignTodoListAsync(context, inputDtos, null);
        }
        
        /// <remarks/>
        public void multipleAssignTodoListAsync(OperationContext context, AssignTodoListDTO[] inputDtos, object userState) {
            if ((this.multipleAssignTodoListOperationCompleted == null)) {
                this.multipleAssignTodoListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmultipleAssignTodoListOperationCompleted);
            }
            this.InvokeAsync("multipleAssignTodoList", new object[] {
                        context,
                        inputDtos}, this.multipleAssignTodoListOperationCompleted, userState);
        }
        
        private void OnmultipleAssignTodoListOperationCompleted(object arg) {
            if ((this.multipleAssignTodoListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.multipleAssignTodoListCompleted(this, new multipleAssignTodoListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://todolistworkorder.m8mwp.service.ellipse.mincom.com", ResponseNamespace="http://todolistworkorder.m8mwp.service.ellipse.mincom.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public TodoListItemInstanceServiceResult updateTodoInstance([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] OperationContext context, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] WorkOrderTodoInstanceDTO serviceDTO) {
            object[] results = this.Invoke("updateTodoInstance", new object[] {
                        context,
                        serviceDTO});
            return ((TodoListItemInstanceServiceResult)(results[0]));
        }
        
        /// <remarks/>
        public void updateTodoInstanceAsync(OperationContext context, WorkOrderTodoInstanceDTO serviceDTO) {
            this.updateTodoInstanceAsync(context, serviceDTO, null);
        }
        
        /// <remarks/>
        public void updateTodoInstanceAsync(OperationContext context, WorkOrderTodoInstanceDTO serviceDTO, object userState) {
            if ((this.updateTodoInstanceOperationCompleted == null)) {
                this.updateTodoInstanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateTodoInstanceOperationCompleted);
            }
            this.InvokeAsync("updateTodoInstance", new object[] {
                        context,
                        serviceDTO}, this.updateTodoInstanceOperationCompleted, userState);
        }
        
        private void OnupdateTodoInstanceOperationCompleted(object arg) {
            if ((this.updateTodoInstanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateTodoInstanceCompleted(this, new updateTodoInstanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://todolistworkorder.m8mwp.service.ellipse.mincom.com", ResponseNamespace="http://todolistworkorder.m8mwp.service.ellipse.mincom.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("out", IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://instances.m8mwp.types.ellipse.mincom.com")]
        public TodoListWorkOrderBulkUpdateServiceResult[] multipleBulkUpdate([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] OperationContext context, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://instances.m8mwp.types.ellipse.mincom.com")] TodoListWorkOrderBulkUpdateDTO[] inputDtos) {
            object[] results = this.Invoke("multipleBulkUpdate", new object[] {
                        context,
                        inputDtos});
            return ((TodoListWorkOrderBulkUpdateServiceResult[])(results[0]));
        }
        
        /// <remarks/>
        public void multipleBulkUpdateAsync(OperationContext context, TodoListWorkOrderBulkUpdateDTO[] inputDtos) {
            this.multipleBulkUpdateAsync(context, inputDtos, null);
        }
        
        /// <remarks/>
        public void multipleBulkUpdateAsync(OperationContext context, TodoListWorkOrderBulkUpdateDTO[] inputDtos, object userState) {
            if ((this.multipleBulkUpdateOperationCompleted == null)) {
                this.multipleBulkUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmultipleBulkUpdateOperationCompleted);
            }
            this.InvokeAsync("multipleBulkUpdate", new object[] {
                        context,
                        inputDtos}, this.multipleBulkUpdateOperationCompleted, userState);
        }
        
        private void OnmultipleBulkUpdateOperationCompleted(object arg) {
            if ((this.multipleBulkUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.multipleBulkUpdateCompleted(this, new multipleBulkUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://todolistworkorder.m8mwp.service.ellipse.mincom.com", ResponseNamespace="http://todolistworkorder.m8mwp.service.ellipse.mincom.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("out", IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://instances.m8mwp.types.ellipse.mincom.com")]
        public WorkOrderTodoInstanceServiceResult[] searchByWorkGroup([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] OperationContext context, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] WorkGroupTodoInstanceSearchParam searchParams, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] WorkOrderTodoInstanceDTO restart) {
            object[] results = this.Invoke("searchByWorkGroup", new object[] {
                        context,
                        searchParams,
                        restart});
            return ((WorkOrderTodoInstanceServiceResult[])(results[0]));
        }
        
        /// <remarks/>
        public void searchByWorkGroupAsync(OperationContext context, WorkGroupTodoInstanceSearchParam searchParams, WorkOrderTodoInstanceDTO restart) {
            this.searchByWorkGroupAsync(context, searchParams, restart, null);
        }
        
        /// <remarks/>
        public void searchByWorkGroupAsync(OperationContext context, WorkGroupTodoInstanceSearchParam searchParams, WorkOrderTodoInstanceDTO restart, object userState) {
            if ((this.searchByWorkGroupOperationCompleted == null)) {
                this.searchByWorkGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchByWorkGroupOperationCompleted);
            }
            this.InvokeAsync("searchByWorkGroup", new object[] {
                        context,
                        searchParams,
                        restart}, this.searchByWorkGroupOperationCompleted, userState);
        }
        
        private void OnsearchByWorkGroupOperationCompleted(object arg) {
            if ((this.searchByWorkGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchByWorkGroupCompleted(this, new searchByWorkGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://todolistworkorder.m8mwp.service.ellipse.mincom.com", ResponseNamespace="http://todolistworkorder.m8mwp.service.ellipse.mincom.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("out", IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://instances.m8mwp.types.ellipse.mincom.com")]
        public WorkOrderTodoInstanceServiceResult[] multipleReadTodoInstance([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] OperationContext context, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://instances.m8mwp.types.ellipse.mincom.com")] WorkOrderTodoInstanceDTO[] inputDtos) {
            object[] results = this.Invoke("multipleReadTodoInstance", new object[] {
                        context,
                        inputDtos});
            return ((WorkOrderTodoInstanceServiceResult[])(results[0]));
        }
        
        /// <remarks/>
        public void multipleReadTodoInstanceAsync(OperationContext context, WorkOrderTodoInstanceDTO[] inputDtos) {
            this.multipleReadTodoInstanceAsync(context, inputDtos, null);
        }
        
        /// <remarks/>
        public void multipleReadTodoInstanceAsync(OperationContext context, WorkOrderTodoInstanceDTO[] inputDtos, object userState) {
            if ((this.multipleReadTodoInstanceOperationCompleted == null)) {
                this.multipleReadTodoInstanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmultipleReadTodoInstanceOperationCompleted);
            }
            this.InvokeAsync("multipleReadTodoInstance", new object[] {
                        context,
                        inputDtos}, this.multipleReadTodoInstanceOperationCompleted, userState);
        }
        
        private void OnmultipleReadTodoInstanceOperationCompleted(object arg) {
            if ((this.multipleReadTodoInstanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.multipleReadTodoInstanceCompleted(this, new multipleReadTodoInstanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://todolistworkorder.m8mwp.service.ellipse.mincom.com", ResponseNamespace="http://todolistworkorder.m8mwp.service.ellipse.mincom.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public TodoListItemInstanceServiceResult moveUpTodoInstance([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] OperationContext context, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] WorkOrderTodoInstanceDTO serviceDTO) {
            object[] results = this.Invoke("moveUpTodoInstance", new object[] {
                        context,
                        serviceDTO});
            return ((TodoListItemInstanceServiceResult)(results[0]));
        }
        
        /// <remarks/>
        public void moveUpTodoInstanceAsync(OperationContext context, WorkOrderTodoInstanceDTO serviceDTO) {
            this.moveUpTodoInstanceAsync(context, serviceDTO, null);
        }
        
        /// <remarks/>
        public void moveUpTodoInstanceAsync(OperationContext context, WorkOrderTodoInstanceDTO serviceDTO, object userState) {
            if ((this.moveUpTodoInstanceOperationCompleted == null)) {
                this.moveUpTodoInstanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmoveUpTodoInstanceOperationCompleted);
            }
            this.InvokeAsync("moveUpTodoInstance", new object[] {
                        context,
                        serviceDTO}, this.moveUpTodoInstanceOperationCompleted, userState);
        }
        
        private void OnmoveUpTodoInstanceOperationCompleted(object arg) {
            if ((this.moveUpTodoInstanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.moveUpTodoInstanceCompleted(this, new moveUpTodoInstanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://todolistworkorder.m8mwp.service.ellipse.mincom.com", ResponseNamespace="http://todolistworkorder.m8mwp.service.ellipse.mincom.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("out", IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://instances.m8mwp.types.ellipse.mincom.com")]
        public TodoListItemInstanceServiceResult[] multipleCreateTodoInstance([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] OperationContext context, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://instances.m8mwp.types.ellipse.mincom.com")] WorkOrderTodoInstanceDTO[] inputDtos) {
            object[] results = this.Invoke("multipleCreateTodoInstance", new object[] {
                        context,
                        inputDtos});
            return ((TodoListItemInstanceServiceResult[])(results[0]));
        }
        
        /// <remarks/>
        public void multipleCreateTodoInstanceAsync(OperationContext context, WorkOrderTodoInstanceDTO[] inputDtos) {
            this.multipleCreateTodoInstanceAsync(context, inputDtos, null);
        }
        
        /// <remarks/>
        public void multipleCreateTodoInstanceAsync(OperationContext context, WorkOrderTodoInstanceDTO[] inputDtos, object userState) {
            if ((this.multipleCreateTodoInstanceOperationCompleted == null)) {
                this.multipleCreateTodoInstanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmultipleCreateTodoInstanceOperationCompleted);
            }
            this.InvokeAsync("multipleCreateTodoInstance", new object[] {
                        context,
                        inputDtos}, this.multipleCreateTodoInstanceOperationCompleted, userState);
        }
        
        private void OnmultipleCreateTodoInstanceOperationCompleted(object arg) {
            if ((this.multipleCreateTodoInstanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.multipleCreateTodoInstanceCompleted(this, new multipleCreateTodoInstanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://todolistworkorder.m8mwp.service.ellipse.mincom.com", ResponseNamespace="http://todolistworkorder.m8mwp.service.ellipse.mincom.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public TodoListWorkOrderBulkUpdateServiceResult bulkUpdate([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] OperationContext context, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] TodoListWorkOrderBulkUpdateDTO serviceDTO) {
            object[] results = this.Invoke("bulkUpdate", new object[] {
                        context,
                        serviceDTO});
            return ((TodoListWorkOrderBulkUpdateServiceResult)(results[0]));
        }
        
        /// <remarks/>
        public void bulkUpdateAsync(OperationContext context, TodoListWorkOrderBulkUpdateDTO serviceDTO) {
            this.bulkUpdateAsync(context, serviceDTO, null);
        }
        
        /// <remarks/>
        public void bulkUpdateAsync(OperationContext context, TodoListWorkOrderBulkUpdateDTO serviceDTO, object userState) {
            if ((this.bulkUpdateOperationCompleted == null)) {
                this.bulkUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnbulkUpdateOperationCompleted);
            }
            this.InvokeAsync("bulkUpdate", new object[] {
                        context,
                        serviceDTO}, this.bulkUpdateOperationCompleted, userState);
        }
        
        private void OnbulkUpdateOperationCompleted(object arg) {
            if ((this.bulkUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.bulkUpdateCompleted(this, new bulkUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://todolistworkorder.m8mwp.service.ellipse.mincom.com", ResponseNamespace="http://todolistworkorder.m8mwp.service.ellipse.mincom.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public TodoListItemInstanceServiceResult moveDownTodoInstance([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] OperationContext context, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] WorkOrderTodoInstanceDTO serviceDTO) {
            object[] results = this.Invoke("moveDownTodoInstance", new object[] {
                        context,
                        serviceDTO});
            return ((TodoListItemInstanceServiceResult)(results[0]));
        }
        
        /// <remarks/>
        public void moveDownTodoInstanceAsync(OperationContext context, WorkOrderTodoInstanceDTO serviceDTO) {
            this.moveDownTodoInstanceAsync(context, serviceDTO, null);
        }
        
        /// <remarks/>
        public void moveDownTodoInstanceAsync(OperationContext context, WorkOrderTodoInstanceDTO serviceDTO, object userState) {
            if ((this.moveDownTodoInstanceOperationCompleted == null)) {
                this.moveDownTodoInstanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmoveDownTodoInstanceOperationCompleted);
            }
            this.InvokeAsync("moveDownTodoInstance", new object[] {
                        context,
                        serviceDTO}, this.moveDownTodoInstanceOperationCompleted, userState);
        }
        
        private void OnmoveDownTodoInstanceOperationCompleted(object arg) {
            if ((this.moveDownTodoInstanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.moveDownTodoInstanceCompleted(this, new moveDownTodoInstanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://todolistworkorder.m8mwp.service.ellipse.mincom.com", ResponseNamespace="http://todolistworkorder.m8mwp.service.ellipse.mincom.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("out", IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://instances.m8mwp.types.ellipse.mincom.com")]
        public TodoListWorkOrderServiceResult[] multipleRead([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] OperationContext context, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://instances.m8mwp.types.ellipse.mincom.com")] TodoListWorkOrderDTO[] inputDtos) {
            object[] results = this.Invoke("multipleRead", new object[] {
                        context,
                        inputDtos});
            return ((TodoListWorkOrderServiceResult[])(results[0]));
        }
        
        /// <remarks/>
        public void multipleReadAsync(OperationContext context, TodoListWorkOrderDTO[] inputDtos) {
            this.multipleReadAsync(context, inputDtos, null);
        }
        
        /// <remarks/>
        public void multipleReadAsync(OperationContext context, TodoListWorkOrderDTO[] inputDtos, object userState) {
            if ((this.multipleReadOperationCompleted == null)) {
                this.multipleReadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmultipleReadOperationCompleted);
            }
            this.InvokeAsync("multipleRead", new object[] {
                        context,
                        inputDtos}, this.multipleReadOperationCompleted, userState);
        }
        
        private void OnmultipleReadOperationCompleted(object arg) {
            if ((this.multipleReadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.multipleReadCompleted(this, new multipleReadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://todolistworkorder.m8mwp.service.ellipse.mincom.com", ResponseNamespace="http://todolistworkorder.m8mwp.service.ellipse.mincom.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("out", IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://instances.m8mwp.types.ellipse.mincom.com")]
        public TodoListWorkOrderServiceResult[] multipleCreate([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] OperationContext context, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://instances.m8mwp.types.ellipse.mincom.com")] TodoListWorkOrderDTO[] inputDtos) {
            object[] results = this.Invoke("multipleCreate", new object[] {
                        context,
                        inputDtos});
            return ((TodoListWorkOrderServiceResult[])(results[0]));
        }
        
        /// <remarks/>
        public void multipleCreateAsync(OperationContext context, TodoListWorkOrderDTO[] inputDtos) {
            this.multipleCreateAsync(context, inputDtos, null);
        }
        
        /// <remarks/>
        public void multipleCreateAsync(OperationContext context, TodoListWorkOrderDTO[] inputDtos, object userState) {
            if ((this.multipleCreateOperationCompleted == null)) {
                this.multipleCreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmultipleCreateOperationCompleted);
            }
            this.InvokeAsync("multipleCreate", new object[] {
                        context,
                        inputDtos}, this.multipleCreateOperationCompleted, userState);
        }
        
        private void OnmultipleCreateOperationCompleted(object arg) {
            if ((this.multipleCreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.multipleCreateCompleted(this, new multipleCreateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://connectivity.service.ews.mincom.com")]
    public partial class OperationContext {
        
        private string applicationClientIdField;
        
        private string districtField;
        
        private bool eventDisableField;
        
        private bool eventDisableFieldSpecified;
        
        private int maxInstancesField;
        
        private bool maxInstancesFieldSpecified;
        
        private string positionField;
        
        private bool returnWarningsField;
        
        private bool returnWarningsFieldSpecified;
        
        private RunAs runAsField;
        
        private string tenantIdField;
        
        private bool traceField;
        
        private bool traceFieldSpecified;
        
        private string transactionField;
        
        /// <remarks/>
        public string applicationClientId {
            get {
                return this.applicationClientIdField;
            }
            set {
                this.applicationClientIdField = value;
            }
        }
        
        /// <remarks/>
        public string district {
            get {
                return this.districtField;
            }
            set {
                this.districtField = value;
            }
        }
        
        /// <remarks/>
        public bool eventDisable {
            get {
                return this.eventDisableField;
            }
            set {
                this.eventDisableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool eventDisableSpecified {
            get {
                return this.eventDisableFieldSpecified;
            }
            set {
                this.eventDisableFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int maxInstances {
            get {
                return this.maxInstancesField;
            }
            set {
                this.maxInstancesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool maxInstancesSpecified {
            get {
                return this.maxInstancesFieldSpecified;
            }
            set {
                this.maxInstancesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string position {
            get {
                return this.positionField;
            }
            set {
                this.positionField = value;
            }
        }
        
        /// <remarks/>
        public bool returnWarnings {
            get {
                return this.returnWarningsField;
            }
            set {
                this.returnWarningsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool returnWarningsSpecified {
            get {
                return this.returnWarningsFieldSpecified;
            }
            set {
                this.returnWarningsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public RunAs runAs {
            get {
                return this.runAsField;
            }
            set {
                this.runAsField = value;
            }
        }
        
        /// <remarks/>
        public string tenantId {
            get {
                return this.tenantIdField;
            }
            set {
                this.tenantIdField = value;
            }
        }
        
        /// <remarks/>
        public bool trace {
            get {
                return this.traceField;
            }
            set {
                this.traceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool traceSpecified {
            get {
                return this.traceFieldSpecified;
            }
            set {
                this.traceFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string transaction {
            get {
                return this.transactionField;
            }
            set {
                this.transactionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://connectivity.service.ews.mincom.com")]
    public partial class RunAs {
        
        private string districtField;
        
        private string positionField;
        
        private string userField;
        
        /// <remarks/>
        public string district {
            get {
                return this.districtField;
            }
            set {
                this.districtField = value;
            }
        }
        
        /// <remarks/>
        public string position {
            get {
                return this.positionField;
            }
            set {
                this.positionField = value;
            }
        }
        
        /// <remarks/>
        public string user {
            get {
                return this.userField;
            }
            set {
                this.userField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://service.ellipse.mincom.com")]
    public partial class ServiceRequiredAttributes {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ServiceResult))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TodoListWorkOrderBulkUpdateServiceResult))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RetrieveTodoInstancesServiceResult))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AssignTodoListServiceResult))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WorkOrderTodoInstanceServiceResult))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TodoListWorkOrderServiceResult))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TodoListItemInstanceServiceResult))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://service.ellipse.mincom.com")]
    public abstract partial class BaseServiceResult {
        
        private Error[] errorsField;
        
        private Message[] informationalMessagesField;
        
        private Warning[] warningsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://errors.ellipse.mincom.com")]
        public Error[] errors {
            get {
                return this.errorsField;
            }
            set {
                this.errorsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://errors.ellipse.mincom.com")]
        public Message[] informationalMessages {
            get {
                return this.informationalMessagesField;
            }
            set {
                this.informationalMessagesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://errors.ellipse.mincom.com")]
        public Warning[] warnings {
            get {
                return this.warningsField;
            }
            set {
                this.warningsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://errors.ellipse.mincom.com")]
    public partial class Error : Message {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Warning))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Error))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://errors.ellipse.mincom.com")]
    public partial class Message {
        
        private string fieldIdField;
        
        private int fieldIndexField;
        
        private bool fieldIndexFieldSpecified;
        
        private bool localisableField;
        
        private bool localisableFieldSpecified;
        
        private string messageIdField;
        
        private string messageInstanceField;
        
        private string messageTextField;
        
        private string parentInstanceField;
        
        private string userField;
        
        /// <remarks/>
        public string fieldId {
            get {
                return this.fieldIdField;
            }
            set {
                this.fieldIdField = value;
            }
        }
        
        /// <remarks/>
        public int fieldIndex {
            get {
                return this.fieldIndexField;
            }
            set {
                this.fieldIndexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool fieldIndexSpecified {
            get {
                return this.fieldIndexFieldSpecified;
            }
            set {
                this.fieldIndexFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool localisable {
            get {
                return this.localisableField;
            }
            set {
                this.localisableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localisableSpecified {
            get {
                return this.localisableFieldSpecified;
            }
            set {
                this.localisableFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string messageId {
            get {
                return this.messageIdField;
            }
            set {
                this.messageIdField = value;
            }
        }
        
        /// <remarks/>
        public string messageInstance {
            get {
                return this.messageInstanceField;
            }
            set {
                this.messageInstanceField = value;
            }
        }
        
        /// <remarks/>
        public string messageText {
            get {
                return this.messageTextField;
            }
            set {
                this.messageTextField = value;
            }
        }
        
        /// <remarks/>
        public string parentInstance {
            get {
                return this.parentInstanceField;
            }
            set {
                this.parentInstanceField = value;
            }
        }
        
        /// <remarks/>
        public string user {
            get {
                return this.userField;
            }
            set {
                this.userField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://errors.ellipse.mincom.com")]
    public partial class Warning : Message {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TodoListWorkOrderBulkUpdateServiceResult))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RetrieveTodoInstancesServiceResult))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AssignTodoListServiceResult))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WorkOrderTodoInstanceServiceResult))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TodoListWorkOrderServiceResult))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TodoListItemInstanceServiceResult))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://service.ellipse.mincom.com")]
    public partial class ServiceResult : BaseServiceResult {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://instances.m8mwp.types.ellipse.mincom.com")]
    public partial class TodoListWorkOrderBulkUpdateServiceResult : ServiceResult {
        
        private TodoListWorkOrderBulkUpdateDTO todoListWorkOrderBulkUpdateDTOField;
        
        /// <remarks/>
        public TodoListWorkOrderBulkUpdateDTO todoListWorkOrderBulkUpdateDTO {
            get {
                return this.todoListWorkOrderBulkUpdateDTOField;
            }
            set {
                this.todoListWorkOrderBulkUpdateDTOField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://instances.m8mwp.types.ellipse.mincom.com")]
    public partial class TodoListWorkOrderBulkUpdateDTO : ServiceDTO {
        
        private System.DateTime bulkExpirationDateField;
        
        private bool bulkExpirationDateFieldSpecified;
        
        private string bulkExternalReferenceField;
        
        private string bulkNeededForReleaseField;
        
        private string bulkOwnerField;
        
        private System.DateTime bulkRequiredByDateField;
        
        private bool bulkRequiredByDateFieldSpecified;
        
        private string bulkStatusCodeField;
        
        private bool expirationDateUnsetField;
        
        private bool expirationDateUnsetFieldSpecified;
        
        private bool externalReferenceUnsetField;
        
        private bool externalReferenceUnsetFieldSpecified;
        
        private bool ownerUnsetField;
        
        private bool ownerUnsetFieldSpecified;
        
        private bool requiredByDateUnsetField;
        
        private bool requiredByDateUnsetFieldSpecified;
        
        private bool statusCodeUnsetField;
        
        private bool statusCodeUnsetFieldSpecified;
        
        private WorkOrderTodoInstanceDTO todoToUpdateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        public System.DateTime bulkExpirationDate {
            get {
                return this.bulkExpirationDateField;
            }
            set {
                this.bulkExpirationDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool bulkExpirationDateSpecified {
            get {
                return this.bulkExpirationDateFieldSpecified;
            }
            set {
                this.bulkExpirationDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string bulkExternalReference {
            get {
                return this.bulkExternalReferenceField;
            }
            set {
                this.bulkExternalReferenceField = value;
            }
        }
        
        /// <remarks/>
        public string bulkNeededForRelease {
            get {
                return this.bulkNeededForReleaseField;
            }
            set {
                this.bulkNeededForReleaseField = value;
            }
        }
        
        /// <remarks/>
        public string bulkOwner {
            get {
                return this.bulkOwnerField;
            }
            set {
                this.bulkOwnerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        public System.DateTime bulkRequiredByDate {
            get {
                return this.bulkRequiredByDateField;
            }
            set {
                this.bulkRequiredByDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool bulkRequiredByDateSpecified {
            get {
                return this.bulkRequiredByDateFieldSpecified;
            }
            set {
                this.bulkRequiredByDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string bulkStatusCode {
            get {
                return this.bulkStatusCodeField;
            }
            set {
                this.bulkStatusCodeField = value;
            }
        }
        
        /// <remarks/>
        public bool expirationDateUnset {
            get {
                return this.expirationDateUnsetField;
            }
            set {
                this.expirationDateUnsetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool expirationDateUnsetSpecified {
            get {
                return this.expirationDateUnsetFieldSpecified;
            }
            set {
                this.expirationDateUnsetFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool externalReferenceUnset {
            get {
                return this.externalReferenceUnsetField;
            }
            set {
                this.externalReferenceUnsetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalReferenceUnsetSpecified {
            get {
                return this.externalReferenceUnsetFieldSpecified;
            }
            set {
                this.externalReferenceUnsetFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool ownerUnset {
            get {
                return this.ownerUnsetField;
            }
            set {
                this.ownerUnsetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ownerUnsetSpecified {
            get {
                return this.ownerUnsetFieldSpecified;
            }
            set {
                this.ownerUnsetFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool requiredByDateUnset {
            get {
                return this.requiredByDateUnsetField;
            }
            set {
                this.requiredByDateUnsetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool requiredByDateUnsetSpecified {
            get {
                return this.requiredByDateUnsetFieldSpecified;
            }
            set {
                this.requiredByDateUnsetFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool statusCodeUnset {
            get {
                return this.statusCodeUnsetField;
            }
            set {
                this.statusCodeUnsetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool statusCodeUnsetSpecified {
            get {
                return this.statusCodeUnsetFieldSpecified;
            }
            set {
                this.statusCodeUnsetFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public WorkOrderTodoInstanceDTO todoToUpdate {
            get {
                return this.todoToUpdateField;
            }
            set {
                this.todoToUpdateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://instances.m8mwp.types.ellipse.mincom.com")]
    public partial class WorkOrderTodoInstanceDTO : ServiceDTO {
        
        private string districtCodeField;
        
        private System.DateTime expirationDateField;
        
        private bool expirationDateFieldSpecified;
        
        private string externalReferenceField;
        
        private string itemNameField;
        
        private bool neededForReleaseField;
        
        private bool neededForReleaseFieldSpecified;
        
        private string notesField;
        
        private string ownerField;
        
        private System.DateTime planFinDateField;
        
        private bool planFinDateFieldSpecified;
        
        private System.DateTime planStrDateField;
        
        private bool planStrDateFieldSpecified;
        
        private System.DateTime requiredByDateField;
        
        private bool requiredByDateFieldSpecified;
        
        private decimal sequenceField;
        
        private bool sequenceFieldSpecified;
        
        private string statusCodeField;
        
        private string taskStatusMField;
        
        private string todoListItemInstanceIdField;
        
        private string woStatusMField;
        
        private string workOrderField;
        
        private string workOrderDescField;
        
        private string workOrderTaskField;
        
        private string workOrderTaskDescField;
        
        /// <remarks/>
        public string districtCode {
            get {
                return this.districtCodeField;
            }
            set {
                this.districtCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        public System.DateTime expirationDate {
            get {
                return this.expirationDateField;
            }
            set {
                this.expirationDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool expirationDateSpecified {
            get {
                return this.expirationDateFieldSpecified;
            }
            set {
                this.expirationDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string externalReference {
            get {
                return this.externalReferenceField;
            }
            set {
                this.externalReferenceField = value;
            }
        }
        
        /// <remarks/>
        public string itemName {
            get {
                return this.itemNameField;
            }
            set {
                this.itemNameField = value;
            }
        }
        
        /// <remarks/>
        public bool neededForRelease {
            get {
                return this.neededForReleaseField;
            }
            set {
                this.neededForReleaseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool neededForReleaseSpecified {
            get {
                return this.neededForReleaseFieldSpecified;
            }
            set {
                this.neededForReleaseFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string notes {
            get {
                return this.notesField;
            }
            set {
                this.notesField = value;
            }
        }
        
        /// <remarks/>
        public string owner {
            get {
                return this.ownerField;
            }
            set {
                this.ownerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        public System.DateTime planFinDate {
            get {
                return this.planFinDateField;
            }
            set {
                this.planFinDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool planFinDateSpecified {
            get {
                return this.planFinDateFieldSpecified;
            }
            set {
                this.planFinDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        public System.DateTime planStrDate {
            get {
                return this.planStrDateField;
            }
            set {
                this.planStrDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool planStrDateSpecified {
            get {
                return this.planStrDateFieldSpecified;
            }
            set {
                this.planStrDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        public System.DateTime requiredByDate {
            get {
                return this.requiredByDateField;
            }
            set {
                this.requiredByDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool requiredByDateSpecified {
            get {
                return this.requiredByDateFieldSpecified;
            }
            set {
                this.requiredByDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public decimal sequence {
            get {
                return this.sequenceField;
            }
            set {
                this.sequenceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified {
            get {
                return this.sequenceFieldSpecified;
            }
            set {
                this.sequenceFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string statusCode {
            get {
                return this.statusCodeField;
            }
            set {
                this.statusCodeField = value;
            }
        }
        
        /// <remarks/>
        public string taskStatusM {
            get {
                return this.taskStatusMField;
            }
            set {
                this.taskStatusMField = value;
            }
        }
        
        /// <remarks/>
        public string todoListItemInstanceId {
            get {
                return this.todoListItemInstanceIdField;
            }
            set {
                this.todoListItemInstanceIdField = value;
            }
        }
        
        /// <remarks/>
        public string woStatusM {
            get {
                return this.woStatusMField;
            }
            set {
                this.woStatusMField = value;
            }
        }
        
        /// <remarks/>
        public string workOrder {
            get {
                return this.workOrderField;
            }
            set {
                this.workOrderField = value;
            }
        }
        
        /// <remarks/>
        public string workOrderDesc {
            get {
                return this.workOrderDescField;
            }
            set {
                this.workOrderDescField = value;
            }
        }
        
        /// <remarks/>
        public string workOrderTask {
            get {
                return this.workOrderTaskField;
            }
            set {
                this.workOrderTaskField = value;
            }
        }
        
        /// <remarks/>
        public string workOrderTaskDesc {
            get {
                return this.workOrderTaskDescField;
            }
            set {
                this.workOrderTaskDescField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AbstractSearchParam))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WorkGroupTodoInstanceSearchParam))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TodoListWorkOrderSearchParam))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TodoListWorkOrderBulkUpdateDTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AssignTodoListDTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TodoListWorkOrderDTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TodoListItemInstanceDTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WorkOrderTodoInstanceDTO))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://service.ellipse.mincom.com")]
    public abstract partial class ServiceDTO : Base {
        
        private Attribute[] customAttributesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://attribute.ellipse.mincom.com")]
        public Attribute[] customAttributes {
            get {
                return this.customAttributesField;
            }
            set {
                this.customAttributesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://attribute.ellipse.mincom.com")]
    public partial class Attribute {
        
        private string nameField;
        
        private string namespaceField;
        
        private anyType2anyTypeMapEntry[] propertiesField;
        
        private string valueField;
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string @namespace {
            get {
                return this.namespaceField;
            }
            set {
                this.namespaceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("entry", Namespace="http://todolistworkorder.m8mwp.service.ellipse.mincom.com", IsNullable=false)]
        public anyType2anyTypeMapEntry[] properties {
            get {
                return this.propertiesField;
            }
            set {
                this.propertiesField = value;
            }
        }
        
        /// <remarks/>
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://todolistworkorder.m8mwp.service.ellipse.mincom.com")]
    public partial class anyType2anyTypeMapEntry {
        
        private object keyField;
        
        private object valueField;
        
        /// <remarks/>
        public object key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        public object value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ServiceDTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AbstractSearchParam))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WorkGroupTodoInstanceSearchParam))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TodoListWorkOrderSearchParam))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TodoListWorkOrderBulkUpdateDTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AssignTodoListDTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TodoListWorkOrderDTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TodoListItemInstanceDTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WorkOrderTodoInstanceDTO))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://instances.base.types.ellipse.mincom.com")]
    public abstract partial class Base {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WorkGroupTodoInstanceSearchParam))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TodoListWorkOrderSearchParam))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://service.ellipse.mincom.com")]
    public abstract partial class AbstractSearchParam : ServiceDTO {
        
        private ServiceRequiredAttributes serviceRequiredAttributesField;
        
        /// <remarks/>
        public ServiceRequiredAttributes serviceRequiredAttributes {
            get {
                return this.serviceRequiredAttributesField;
            }
            set {
                this.serviceRequiredAttributesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://instances.m8mwp.types.ellipse.mincom.com")]
    public partial class WorkGroupTodoInstanceSearchParam : AbstractSearchParam {
        
        private string[] crewsField;
        
        private System.DateTime expirationDateFromField;
        
        private bool expirationDateFromFieldSpecified;
        
        private System.DateTime expirationDateToField;
        
        private bool expirationDateToFieldSpecified;
        
        private bool includeClosedField;
        
        private bool includeClosedFieldSpecified;
        
        private string itemNameField;
        
        private bool neededForReleaseField;
        
        private bool neededForReleaseFieldSpecified;
        
        private bool overdueExpiredDateField;
        
        private bool overdueExpiredDateFieldSpecified;
        
        private bool overduePlannedStartDateField;
        
        private bool overduePlannedStartDateFieldSpecified;
        
        private bool overdueRequiredByDateField;
        
        private bool overdueRequiredByDateFieldSpecified;
        
        private string ownerField;
        
        private System.DateTime plannedStartDateFromField;
        
        private bool plannedStartDateFromFieldSpecified;
        
        private System.DateTime plannedStartDateToField;
        
        private bool plannedStartDateToFieldSpecified;
        
        private System.DateTime requiredByDateFromField;
        
        private bool requiredByDateFromFieldSpecified;
        
        private System.DateTime requiredByDateToField;
        
        private bool requiredByDateToFieldSpecified;
        
        private string searchTypeField;
        
        private string statusCodeField;
        
        private string[] workGroupField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://todolistworkorder.m8mwp.service.ellipse.mincom.com")]
        public string[] crews {
            get {
                return this.crewsField;
            }
            set {
                this.crewsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        public System.DateTime expirationDateFrom {
            get {
                return this.expirationDateFromField;
            }
            set {
                this.expirationDateFromField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool expirationDateFromSpecified {
            get {
                return this.expirationDateFromFieldSpecified;
            }
            set {
                this.expirationDateFromFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        public System.DateTime expirationDateTo {
            get {
                return this.expirationDateToField;
            }
            set {
                this.expirationDateToField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool expirationDateToSpecified {
            get {
                return this.expirationDateToFieldSpecified;
            }
            set {
                this.expirationDateToFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool includeClosed {
            get {
                return this.includeClosedField;
            }
            set {
                this.includeClosedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool includeClosedSpecified {
            get {
                return this.includeClosedFieldSpecified;
            }
            set {
                this.includeClosedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string itemName {
            get {
                return this.itemNameField;
            }
            set {
                this.itemNameField = value;
            }
        }
        
        /// <remarks/>
        public bool neededForRelease {
            get {
                return this.neededForReleaseField;
            }
            set {
                this.neededForReleaseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool neededForReleaseSpecified {
            get {
                return this.neededForReleaseFieldSpecified;
            }
            set {
                this.neededForReleaseFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool overdueExpiredDate {
            get {
                return this.overdueExpiredDateField;
            }
            set {
                this.overdueExpiredDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool overdueExpiredDateSpecified {
            get {
                return this.overdueExpiredDateFieldSpecified;
            }
            set {
                this.overdueExpiredDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool overduePlannedStartDate {
            get {
                return this.overduePlannedStartDateField;
            }
            set {
                this.overduePlannedStartDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool overduePlannedStartDateSpecified {
            get {
                return this.overduePlannedStartDateFieldSpecified;
            }
            set {
                this.overduePlannedStartDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool overdueRequiredByDate {
            get {
                return this.overdueRequiredByDateField;
            }
            set {
                this.overdueRequiredByDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool overdueRequiredByDateSpecified {
            get {
                return this.overdueRequiredByDateFieldSpecified;
            }
            set {
                this.overdueRequiredByDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string owner {
            get {
                return this.ownerField;
            }
            set {
                this.ownerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        public System.DateTime plannedStartDateFrom {
            get {
                return this.plannedStartDateFromField;
            }
            set {
                this.plannedStartDateFromField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool plannedStartDateFromSpecified {
            get {
                return this.plannedStartDateFromFieldSpecified;
            }
            set {
                this.plannedStartDateFromFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        public System.DateTime plannedStartDateTo {
            get {
                return this.plannedStartDateToField;
            }
            set {
                this.plannedStartDateToField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool plannedStartDateToSpecified {
            get {
                return this.plannedStartDateToFieldSpecified;
            }
            set {
                this.plannedStartDateToFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        public System.DateTime requiredByDateFrom {
            get {
                return this.requiredByDateFromField;
            }
            set {
                this.requiredByDateFromField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool requiredByDateFromSpecified {
            get {
                return this.requiredByDateFromFieldSpecified;
            }
            set {
                this.requiredByDateFromFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        public System.DateTime requiredByDateTo {
            get {
                return this.requiredByDateToField;
            }
            set {
                this.requiredByDateToField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool requiredByDateToSpecified {
            get {
                return this.requiredByDateToFieldSpecified;
            }
            set {
                this.requiredByDateToFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string searchType {
            get {
                return this.searchTypeField;
            }
            set {
                this.searchTypeField = value;
            }
        }
        
        /// <remarks/>
        public string statusCode {
            get {
                return this.statusCodeField;
            }
            set {
                this.statusCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://todolistworkorder.m8mwp.service.ellipse.mincom.com")]
        public string[] workGroup {
            get {
                return this.workGroupField;
            }
            set {
                this.workGroupField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://instances.m8mwp.types.ellipse.mincom.com")]
    public partial class TodoListWorkOrderSearchParam : AbstractSearchParam {
        
        private string districtCodeField;
        
        private string workOrderField;
        
        private string workOrderTaskField;
        
        /// <remarks/>
        public string districtCode {
            get {
                return this.districtCodeField;
            }
            set {
                this.districtCodeField = value;
            }
        }
        
        /// <remarks/>
        public string workOrder {
            get {
                return this.workOrderField;
            }
            set {
                this.workOrderField = value;
            }
        }
        
        /// <remarks/>
        public string workOrderTask {
            get {
                return this.workOrderTaskField;
            }
            set {
                this.workOrderTaskField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://instances.m8mwp.types.ellipse.mincom.com")]
    public partial class AssignTodoListDTO : ServiceDTO {
        
        private string assignToField;
        
        private string dispatchTypeField;
        
        private string districtCodeField;
        
        private System.DateTime expirationDateField;
        
        private bool expirationDateFieldSpecified;
        
        private string hasAssignTodoField;
        
        private System.DateTime requiredByDateField;
        
        private bool requiredByDateFieldSpecified;
        
        private string todoListIdField;
        
        private string todoListNameField;
        
        private string workOrderField;
        
        private string workOrderTaskField;
        
        /// <remarks/>
        public string assignTo {
            get {
                return this.assignToField;
            }
            set {
                this.assignToField = value;
            }
        }
        
        /// <remarks/>
        public string dispatchType {
            get {
                return this.dispatchTypeField;
            }
            set {
                this.dispatchTypeField = value;
            }
        }
        
        /// <remarks/>
        public string districtCode {
            get {
                return this.districtCodeField;
            }
            set {
                this.districtCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        public System.DateTime expirationDate {
            get {
                return this.expirationDateField;
            }
            set {
                this.expirationDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool expirationDateSpecified {
            get {
                return this.expirationDateFieldSpecified;
            }
            set {
                this.expirationDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string hasAssignTodo {
            get {
                return this.hasAssignTodoField;
            }
            set {
                this.hasAssignTodoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        public System.DateTime requiredByDate {
            get {
                return this.requiredByDateField;
            }
            set {
                this.requiredByDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool requiredByDateSpecified {
            get {
                return this.requiredByDateFieldSpecified;
            }
            set {
                this.requiredByDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string todoListId {
            get {
                return this.todoListIdField;
            }
            set {
                this.todoListIdField = value;
            }
        }
        
        /// <remarks/>
        public string todoListName {
            get {
                return this.todoListNameField;
            }
            set {
                this.todoListNameField = value;
            }
        }
        
        /// <remarks/>
        public string workOrder {
            get {
                return this.workOrderField;
            }
            set {
                this.workOrderField = value;
            }
        }
        
        /// <remarks/>
        public string workOrderTask {
            get {
                return this.workOrderTaskField;
            }
            set {
                this.workOrderTaskField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://instances.m8mwp.types.ellipse.mincom.com")]
    public partial class TodoListWorkOrderDTO : ServiceDTO {
        
        private string districtCodeField;
        
        private string todoListItemInstanceIdField;
        
        private string todoListWorkOrderIdField;
        
        private string workOrderField;
        
        private string workOrderTaskField;
        
        /// <remarks/>
        public string districtCode {
            get {
                return this.districtCodeField;
            }
            set {
                this.districtCodeField = value;
            }
        }
        
        /// <remarks/>
        public string todoListItemInstanceId {
            get {
                return this.todoListItemInstanceIdField;
            }
            set {
                this.todoListItemInstanceIdField = value;
            }
        }
        
        /// <remarks/>
        public string todoListWorkOrderId {
            get {
                return this.todoListWorkOrderIdField;
            }
            set {
                this.todoListWorkOrderIdField = value;
            }
        }
        
        /// <remarks/>
        public string workOrder {
            get {
                return this.workOrderField;
            }
            set {
                this.workOrderField = value;
            }
        }
        
        /// <remarks/>
        public string workOrderTask {
            get {
                return this.workOrderTaskField;
            }
            set {
                this.workOrderTaskField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://instances.m8mwp.types.ellipse.mincom.com")]
    public partial class TodoListItemInstanceDTO : ServiceDTO {
        
        private System.DateTime expirationDateField;
        
        private bool expirationDateFieldSpecified;
        
        private string externalReferenceField;
        
        private string itemNameField;
        
        private bool neededForReleaseField;
        
        private bool neededForReleaseFieldSpecified;
        
        private string notesField;
        
        private string ownerField;
        
        private System.DateTime requiredByDateField;
        
        private bool requiredByDateFieldSpecified;
        
        private decimal sequenceField;
        
        private bool sequenceFieldSpecified;
        
        private string statusCodeField;
        
        private string todoListItemInstanceIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        public System.DateTime expirationDate {
            get {
                return this.expirationDateField;
            }
            set {
                this.expirationDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool expirationDateSpecified {
            get {
                return this.expirationDateFieldSpecified;
            }
            set {
                this.expirationDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string externalReference {
            get {
                return this.externalReferenceField;
            }
            set {
                this.externalReferenceField = value;
            }
        }
        
        /// <remarks/>
        public string itemName {
            get {
                return this.itemNameField;
            }
            set {
                this.itemNameField = value;
            }
        }
        
        /// <remarks/>
        public bool neededForRelease {
            get {
                return this.neededForReleaseField;
            }
            set {
                this.neededForReleaseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool neededForReleaseSpecified {
            get {
                return this.neededForReleaseFieldSpecified;
            }
            set {
                this.neededForReleaseFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string notes {
            get {
                return this.notesField;
            }
            set {
                this.notesField = value;
            }
        }
        
        /// <remarks/>
        public string owner {
            get {
                return this.ownerField;
            }
            set {
                this.ownerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        public System.DateTime requiredByDate {
            get {
                return this.requiredByDateField;
            }
            set {
                this.requiredByDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool requiredByDateSpecified {
            get {
                return this.requiredByDateFieldSpecified;
            }
            set {
                this.requiredByDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public decimal sequence {
            get {
                return this.sequenceField;
            }
            set {
                this.sequenceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified {
            get {
                return this.sequenceFieldSpecified;
            }
            set {
                this.sequenceFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string statusCode {
            get {
                return this.statusCodeField;
            }
            set {
                this.statusCodeField = value;
            }
        }
        
        /// <remarks/>
        public string todoListItemInstanceId {
            get {
                return this.todoListItemInstanceIdField;
            }
            set {
                this.todoListItemInstanceIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://instances.m8mwp.types.ellipse.mincom.com")]
    public partial class RetrieveTodoInstancesServiceResult : ServiceResult {
        
        private TodoListItemInstanceDTO todoListItemInstanceDTOField;
        
        /// <remarks/>
        public TodoListItemInstanceDTO todoListItemInstanceDTO {
            get {
                return this.todoListItemInstanceDTOField;
            }
            set {
                this.todoListItemInstanceDTOField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://instances.m8mwp.types.ellipse.mincom.com")]
    public partial class AssignTodoListServiceResult : ServiceResult {
        
        private AssignTodoListDTO assignTodoListDTOField;
        
        /// <remarks/>
        public AssignTodoListDTO assignTodoListDTO {
            get {
                return this.assignTodoListDTOField;
            }
            set {
                this.assignTodoListDTOField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://instances.m8mwp.types.ellipse.mincom.com")]
    public partial class WorkOrderTodoInstanceServiceResult : ServiceResult {
        
        private WorkOrderTodoInstanceDTO workOrderTodoInstanceDTOField;
        
        /// <remarks/>
        public WorkOrderTodoInstanceDTO workOrderTodoInstanceDTO {
            get {
                return this.workOrderTodoInstanceDTOField;
            }
            set {
                this.workOrderTodoInstanceDTOField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://instances.m8mwp.types.ellipse.mincom.com")]
    public partial class TodoListWorkOrderServiceResult : ServiceResult {
        
        private TodoListWorkOrderDTO todoListWorkOrderDTOField;
        
        /// <remarks/>
        public TodoListWorkOrderDTO todoListWorkOrderDTO {
            get {
                return this.todoListWorkOrderDTOField;
            }
            set {
                this.todoListWorkOrderDTOField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://instances.m8mwp.types.ellipse.mincom.com")]
    public partial class TodoListItemInstanceServiceResult : ServiceResult {
        
        private TodoListItemInstanceDTO todoListItemInstanceDTOField;
        
        /// <remarks/>
        public TodoListItemInstanceDTO todoListItemInstanceDTO {
            get {
                return this.todoListItemInstanceDTOField;
            }
            set {
                this.todoListItemInstanceDTOField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void multipleUpdateTodoInstanceCompletedEventHandler(object sender, multipleUpdateTodoInstanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class multipleUpdateTodoInstanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal multipleUpdateTodoInstanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TodoListItemInstanceServiceResult[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TodoListItemInstanceServiceResult[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void multipleDeleteCompletedEventHandler(object sender, multipleDeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class multipleDeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal multipleDeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TodoListWorkOrderServiceResult[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TodoListWorkOrderServiceResult[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void updateCompletedEventHandler(object sender, updateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TodoListWorkOrderServiceResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TodoListWorkOrderServiceResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void deleteTodoInstanceCompletedEventHandler(object sender, deleteTodoInstanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteTodoInstanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteTodoInstanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TodoListWorkOrderServiceResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TodoListWorkOrderServiceResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void multipleMoveDownTodoInstanceCompletedEventHandler(object sender, multipleMoveDownTodoInstanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class multipleMoveDownTodoInstanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal multipleMoveDownTodoInstanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TodoListItemInstanceServiceResult[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TodoListItemInstanceServiceResult[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void deleteCompletedEventHandler(object sender, deleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TodoListWorkOrderServiceResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TodoListWorkOrderServiceResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void readTodoInstanceCompletedEventHandler(object sender, readTodoInstanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class readTodoInstanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal readTodoInstanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WorkOrderTodoInstanceServiceResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WorkOrderTodoInstanceServiceResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void searchCompletedEventHandler(object sender, searchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TodoListWorkOrderServiceResult[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TodoListWorkOrderServiceResult[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void multipleUpdateCompletedEventHandler(object sender, multipleUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class multipleUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal multipleUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TodoListWorkOrderServiceResult[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TodoListWorkOrderServiceResult[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void createCompletedEventHandler(object sender, createCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TodoListWorkOrderServiceResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TodoListWorkOrderServiceResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void multipleMoveUpTodoInstanceCompletedEventHandler(object sender, multipleMoveUpTodoInstanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class multipleMoveUpTodoInstanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal multipleMoveUpTodoInstanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TodoListItemInstanceServiceResult[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TodoListItemInstanceServiceResult[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void assignTodoListCompletedEventHandler(object sender, assignTodoListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class assignTodoListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal assignTodoListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AssignTodoListServiceResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AssignTodoListServiceResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void retrieveTodoInstancesCompletedEventHandler(object sender, retrieveTodoInstancesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class retrieveTodoInstancesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal retrieveTodoInstancesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RetrieveTodoInstancesServiceResult[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RetrieveTodoInstancesServiceResult[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void readCompletedEventHandler(object sender, readCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class readCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal readCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TodoListWorkOrderServiceResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TodoListWorkOrderServiceResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void multipleDeleteTodoInstanceCompletedEventHandler(object sender, multipleDeleteTodoInstanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class multipleDeleteTodoInstanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal multipleDeleteTodoInstanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TodoListWorkOrderServiceResult[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TodoListWorkOrderServiceResult[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void createTodoInstanceCompletedEventHandler(object sender, createTodoInstanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createTodoInstanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createTodoInstanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TodoListItemInstanceServiceResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TodoListItemInstanceServiceResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void multipleAssignTodoListCompletedEventHandler(object sender, multipleAssignTodoListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class multipleAssignTodoListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal multipleAssignTodoListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AssignTodoListServiceResult[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AssignTodoListServiceResult[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void updateTodoInstanceCompletedEventHandler(object sender, updateTodoInstanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateTodoInstanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateTodoInstanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TodoListItemInstanceServiceResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TodoListItemInstanceServiceResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void multipleBulkUpdateCompletedEventHandler(object sender, multipleBulkUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class multipleBulkUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal multipleBulkUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TodoListWorkOrderBulkUpdateServiceResult[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TodoListWorkOrderBulkUpdateServiceResult[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void searchByWorkGroupCompletedEventHandler(object sender, searchByWorkGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchByWorkGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchByWorkGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WorkOrderTodoInstanceServiceResult[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WorkOrderTodoInstanceServiceResult[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void multipleReadTodoInstanceCompletedEventHandler(object sender, multipleReadTodoInstanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class multipleReadTodoInstanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal multipleReadTodoInstanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WorkOrderTodoInstanceServiceResult[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WorkOrderTodoInstanceServiceResult[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void moveUpTodoInstanceCompletedEventHandler(object sender, moveUpTodoInstanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class moveUpTodoInstanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal moveUpTodoInstanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TodoListItemInstanceServiceResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TodoListItemInstanceServiceResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void multipleCreateTodoInstanceCompletedEventHandler(object sender, multipleCreateTodoInstanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class multipleCreateTodoInstanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal multipleCreateTodoInstanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TodoListItemInstanceServiceResult[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TodoListItemInstanceServiceResult[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void bulkUpdateCompletedEventHandler(object sender, bulkUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class bulkUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal bulkUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TodoListWorkOrderBulkUpdateServiceResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TodoListWorkOrderBulkUpdateServiceResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void moveDownTodoInstanceCompletedEventHandler(object sender, moveDownTodoInstanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class moveDownTodoInstanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal moveDownTodoInstanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TodoListItemInstanceServiceResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TodoListItemInstanceServiceResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void multipleReadCompletedEventHandler(object sender, multipleReadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class multipleReadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal multipleReadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TodoListWorkOrderServiceResult[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TodoListWorkOrderServiceResult[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void multipleCreateCompletedEventHandler(object sender, multipleCreateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class multipleCreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal multipleCreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TodoListWorkOrderServiceResult[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TodoListWorkOrderServiceResult[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591