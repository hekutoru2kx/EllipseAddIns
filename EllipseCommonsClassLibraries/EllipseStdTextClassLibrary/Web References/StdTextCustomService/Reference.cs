//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace EllipseStdTextClassLibrary.StdTextCustomService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="StdTextCustomServiceHttpBinding", Namespace="http://stdtextcustom.ellipse.enterpriseservice.mincom.com")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ApplicationMessageImpl))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EnterpriseServiceOperationException))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AbstractDTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Attribute[]))]
    public partial class StdTextCustomService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getExtendedTextHeadingOperationCompleted;
        
        private System.Threading.SendOrPostCallback getExtendedTextAsArrayOperationCompleted;
        
        private System.Threading.SendOrPostCallback setExtendedTextOperationCompleted;
        
        private System.Threading.SendOrPostCallback setExtendedTextWithArrayOperationCompleted;
        
        private System.Threading.SendOrPostCallback createOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteExtendedTextOperationCompleted;
        
        private System.Threading.SendOrPostCallback getExtendedTextOperationCompleted;
        
        private System.Threading.SendOrPostCallback createEmptyExtendedTextOperationCompleted;
        
        private System.Threading.SendOrPostCallback getHeaderInformationOperationCompleted;
        
        private System.Threading.SendOrPostCallback setExtendedTextHeadingOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public StdTextCustomService() {
            this.Url = global::EllipseStdTextClassLibrary.Properties.Settings.Default.EllipseStdTextClassLibrary_StdTextCustomService_StdTextCustomService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getExtendedTextHeadingCompletedEventHandler getExtendedTextHeadingCompleted;
        
        /// <remarks/>
        public event getExtendedTextAsArrayCompletedEventHandler getExtendedTextAsArrayCompleted;
        
        /// <remarks/>
        public event setExtendedTextCompletedEventHandler setExtendedTextCompleted;
        
        /// <remarks/>
        public event setExtendedTextWithArrayCompletedEventHandler setExtendedTextWithArrayCompleted;
        
        /// <remarks/>
        public event createCompletedEventHandler createCompleted;
        
        /// <remarks/>
        public event deleteExtendedTextCompletedEventHandler deleteExtendedTextCompleted;
        
        /// <remarks/>
        public event getExtendedTextCompletedEventHandler getExtendedTextCompleted;
        
        /// <remarks/>
        public event createEmptyExtendedTextCompletedEventHandler createEmptyExtendedTextCompleted;
        
        /// <remarks/>
        public event getHeaderInformationCompletedEventHandler getHeaderInformationCompleted;
        
        /// <remarks/>
        public event setExtendedTextHeadingCompletedEventHandler setExtendedTextHeadingCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://stdtextcustom.ellipse.enterpriseservice.mincom.com", ResponseNamespace="http://stdtextcustom.ellipse.enterpriseservice.mincom.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public string getExtendedTextHeading([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] OperationContext context, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string standardTextId) {
            object[] results = this.Invoke("getExtendedTextHeading", new object[] {
                        context,
                        standardTextId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getExtendedTextHeadingAsync(OperationContext context, string standardTextId) {
            this.getExtendedTextHeadingAsync(context, standardTextId, null);
        }
        
        /// <remarks/>
        public void getExtendedTextHeadingAsync(OperationContext context, string standardTextId, object userState) {
            if ((this.getExtendedTextHeadingOperationCompleted == null)) {
                this.getExtendedTextHeadingOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetExtendedTextHeadingOperationCompleted);
            }
            this.InvokeAsync("getExtendedTextHeading", new object[] {
                        context,
                        standardTextId}, this.getExtendedTextHeadingOperationCompleted, userState);
        }
        
        private void OngetExtendedTextHeadingOperationCompleted(object arg) {
            if ((this.getExtendedTextHeadingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getExtendedTextHeadingCompleted(this, new getExtendedTextHeadingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://stdtextcustom.ellipse.enterpriseservice.mincom.com", ResponseNamespace="http://stdtextcustom.ellipse.enterpriseservice.mincom.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("out", IsNullable=true)]
        public string[] getExtendedTextAsArray([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] OperationContext context, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string standardTextId) {
            object[] results = this.Invoke("getExtendedTextAsArray", new object[] {
                        context,
                        standardTextId});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getExtendedTextAsArrayAsync(OperationContext context, string standardTextId) {
            this.getExtendedTextAsArrayAsync(context, standardTextId, null);
        }
        
        /// <remarks/>
        public void getExtendedTextAsArrayAsync(OperationContext context, string standardTextId, object userState) {
            if ((this.getExtendedTextAsArrayOperationCompleted == null)) {
                this.getExtendedTextAsArrayOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetExtendedTextAsArrayOperationCompleted);
            }
            this.InvokeAsync("getExtendedTextAsArray", new object[] {
                        context,
                        standardTextId}, this.getExtendedTextAsArrayOperationCompleted, userState);
        }
        
        private void OngetExtendedTextAsArrayOperationCompleted(object arg) {
            if ((this.getExtendedTextAsArrayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getExtendedTextAsArrayCompleted(this, new getExtendedTextAsArrayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://stdtextcustom.ellipse.enterpriseservice.mincom.com", ResponseNamespace="http://stdtextcustom.ellipse.enterpriseservice.mincom.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setExtendedText([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] OperationContext context, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string standardTextId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string extendedText) {
            this.Invoke("setExtendedText", new object[] {
                        context,
                        standardTextId,
                        extendedText});
        }
        
        /// <remarks/>
        public void setExtendedTextAsync(OperationContext context, string standardTextId, string extendedText) {
            this.setExtendedTextAsync(context, standardTextId, extendedText, null);
        }
        
        /// <remarks/>
        public void setExtendedTextAsync(OperationContext context, string standardTextId, string extendedText, object userState) {
            if ((this.setExtendedTextOperationCompleted == null)) {
                this.setExtendedTextOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetExtendedTextOperationCompleted);
            }
            this.InvokeAsync("setExtendedText", new object[] {
                        context,
                        standardTextId,
                        extendedText}, this.setExtendedTextOperationCompleted, userState);
        }
        
        private void OnsetExtendedTextOperationCompleted(object arg) {
            if ((this.setExtendedTextCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setExtendedTextCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://stdtextcustom.ellipse.enterpriseservice.mincom.com", ResponseNamespace="http://stdtextcustom.ellipse.enterpriseservice.mincom.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setExtendedTextWithArray([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] OperationContext context, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string standardTextId, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] string[] extendedText) {
            this.Invoke("setExtendedTextWithArray", new object[] {
                        context,
                        standardTextId,
                        extendedText});
        }
        
        /// <remarks/>
        public void setExtendedTextWithArrayAsync(OperationContext context, string standardTextId, string[] extendedText) {
            this.setExtendedTextWithArrayAsync(context, standardTextId, extendedText, null);
        }
        
        /// <remarks/>
        public void setExtendedTextWithArrayAsync(OperationContext context, string standardTextId, string[] extendedText, object userState) {
            if ((this.setExtendedTextWithArrayOperationCompleted == null)) {
                this.setExtendedTextWithArrayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetExtendedTextWithArrayOperationCompleted);
            }
            this.InvokeAsync("setExtendedTextWithArray", new object[] {
                        context,
                        standardTextId,
                        extendedText}, this.setExtendedTextWithArrayOperationCompleted, userState);
        }
        
        private void OnsetExtendedTextWithArrayOperationCompleted(object arg) {
            if ((this.setExtendedTextWithArrayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setExtendedTextWithArrayCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://stdtextcustom.ellipse.enterpriseservice.mincom.com", ResponseNamespace="http://stdtextcustom.ellipse.enterpriseservice.mincom.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public StdTextServiceCreateReplyDTO create([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] OperationContext context, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in1, int in2, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in3) {
            object[] results = this.Invoke("create", new object[] {
                        context,
                        in1,
                        in2,
                        in3});
            return ((StdTextServiceCreateReplyDTO)(results[0]));
        }
        
        /// <remarks/>
        public void createAsync(OperationContext context, string in1, int in2, string in3) {
            this.createAsync(context, in1, in2, in3, null);
        }
        
        /// <remarks/>
        public void createAsync(OperationContext context, string in1, int in2, string in3, object userState) {
            if ((this.createOperationCompleted == null)) {
                this.createOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateOperationCompleted);
            }
            this.InvokeAsync("create", new object[] {
                        context,
                        in1,
                        in2,
                        in3}, this.createOperationCompleted, userState);
        }
        
        private void OncreateOperationCompleted(object arg) {
            if ((this.createCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createCompleted(this, new createCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://stdtextcustom.ellipse.enterpriseservice.mincom.com", ResponseNamespace="http://stdtextcustom.ellipse.enterpriseservice.mincom.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void deleteExtendedText([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] OperationContext context, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string standardTextId) {
            this.Invoke("deleteExtendedText", new object[] {
                        context,
                        standardTextId});
        }
        
        /// <remarks/>
        public void deleteExtendedTextAsync(OperationContext context, string standardTextId) {
            this.deleteExtendedTextAsync(context, standardTextId, null);
        }
        
        /// <remarks/>
        public void deleteExtendedTextAsync(OperationContext context, string standardTextId, object userState) {
            if ((this.deleteExtendedTextOperationCompleted == null)) {
                this.deleteExtendedTextOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteExtendedTextOperationCompleted);
            }
            this.InvokeAsync("deleteExtendedText", new object[] {
                        context,
                        standardTextId}, this.deleteExtendedTextOperationCompleted, userState);
        }
        
        private void OndeleteExtendedTextOperationCompleted(object arg) {
            if ((this.deleteExtendedTextCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteExtendedTextCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://stdtextcustom.ellipse.enterpriseservice.mincom.com", ResponseNamespace="http://stdtextcustom.ellipse.enterpriseservice.mincom.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public string getExtendedText([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] OperationContext context, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string standardTextId) {
            object[] results = this.Invoke("getExtendedText", new object[] {
                        context,
                        standardTextId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getExtendedTextAsync(OperationContext context, string standardTextId) {
            this.getExtendedTextAsync(context, standardTextId, null);
        }
        
        /// <remarks/>
        public void getExtendedTextAsync(OperationContext context, string standardTextId, object userState) {
            if ((this.getExtendedTextOperationCompleted == null)) {
                this.getExtendedTextOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetExtendedTextOperationCompleted);
            }
            this.InvokeAsync("getExtendedText", new object[] {
                        context,
                        standardTextId}, this.getExtendedTextOperationCompleted, userState);
        }
        
        private void OngetExtendedTextOperationCompleted(object arg) {
            if ((this.getExtendedTextCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getExtendedTextCompleted(this, new getExtendedTextCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://stdtextcustom.ellipse.enterpriseservice.mincom.com", ResponseNamespace="http://stdtextcustom.ellipse.enterpriseservice.mincom.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void createEmptyExtendedText([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] OperationContext context, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string standardTextId) {
            this.Invoke("createEmptyExtendedText", new object[] {
                        context,
                        standardTextId});
        }
        
        /// <remarks/>
        public void createEmptyExtendedTextAsync(OperationContext context, string standardTextId) {
            this.createEmptyExtendedTextAsync(context, standardTextId, null);
        }
        
        /// <remarks/>
        public void createEmptyExtendedTextAsync(OperationContext context, string standardTextId, object userState) {
            if ((this.createEmptyExtendedTextOperationCompleted == null)) {
                this.createEmptyExtendedTextOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateEmptyExtendedTextOperationCompleted);
            }
            this.InvokeAsync("createEmptyExtendedText", new object[] {
                        context,
                        standardTextId}, this.createEmptyExtendedTextOperationCompleted, userState);
        }
        
        private void OncreateEmptyExtendedTextOperationCompleted(object arg) {
            if ((this.createEmptyExtendedTextCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createEmptyExtendedTextCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://stdtextcustom.ellipse.enterpriseservice.mincom.com", ResponseNamespace="http://stdtextcustom.ellipse.enterpriseservice.mincom.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public StdTextServiceGetHeadingReplyDTO getHeaderInformation([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] OperationContext context, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string standardTextId) {
            object[] results = this.Invoke("getHeaderInformation", new object[] {
                        context,
                        standardTextId});
            return ((StdTextServiceGetHeadingReplyDTO)(results[0]));
        }
        
        /// <remarks/>
        public void getHeaderInformationAsync(OperationContext context, string standardTextId) {
            this.getHeaderInformationAsync(context, standardTextId, null);
        }
        
        /// <remarks/>
        public void getHeaderInformationAsync(OperationContext context, string standardTextId, object userState) {
            if ((this.getHeaderInformationOperationCompleted == null)) {
                this.getHeaderInformationOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetHeaderInformationOperationCompleted);
            }
            this.InvokeAsync("getHeaderInformation", new object[] {
                        context,
                        standardTextId}, this.getHeaderInformationOperationCompleted, userState);
        }
        
        private void OngetHeaderInformationOperationCompleted(object arg) {
            if ((this.getHeaderInformationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getHeaderInformationCompleted(this, new getHeaderInformationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://stdtextcustom.ellipse.enterpriseservice.mincom.com", ResponseNamespace="http://stdtextcustom.ellipse.enterpriseservice.mincom.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setExtendedTextHeading([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] OperationContext context, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string standardTextId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string headingText) {
            this.Invoke("setExtendedTextHeading", new object[] {
                        context,
                        standardTextId,
                        headingText});
        }
        
        /// <remarks/>
        public void setExtendedTextHeadingAsync(OperationContext context, string standardTextId, string headingText) {
            this.setExtendedTextHeadingAsync(context, standardTextId, headingText, null);
        }
        
        /// <remarks/>
        public void setExtendedTextHeadingAsync(OperationContext context, string standardTextId, string headingText, object userState) {
            if ((this.setExtendedTextHeadingOperationCompleted == null)) {
                this.setExtendedTextHeadingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetExtendedTextHeadingOperationCompleted);
            }
            this.InvokeAsync("setExtendedTextHeading", new object[] {
                        context,
                        standardTextId,
                        headingText}, this.setExtendedTextHeadingOperationCompleted, userState);
        }
        
        private void OnsetExtendedTextHeadingOperationCompleted(object arg) {
            if ((this.setExtendedTextHeadingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setExtendedTextHeadingCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://connectivity.service.ews.mincom.com")]
    public partial class OperationContext {
        
        private string applicationClientIdField;
        
        private string districtField;
        
        private bool eventDisableField;
        
        private bool eventDisableFieldSpecified;
        
        private int maxInstancesField;
        
        private bool maxInstancesFieldSpecified;
        
        private string positionField;
        
        private bool returnWarningsField;
        
        private bool returnWarningsFieldSpecified;
        
        private RunAs runAsField;
        
        private string tenantIdField;
        
        private bool traceField;
        
        private bool traceFieldSpecified;
        
        private string transactionField;
        
        /// <remarks/>
        public string applicationClientId {
            get {
                return this.applicationClientIdField;
            }
            set {
                this.applicationClientIdField = value;
            }
        }
        
        /// <remarks/>
        public string district {
            get {
                return this.districtField;
            }
            set {
                this.districtField = value;
            }
        }
        
        /// <remarks/>
        public bool eventDisable {
            get {
                return this.eventDisableField;
            }
            set {
                this.eventDisableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool eventDisableSpecified {
            get {
                return this.eventDisableFieldSpecified;
            }
            set {
                this.eventDisableFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int maxInstances {
            get {
                return this.maxInstancesField;
            }
            set {
                this.maxInstancesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool maxInstancesSpecified {
            get {
                return this.maxInstancesFieldSpecified;
            }
            set {
                this.maxInstancesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string position {
            get {
                return this.positionField;
            }
            set {
                this.positionField = value;
            }
        }
        
        /// <remarks/>
        public bool returnWarnings {
            get {
                return this.returnWarningsField;
            }
            set {
                this.returnWarningsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool returnWarningsSpecified {
            get {
                return this.returnWarningsFieldSpecified;
            }
            set {
                this.returnWarningsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public RunAs runAs {
            get {
                return this.runAsField;
            }
            set {
                this.runAsField = value;
            }
        }
        
        /// <remarks/>
        public string tenantId {
            get {
                return this.tenantIdField;
            }
            set {
                this.tenantIdField = value;
            }
        }
        
        /// <remarks/>
        public bool trace {
            get {
                return this.traceField;
            }
            set {
                this.traceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool traceSpecified {
            get {
                return this.traceFieldSpecified;
            }
            set {
                this.traceFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string transaction {
            get {
                return this.transactionField;
            }
            set {
                this.transactionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://connectivity.service.ews.mincom.com")]
    public partial class RunAs {
        
        private string districtField;
        
        private string positionField;
        
        private string userField;
        
        /// <remarks/>
        public string district {
            get {
                return this.districtField;
            }
            set {
                this.districtField = value;
            }
        }
        
        /// <remarks/>
        public string position {
            get {
                return this.positionField;
            }
            set {
                this.positionField = value;
            }
        }
        
        /// <remarks/>
        public string user {
            get {
                return this.userField;
            }
            set {
                this.userField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WarningMessageDTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ErrorMessageDTO))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ellipse.enterpriseservice.mincom.com")]
    public partial class ApplicationMessageImpl {
        
        private string codeField;
        
        private int dtoIndexField;
        
        private bool dtoIndexFieldSpecified;
        
        private int fieldIndexField;
        
        private bool fieldIndexFieldSpecified;
        
        private string fieldNameField;
        
        private string messageField;
        
        /// <remarks/>
        public string code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public int dtoIndex {
            get {
                return this.dtoIndexField;
            }
            set {
                this.dtoIndexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dtoIndexSpecified {
            get {
                return this.dtoIndexFieldSpecified;
            }
            set {
                this.dtoIndexFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int fieldIndex {
            get {
                return this.fieldIndexField;
            }
            set {
                this.fieldIndexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool fieldIndexSpecified {
            get {
                return this.fieldIndexFieldSpecified;
            }
            set {
                this.fieldIndexFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string fieldName {
            get {
                return this.fieldNameField;
            }
            set {
                this.fieldNameField = value;
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ellipse.enterpriseservice.mincom.com")]
    public partial class WarningMessageDTO : ApplicationMessageImpl {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ellipse.enterpriseservice.mincom.com")]
    public partial class ErrorMessageDTO : ApplicationMessageImpl {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://exception.enterpriseservice.mincom.com")]
    public partial class EnterpriseServiceOperationException {
        
        private ErrorMessageDTO[] errorMessagesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://ellipse.enterpriseservice.mincom.com")]
        public ErrorMessageDTO[] errorMessages {
            get {
                return this.errorMessagesField;
            }
            set {
                this.errorMessagesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://attribute.ellipse.mincom.com")]
    public partial class Attribute {
        
        private string dataTypeField;
        
        private string nameField;
        
        private string namespaceField;
        
        private anyType2anyTypeMapEntry[] propertiesField;
        
        private string valueField;
        
        /// <remarks/>
        public string dataType {
            get {
                return this.dataTypeField;
            }
            set {
                this.dataTypeField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string @namespace {
            get {
                return this.namespaceField;
            }
            set {
                this.namespaceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("entry", Namespace="http://stdtextcustom.ellipse.enterpriseservice.mincom.com", IsNullable=false)]
        public anyType2anyTypeMapEntry[] properties {
            get {
                return this.propertiesField;
            }
            set {
                this.propertiesField = value;
            }
        }
        
        /// <remarks/>
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://stdtextcustom.ellipse.enterpriseservice.mincom.com")]
    public partial class anyType2anyTypeMapEntry {
        
        private object keyField;
        
        private object valueField;
        
        /// <remarks/>
        public object key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        public object value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AbstractReplyDTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StdTextServiceGetHeadingReplyDTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StdTextServiceCreateReplyDTO))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ellipse.enterpriseservice.mincom.com")]
    public abstract partial class AbstractDTO {
        
        private Attribute[] customAttributesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://attribute.ellipse.mincom.com")]
        public Attribute[] customAttributes {
            get {
                return this.customAttributesField;
            }
            set {
                this.customAttributesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StdTextServiceGetHeadingReplyDTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StdTextServiceCreateReplyDTO))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ellipse.enterpriseservice.mincom.com")]
    public abstract partial class AbstractReplyDTO : AbstractDTO {
        
        private WarningMessageDTO[] warningsAndInformationField;
        
        /// <remarks/>
        public WarningMessageDTO[] warningsAndInformation {
            get {
                return this.warningsAndInformationField;
            }
            set {
                this.warningsAndInformationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://stdtext.ellipse.enterpriseservice.mincom.com")]
    public partial class StdTextServiceGetHeadingReplyDTO : AbstractReplyDTO {
        
        private string headingLineField;
        
        private bool headingMandatoryField;
        
        private bool headingMandatoryFieldSpecified;
        
        private decimal lineLengthField;
        
        private bool lineLengthFieldSpecified;
        
        private decimal maxLineLengthField;
        
        private bool maxLineLengthFieldSpecified;
        
        private bool stdTextExistsField;
        
        private bool stdTextExistsFieldSpecified;
        
        private bool textTypeHasHeadingField;
        
        private bool textTypeHasHeadingFieldSpecified;
        
        /// <remarks/>
        public string headingLine {
            get {
                return this.headingLineField;
            }
            set {
                this.headingLineField = value;
            }
        }
        
        /// <remarks/>
        public bool headingMandatory {
            get {
                return this.headingMandatoryField;
            }
            set {
                this.headingMandatoryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool headingMandatorySpecified {
            get {
                return this.headingMandatoryFieldSpecified;
            }
            set {
                this.headingMandatoryFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public decimal lineLength {
            get {
                return this.lineLengthField;
            }
            set {
                this.lineLengthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool lineLengthSpecified {
            get {
                return this.lineLengthFieldSpecified;
            }
            set {
                this.lineLengthFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public decimal maxLineLength {
            get {
                return this.maxLineLengthField;
            }
            set {
                this.maxLineLengthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool maxLineLengthSpecified {
            get {
                return this.maxLineLengthFieldSpecified;
            }
            set {
                this.maxLineLengthFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool stdTextExists {
            get {
                return this.stdTextExistsField;
            }
            set {
                this.stdTextExistsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool stdTextExistsSpecified {
            get {
                return this.stdTextExistsFieldSpecified;
            }
            set {
                this.stdTextExistsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool textTypeHasHeading {
            get {
                return this.textTypeHasHeadingField;
            }
            set {
                this.textTypeHasHeadingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool textTypeHasHeadingSpecified {
            get {
                return this.textTypeHasHeadingFieldSpecified;
            }
            set {
                this.textTypeHasHeadingFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://stdtext.ellipse.enterpriseservice.mincom.com")]
    public partial class StdTextServiceCreateReplyDTO : AbstractReplyDTO {
        
        private string stdTextIdField;
        
        /// <remarks/>
        public string stdTextId {
            get {
                return this.stdTextIdField;
            }
            set {
                this.stdTextIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getExtendedTextHeadingCompletedEventHandler(object sender, getExtendedTextHeadingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getExtendedTextHeadingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getExtendedTextHeadingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getExtendedTextAsArrayCompletedEventHandler(object sender, getExtendedTextAsArrayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getExtendedTextAsArrayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getExtendedTextAsArrayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void setExtendedTextCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void setExtendedTextWithArrayCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void createCompletedEventHandler(object sender, createCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StdTextServiceCreateReplyDTO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StdTextServiceCreateReplyDTO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void deleteExtendedTextCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getExtendedTextCompletedEventHandler(object sender, getExtendedTextCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getExtendedTextCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getExtendedTextCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void createEmptyExtendedTextCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getHeaderInformationCompletedEventHandler(object sender, getHeaderInformationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getHeaderInformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getHeaderInformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StdTextServiceGetHeadingReplyDTO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StdTextServiceGetHeadingReplyDTO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void setExtendedTextHeadingCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591