<?xml version="1.0" encoding="utf-8"?>
<wsdl:definitions xmlns:ns2="http://ellipse.enterpriseservice.mincom.com" xmlns:tns="http://stdtextcustom.ellipse.enterpriseservice.mincom.com" xmlns:ns5="http://attribute.ellipse.mincom.com" xmlns:soapenc12="http://www.w3.org/2003/05/soap-encoding" xmlns:ns3="http://exception.enterpriseservice.mincom.com" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:soap11="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns4="http://stdtext.ellipse.enterpriseservice.mincom.com" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope" xmlns:soapenc11="http://schemas.xmlsoap.org/soap/encoding/" xmlns:ns1="http://connectivity.service.ews.mincom.com" xmlns:xsd="http://www.w3.org/2001/XMLSchema" targetNamespace="http://stdtextcustom.ellipse.enterpriseservice.mincom.com" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
  <wsdl:types>
    <xsd:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://connectivity.service.ews.mincom.com">
      <xsd:complexType name="OperationContext">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="applicationClientId" type="xsd:string" />
          <xsd:element minOccurs="0" name="district" type="xsd:string" />
          <xsd:element minOccurs="0" name="eventDisable" type="xsd:boolean" />
          <xsd:element minOccurs="0" name="maxInstances" type="xsd:int" />
          <xsd:element minOccurs="0" name="position" type="xsd:string" />
          <xsd:element minOccurs="0" name="returnWarnings" type="xsd:boolean" />
          <xsd:element minOccurs="0" name="runAs" type="ns1:RunAs" />
          <xsd:element minOccurs="0" name="tenantId" type="xsd:string" />
          <xsd:element minOccurs="0" name="trace" type="xsd:boolean" />
          <xsd:element minOccurs="0" name="transaction" type="xsd:string" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="RunAs">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="district" type="xsd:string" />
          <xsd:element minOccurs="0" name="position" type="xsd:string" />
          <xsd:element minOccurs="0" name="user" type="xsd:string" />
        </xsd:sequence>
      </xsd:complexType>
    </xsd:schema>
    <xsd:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://stdtextcustom.ellipse.enterpriseservice.mincom.com">
      <xsd:import namespace="http://connectivity.service.ews.mincom.com" />
      <xsd:import namespace="http://exception.enterpriseservice.mincom.com" />
      <xsd:import namespace="http://stdtext.ellipse.enterpriseservice.mincom.com" />
      <xsd:element name="getExtendedTextHeading">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="1" maxOccurs="1" name="context" nillable="true" type="ns1:OperationContext" />
            <xsd:element minOccurs="1" maxOccurs="1" name="standardTextId" nillable="true" type="xsd:string" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getExtendedTextHeadingResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="1" maxOccurs="1" name="out" nillable="true" type="xsd:string" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="EnterpriseServiceOperationException" type="ns3:EnterpriseServiceOperationException" />
      <xsd:element name="getExtendedTextAsArray">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="1" maxOccurs="1" name="context" nillable="true" type="ns1:OperationContext" />
            <xsd:element minOccurs="1" maxOccurs="1" name="standardTextId" nillable="true" type="xsd:string" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:complexType name="ArrayOfString">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="string" nillable="true" type="xsd:string" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="getExtendedTextAsArrayResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="1" maxOccurs="1" name="out" nillable="true" type="tns:ArrayOfString" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="setExtendedText">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="1" maxOccurs="1" name="context" nillable="true" type="ns1:OperationContext" />
            <xsd:element minOccurs="1" maxOccurs="1" name="standardTextId" nillable="true" type="xsd:string" />
            <xsd:element minOccurs="1" maxOccurs="1" name="extendedText" nillable="true" type="xsd:string" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="setExtendedTextResponse">
        <xsd:complexType />
      </xsd:element>
      <xsd:element name="setExtendedTextWithArray">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="1" maxOccurs="1" name="context" nillable="true" type="ns1:OperationContext" />
            <xsd:element minOccurs="1" maxOccurs="1" name="standardTextId" nillable="true" type="xsd:string" />
            <xsd:element minOccurs="1" maxOccurs="1" name="extendedText" nillable="true" type="tns:ArrayOfString" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="setExtendedTextWithArrayResponse">
        <xsd:complexType />
      </xsd:element>
      <xsd:element name="create">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="1" maxOccurs="1" name="context" nillable="true" type="ns1:OperationContext" />
            <xsd:element minOccurs="1" maxOccurs="1" name="in1" nillable="true" type="xsd:string" />
            <xsd:element minOccurs="1" maxOccurs="1" name="in2" type="xsd:int" />
            <xsd:element minOccurs="1" maxOccurs="1" name="in3" nillable="true" type="xsd:string" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:complexType name="anyType2anyTypeMap">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="entry">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element minOccurs="0" maxOccurs="1" name="key" type="xsd:anyType" />
                <xsd:element minOccurs="0" maxOccurs="1" name="value" type="xsd:anyType" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="createResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="1" maxOccurs="1" name="out" nillable="true" type="ns4:StdTextServiceCreateReplyDTO" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="deleteExtendedText">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="1" maxOccurs="1" name="context" nillable="true" type="ns1:OperationContext" />
            <xsd:element minOccurs="1" maxOccurs="1" name="standardTextId" nillable="true" type="xsd:string" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="deleteExtendedTextResponse">
        <xsd:complexType />
      </xsd:element>
      <xsd:element name="getExtendedText">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="1" maxOccurs="1" name="context" nillable="true" type="ns1:OperationContext" />
            <xsd:element minOccurs="1" maxOccurs="1" name="standardTextId" nillable="true" type="xsd:string" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getExtendedTextResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="1" maxOccurs="1" name="out" nillable="true" type="xsd:string" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="createEmptyExtendedText">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="1" maxOccurs="1" name="context" nillable="true" type="ns1:OperationContext" />
            <xsd:element minOccurs="1" maxOccurs="1" name="standardTextId" nillable="true" type="xsd:string" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="createEmptyExtendedTextResponse">
        <xsd:complexType />
      </xsd:element>
      <xsd:element name="getHeaderInformation">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="1" maxOccurs="1" name="context" nillable="true" type="ns1:OperationContext" />
            <xsd:element minOccurs="1" maxOccurs="1" name="standardTextId" nillable="true" type="xsd:string" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getHeaderInformationResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="1" maxOccurs="1" name="out" nillable="true" type="ns4:StdTextServiceGetHeadingReplyDTO" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="setExtendedTextHeading">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="1" maxOccurs="1" name="context" nillable="true" type="ns1:OperationContext" />
            <xsd:element minOccurs="1" maxOccurs="1" name="standardTextId" nillable="true" type="xsd:string" />
            <xsd:element minOccurs="1" maxOccurs="1" name="headingText" nillable="true" type="xsd:string" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="setExtendedTextHeadingResponse">
        <xsd:complexType />
      </xsd:element>
    </xsd:schema>
    <xsd:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://exception.enterpriseservice.mincom.com">
      <xsd:import namespace="http://ellipse.enterpriseservice.mincom.com" />
      <xsd:complexType name="EnterpriseServiceOperationException">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="errorMessages" type="ns2:ArrayOfErrorMessageDTO" />
        </xsd:sequence>
      </xsd:complexType>
    </xsd:schema>
    <xsd:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://ellipse.enterpriseservice.mincom.com">
      <xsd:import namespace="http://attribute.ellipse.mincom.com" />
      <xsd:complexType name="ArrayOfErrorMessageDTO">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ErrorMessageDTO" nillable="true" type="ns2:ErrorMessageDTO" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ErrorMessageDTO">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns2:ApplicationMessageImpl" />
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ApplicationMessageImpl">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="code" type="xsd:string" />
          <xsd:element minOccurs="0" name="dtoIndex" type="xsd:int" />
          <xsd:element minOccurs="0" name="fieldIndex" type="xsd:int" />
          <xsd:element minOccurs="0" name="fieldName" type="xsd:string" />
          <xsd:element minOccurs="0" name="message" type="xsd:string" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="AbstractReplyDTO" abstract="true">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns2:AbstractDTO">
            <xsd:sequence>
              <xsd:element minOccurs="0" name="warningsAndInformation" type="ns2:ArrayOfWarningMessageDTO" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfWarningMessageDTO">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="WarningMessageDTO" nillable="true" type="ns2:WarningMessageDTO" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="WarningMessageDTO">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns2:ApplicationMessageImpl" />
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="AbstractDTO" abstract="true">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="customAttributes" type="ns5:ArrayOfAttribute" />
        </xsd:sequence>
      </xsd:complexType>
    </xsd:schema>
    <xsd:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://stdtext.ellipse.enterpriseservice.mincom.com">
      <xsd:import namespace="http://ellipse.enterpriseservice.mincom.com" />
      <xsd:simpleType name="stdTextId">
        <xsd:restriction base="xsd:string">
          <xsd:minLength value="0" />
          <xsd:maxLength value="26" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="StdTextServiceCreateReplyDTO">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns2:AbstractReplyDTO">
            <xsd:sequence>
              <xsd:element minOccurs="0" name="stdTextId" type="ns4:stdTextId" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:simpleType name="textTypeHasHeading">
        <xsd:restriction base="xsd:boolean" />
      </xsd:simpleType>
      <xsd:simpleType name="headingMandatory">
        <xsd:restriction base="xsd:boolean" />
      </xsd:simpleType>
      <xsd:simpleType name="maxLineLength">
        <xsd:restriction base="xsd:decimal">
          <xsd:fractionDigits value="0" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="stdTextExists">
        <xsd:restriction base="xsd:boolean" />
      </xsd:simpleType>
      <xsd:simpleType name="lineLength">
        <xsd:restriction base="xsd:decimal">
          <xsd:fractionDigits value="0" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="headingLine">
        <xsd:restriction base="xsd:string">
          <xsd:minLength value="0" />
          <xsd:maxLength value="160" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="StdTextServiceGetHeadingReplyDTO">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns2:AbstractReplyDTO">
            <xsd:sequence>
              <xsd:element minOccurs="0" name="headingLine" type="ns4:headingLine" />
              <xsd:element minOccurs="0" name="headingMandatory" type="ns4:headingMandatory" />
              <xsd:element minOccurs="0" name="lineLength" type="ns4:lineLength" />
              <xsd:element minOccurs="0" name="maxLineLength" type="ns4:maxLineLength" />
              <xsd:element minOccurs="0" name="stdTextExists" type="ns4:stdTextExists" />
              <xsd:element minOccurs="0" name="textTypeHasHeading" type="ns4:textTypeHasHeading" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
    </xsd:schema>
    <xsd:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://attribute.ellipse.mincom.com">
      <xsd:import namespace="http://stdtextcustom.ellipse.enterpriseservice.mincom.com" />
      <xsd:complexType name="ArrayOfAttribute">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="Attribute" nillable="true" type="ns5:Attribute" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="Attribute">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="dataType" type="xsd:string" />
          <xsd:element minOccurs="0" name="name" type="xsd:string" />
          <xsd:element minOccurs="0" name="namespace" type="xsd:string" />
          <xsd:element minOccurs="0" name="properties" type="tns:anyType2anyTypeMap" />
          <xsd:element minOccurs="0" name="value" type="xsd:string" />
        </xsd:sequence>
      </xsd:complexType>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="setExtendedTextHeadingResponse">
    <wsdl:part name="parameters" element="tns:setExtendedTextHeadingResponse" />
  </wsdl:message>
  <wsdl:message name="setExtendedTextWithArrayRequest">
    <wsdl:part name="parameters" element="tns:setExtendedTextWithArray" />
  </wsdl:message>
  <wsdl:message name="deleteExtendedTextRequest">
    <wsdl:part name="parameters" element="tns:deleteExtendedText" />
  </wsdl:message>
  <wsdl:message name="EnterpriseServiceOperationException">
    <wsdl:part name="EnterpriseServiceOperationException" element="tns:EnterpriseServiceOperationException" />
  </wsdl:message>
  <wsdl:message name="getExtendedTextHeadingResponse">
    <wsdl:part name="parameters" element="tns:getExtendedTextHeadingResponse" />
  </wsdl:message>
  <wsdl:message name="setExtendedTextHeadingRequest">
    <wsdl:part name="parameters" element="tns:setExtendedTextHeading" />
  </wsdl:message>
  <wsdl:message name="setExtendedTextRequest">
    <wsdl:part name="parameters" element="tns:setExtendedText" />
  </wsdl:message>
  <wsdl:message name="setExtendedTextWithArrayResponse">
    <wsdl:part name="parameters" element="tns:setExtendedTextWithArrayResponse" />
  </wsdl:message>
  <wsdl:message name="createEmptyExtendedTextRequest">
    <wsdl:part name="parameters" element="tns:createEmptyExtendedText" />
  </wsdl:message>
  <wsdl:message name="getExtendedTextAsArrayRequest">
    <wsdl:part name="parameters" element="tns:getExtendedTextAsArray" />
  </wsdl:message>
  <wsdl:message name="deleteExtendedTextResponse">
    <wsdl:part name="parameters" element="tns:deleteExtendedTextResponse" />
  </wsdl:message>
  <wsdl:message name="setExtendedTextResponse">
    <wsdl:part name="parameters" element="tns:setExtendedTextResponse" />
  </wsdl:message>
  <wsdl:message name="createRequest">
    <wsdl:part name="parameters" element="tns:create" />
  </wsdl:message>
  <wsdl:message name="getExtendedTextResponse">
    <wsdl:part name="parameters" element="tns:getExtendedTextResponse" />
  </wsdl:message>
  <wsdl:message name="getHeaderInformationResponse">
    <wsdl:part name="parameters" element="tns:getHeaderInformationResponse" />
  </wsdl:message>
  <wsdl:message name="getExtendedTextHeadingRequest">
    <wsdl:part name="parameters" element="tns:getExtendedTextHeading" />
  </wsdl:message>
  <wsdl:message name="getExtendedTextAsArrayResponse">
    <wsdl:part name="parameters" element="tns:getExtendedTextAsArrayResponse" />
  </wsdl:message>
  <wsdl:message name="getExtendedTextRequest">
    <wsdl:part name="parameters" element="tns:getExtendedText" />
  </wsdl:message>
  <wsdl:message name="createResponse">
    <wsdl:part name="parameters" element="tns:createResponse" />
  </wsdl:message>
  <wsdl:message name="getHeaderInformationRequest">
    <wsdl:part name="parameters" element="tns:getHeaderInformation" />
  </wsdl:message>
  <wsdl:message name="createEmptyExtendedTextResponse">
    <wsdl:part name="parameters" element="tns:createEmptyExtendedTextResponse" />
  </wsdl:message>
  <wsdl:portType name="StdTextCustom">
    <wsdl:operation name="getExtendedTextHeading">
      <wsdl:input name="getExtendedTextHeadingRequest" message="tns:getExtendedTextHeadingRequest" />
      <wsdl:output name="getExtendedTextHeadingResponse" message="tns:getExtendedTextHeadingResponse" />
      <wsdl:fault name="EnterpriseServiceOperationException" message="tns:EnterpriseServiceOperationException" />
    </wsdl:operation>
    <wsdl:operation name="getExtendedTextAsArray">
      <wsdl:input name="getExtendedTextAsArrayRequest" message="tns:getExtendedTextAsArrayRequest" />
      <wsdl:output name="getExtendedTextAsArrayResponse" message="tns:getExtendedTextAsArrayResponse" />
      <wsdl:fault name="EnterpriseServiceOperationException" message="tns:EnterpriseServiceOperationException" />
    </wsdl:operation>
    <wsdl:operation name="setExtendedText">
      <wsdl:input name="setExtendedTextRequest" message="tns:setExtendedTextRequest" />
      <wsdl:output name="setExtendedTextResponse" message="tns:setExtendedTextResponse" />
      <wsdl:fault name="EnterpriseServiceOperationException" message="tns:EnterpriseServiceOperationException" />
    </wsdl:operation>
    <wsdl:operation name="setExtendedTextWithArray">
      <wsdl:input name="setExtendedTextWithArrayRequest" message="tns:setExtendedTextWithArrayRequest" />
      <wsdl:output name="setExtendedTextWithArrayResponse" message="tns:setExtendedTextWithArrayResponse" />
      <wsdl:fault name="EnterpriseServiceOperationException" message="tns:EnterpriseServiceOperationException" />
    </wsdl:operation>
    <wsdl:operation name="create">
      <wsdl:input name="createRequest" message="tns:createRequest" />
      <wsdl:output name="createResponse" message="tns:createResponse" />
      <wsdl:fault name="EnterpriseServiceOperationException" message="tns:EnterpriseServiceOperationException" />
    </wsdl:operation>
    <wsdl:operation name="deleteExtendedText">
      <wsdl:input name="deleteExtendedTextRequest" message="tns:deleteExtendedTextRequest" />
      <wsdl:output name="deleteExtendedTextResponse" message="tns:deleteExtendedTextResponse" />
      <wsdl:fault name="EnterpriseServiceOperationException" message="tns:EnterpriseServiceOperationException" />
    </wsdl:operation>
    <wsdl:operation name="getExtendedText">
      <wsdl:input name="getExtendedTextRequest" message="tns:getExtendedTextRequest" />
      <wsdl:output name="getExtendedTextResponse" message="tns:getExtendedTextResponse" />
      <wsdl:fault name="EnterpriseServiceOperationException" message="tns:EnterpriseServiceOperationException" />
    </wsdl:operation>
    <wsdl:operation name="createEmptyExtendedText">
      <wsdl:input name="createEmptyExtendedTextRequest" message="tns:createEmptyExtendedTextRequest" />
      <wsdl:output name="createEmptyExtendedTextResponse" message="tns:createEmptyExtendedTextResponse" />
      <wsdl:fault name="EnterpriseServiceOperationException" message="tns:EnterpriseServiceOperationException" />
    </wsdl:operation>
    <wsdl:operation name="getHeaderInformation">
      <wsdl:input name="getHeaderInformationRequest" message="tns:getHeaderInformationRequest" />
      <wsdl:output name="getHeaderInformationResponse" message="tns:getHeaderInformationResponse" />
      <wsdl:fault name="EnterpriseServiceOperationException" message="tns:EnterpriseServiceOperationException" />
    </wsdl:operation>
    <wsdl:operation name="setExtendedTextHeading">
      <wsdl:input name="setExtendedTextHeadingRequest" message="tns:setExtendedTextHeadingRequest" />
      <wsdl:output name="setExtendedTextHeadingResponse" message="tns:setExtendedTextHeadingResponse" />
      <wsdl:fault name="EnterpriseServiceOperationException" message="tns:EnterpriseServiceOperationException" />
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="StdTextCustomServiceHttpBinding" type="tns:StdTextCustom">
    <wsdlsoap:binding transport="http://schemas.xmlsoap.org/soap/http" />
    <wsdl:operation name="getExtendedTextHeading">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input name="getExtendedTextHeadingRequest">
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="getExtendedTextHeadingResponse">
        <wsdlsoap:body use="literal" />
      </wsdl:output>
      <wsdl:fault name="EnterpriseServiceOperationException">
        <wsdlsoap:fault use="literal" name="EnterpriseServiceOperationException" namespace="" />
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getExtendedTextAsArray">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input name="getExtendedTextAsArrayRequest">
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="getExtendedTextAsArrayResponse">
        <wsdlsoap:body use="literal" />
      </wsdl:output>
      <wsdl:fault name="EnterpriseServiceOperationException">
        <wsdlsoap:fault use="literal" name="EnterpriseServiceOperationException" namespace="" />
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setExtendedText">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input name="setExtendedTextRequest">
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="setExtendedTextResponse">
        <wsdlsoap:body use="literal" />
      </wsdl:output>
      <wsdl:fault name="EnterpriseServiceOperationException">
        <wsdlsoap:fault use="literal" name="EnterpriseServiceOperationException" namespace="" />
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setExtendedTextWithArray">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input name="setExtendedTextWithArrayRequest">
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="setExtendedTextWithArrayResponse">
        <wsdlsoap:body use="literal" />
      </wsdl:output>
      <wsdl:fault name="EnterpriseServiceOperationException">
        <wsdlsoap:fault use="literal" name="EnterpriseServiceOperationException" namespace="" />
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="create">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input name="createRequest">
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="createResponse">
        <wsdlsoap:body use="literal" />
      </wsdl:output>
      <wsdl:fault name="EnterpriseServiceOperationException">
        <wsdlsoap:fault use="literal" name="EnterpriseServiceOperationException" namespace="" />
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteExtendedText">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input name="deleteExtendedTextRequest">
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="deleteExtendedTextResponse">
        <wsdlsoap:body use="literal" />
      </wsdl:output>
      <wsdl:fault name="EnterpriseServiceOperationException">
        <wsdlsoap:fault use="literal" name="EnterpriseServiceOperationException" namespace="" />
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getExtendedText">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input name="getExtendedTextRequest">
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="getExtendedTextResponse">
        <wsdlsoap:body use="literal" />
      </wsdl:output>
      <wsdl:fault name="EnterpriseServiceOperationException">
        <wsdlsoap:fault use="literal" name="EnterpriseServiceOperationException" namespace="" />
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createEmptyExtendedText">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input name="createEmptyExtendedTextRequest">
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="createEmptyExtendedTextResponse">
        <wsdlsoap:body use="literal" />
      </wsdl:output>
      <wsdl:fault name="EnterpriseServiceOperationException">
        <wsdlsoap:fault use="literal" name="EnterpriseServiceOperationException" namespace="" />
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getHeaderInformation">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input name="getHeaderInformationRequest">
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="getHeaderInformationResponse">
        <wsdlsoap:body use="literal" />
      </wsdl:output>
      <wsdl:fault name="EnterpriseServiceOperationException">
        <wsdlsoap:fault use="literal" name="EnterpriseServiceOperationException" namespace="" />
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setExtendedTextHeading">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input name="setExtendedTextHeadingRequest">
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="setExtendedTextHeadingResponse">
        <wsdlsoap:body use="literal" />
      </wsdl:output>
      <wsdl:fault name="EnterpriseServiceOperationException">
        <wsdlsoap:fault use="literal" name="EnterpriseServiceOperationException" namespace="" />
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="StdTextCustomService">
    <wsdl:port name="StdTextCustomServiceHttpPort" binding="tns:StdTextCustomServiceHttpBinding">
      <wsdlsoap:address location="http://ellipse-eamprd.lmnerp01.cerrejon.com/ews/services/StdTextCustomService" />
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>