//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace EllipseStdTextClassLibrary.StdTextService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="StdTextServiceHttpBinding", Namespace="http://stdtext.ellipse.enterpriseservice.mincom.com")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AbstractReplyCollectionDTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EnterpriseServiceOperationException))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ApplicationMessageImpl))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AbstractRequiredAttributesDTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AbstractDTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StdTextServiceSetTextRequestDTO[]))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Attribute[]))]
    public partial class StdTextService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback multipleSetTextOperationCompleted;
        
        private System.Threading.SendOrPostCallback retrieveTextNamesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTextOperationCompleted;
        
        private System.Threading.SendOrPostCallback setHeadingOperationCompleted;
        
        private System.Threading.SendOrPostCallback multipleDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback multipleGetHeadingWithPartialResultsOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback multipleGetHeadingOperationCompleted;
        
        private System.Threading.SendOrPostCallback multipleSetHeadingOperationCompleted;
        
        private System.Threading.SendOrPostCallback getHeadingOperationCompleted;
        
        private System.Threading.SendOrPostCallback createOperationCompleted;
        
        private System.Threading.SendOrPostCallback multipleAppendOperationCompleted;
        
        private System.Threading.SendOrPostCallback appendOperationCompleted;
        
        private System.Threading.SendOrPostCallback multipleCreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback setTextOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public StdTextService() {
            this.Url = global::EllipseStdTextClassLibrary.Properties.Settings.Default.EllipseStdTextClassLibrary_StdTextService_StdTextService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event multipleSetTextCompletedEventHandler multipleSetTextCompleted;
        
        /// <remarks/>
        public event retrieveTextNamesCompletedEventHandler retrieveTextNamesCompleted;
        
        /// <remarks/>
        public event getTextCompletedEventHandler getTextCompleted;
        
        /// <remarks/>
        public event setHeadingCompletedEventHandler setHeadingCompleted;
        
        /// <remarks/>
        public event multipleDeleteCompletedEventHandler multipleDeleteCompleted;
        
        /// <remarks/>
        public event multipleGetHeadingWithPartialResultsCompletedEventHandler multipleGetHeadingWithPartialResultsCompleted;
        
        /// <remarks/>
        public event deleteCompletedEventHandler deleteCompleted;
        
        /// <remarks/>
        public event multipleGetHeadingCompletedEventHandler multipleGetHeadingCompleted;
        
        /// <remarks/>
        public event multipleSetHeadingCompletedEventHandler multipleSetHeadingCompleted;
        
        /// <remarks/>
        public event getHeadingCompletedEventHandler getHeadingCompleted;
        
        /// <remarks/>
        public event createCompletedEventHandler createCompleted;
        
        /// <remarks/>
        public event multipleAppendCompletedEventHandler multipleAppendCompleted;
        
        /// <remarks/>
        public event appendCompletedEventHandler appendCompleted;
        
        /// <remarks/>
        public event multipleCreateCompletedEventHandler multipleCreateCompleted;
        
        /// <remarks/>
        public event setTextCompletedEventHandler setTextCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://stdtext.ellipse.enterpriseservice.mincom.com", ResponseNamespace="http://stdtext.ellipse.enterpriseservice.mincom.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public StdTextServiceSetTextReplyCollectionDTO multipleSetText([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] OperationContext context, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] StdTextServiceSetTextRequestDTO[] requestParameters) {
            object[] results = this.Invoke("multipleSetText", new object[] {
                        context,
                        requestParameters});
            return ((StdTextServiceSetTextReplyCollectionDTO)(results[0]));
        }
        
        /// <remarks/>
        public void multipleSetTextAsync(OperationContext context, StdTextServiceSetTextRequestDTO[] requestParameters) {
            this.multipleSetTextAsync(context, requestParameters, null);
        }
        
        /// <remarks/>
        public void multipleSetTextAsync(OperationContext context, StdTextServiceSetTextRequestDTO[] requestParameters, object userState) {
            if ((this.multipleSetTextOperationCompleted == null)) {
                this.multipleSetTextOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmultipleSetTextOperationCompleted);
            }
            this.InvokeAsync("multipleSetText", new object[] {
                        context,
                        requestParameters}, this.multipleSetTextOperationCompleted, userState);
        }
        
        private void OnmultipleSetTextOperationCompleted(object arg) {
            if ((this.multipleSetTextCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.multipleSetTextCompleted(this, new multipleSetTextCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://stdtext.ellipse.enterpriseservice.mincom.com", ResponseNamespace="http://stdtext.ellipse.enterpriseservice.mincom.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public StdTextServiceRetrieveTextNamesReplyCollectionDTO retrieveTextNames([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] OperationContext context, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] StdTextServiceRetrieveTextNamesRequestDTO requestParameters, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] StdTextServiceRetrieveTextNamesRequiredAttributesDTO requiredAttributes, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string restartInfo) {
            object[] results = this.Invoke("retrieveTextNames", new object[] {
                        context,
                        requestParameters,
                        requiredAttributes,
                        restartInfo});
            return ((StdTextServiceRetrieveTextNamesReplyCollectionDTO)(results[0]));
        }
        
        /// <remarks/>
        public void retrieveTextNamesAsync(OperationContext context, StdTextServiceRetrieveTextNamesRequestDTO requestParameters, StdTextServiceRetrieveTextNamesRequiredAttributesDTO requiredAttributes, string restartInfo) {
            this.retrieveTextNamesAsync(context, requestParameters, requiredAttributes, restartInfo, null);
        }
        
        /// <remarks/>
        public void retrieveTextNamesAsync(OperationContext context, StdTextServiceRetrieveTextNamesRequestDTO requestParameters, StdTextServiceRetrieveTextNamesRequiredAttributesDTO requiredAttributes, string restartInfo, object userState) {
            if ((this.retrieveTextNamesOperationCompleted == null)) {
                this.retrieveTextNamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnretrieveTextNamesOperationCompleted);
            }
            this.InvokeAsync("retrieveTextNames", new object[] {
                        context,
                        requestParameters,
                        requiredAttributes,
                        restartInfo}, this.retrieveTextNamesOperationCompleted, userState);
        }
        
        private void OnretrieveTextNamesOperationCompleted(object arg) {
            if ((this.retrieveTextNamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.retrieveTextNamesCompleted(this, new retrieveTextNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://stdtext.ellipse.enterpriseservice.mincom.com", ResponseNamespace="http://stdtext.ellipse.enterpriseservice.mincom.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public StdTextServiceGetTextReplyCollectionDTO getText([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] OperationContext context, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] StdTextServiceGetTextRequestDTO requestParameters, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] StdTextServiceGetTextRequiredAttributesDTO requiredAttributes, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string restartInfo) {
            object[] results = this.Invoke("getText", new object[] {
                        context,
                        requestParameters,
                        requiredAttributes,
                        restartInfo});
            return ((StdTextServiceGetTextReplyCollectionDTO)(results[0]));
        }
        
        /// <remarks/>
        public void getTextAsync(OperationContext context, StdTextServiceGetTextRequestDTO requestParameters, StdTextServiceGetTextRequiredAttributesDTO requiredAttributes, string restartInfo) {
            this.getTextAsync(context, requestParameters, requiredAttributes, restartInfo, null);
        }
        
        /// <remarks/>
        public void getTextAsync(OperationContext context, StdTextServiceGetTextRequestDTO requestParameters, StdTextServiceGetTextRequiredAttributesDTO requiredAttributes, string restartInfo, object userState) {
            if ((this.getTextOperationCompleted == null)) {
                this.getTextOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTextOperationCompleted);
            }
            this.InvokeAsync("getText", new object[] {
                        context,
                        requestParameters,
                        requiredAttributes,
                        restartInfo}, this.getTextOperationCompleted, userState);
        }
        
        private void OngetTextOperationCompleted(object arg) {
            if ((this.getTextCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTextCompleted(this, new getTextCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://stdtext.ellipse.enterpriseservice.mincom.com", ResponseNamespace="http://stdtext.ellipse.enterpriseservice.mincom.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public StdTextServiceSetHeadingReplyDTO setHeading([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] OperationContext context, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] StdTextServiceSetHeadingRequestDTO requestParameters) {
            object[] results = this.Invoke("setHeading", new object[] {
                        context,
                        requestParameters});
            return ((StdTextServiceSetHeadingReplyDTO)(results[0]));
        }
        
        /// <remarks/>
        public void setHeadingAsync(OperationContext context, StdTextServiceSetHeadingRequestDTO requestParameters) {
            this.setHeadingAsync(context, requestParameters, null);
        }
        
        /// <remarks/>
        public void setHeadingAsync(OperationContext context, StdTextServiceSetHeadingRequestDTO requestParameters, object userState) {
            if ((this.setHeadingOperationCompleted == null)) {
                this.setHeadingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetHeadingOperationCompleted);
            }
            this.InvokeAsync("setHeading", new object[] {
                        context,
                        requestParameters}, this.setHeadingOperationCompleted, userState);
        }
        
        private void OnsetHeadingOperationCompleted(object arg) {
            if ((this.setHeadingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setHeadingCompleted(this, new setHeadingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://stdtext.ellipse.enterpriseservice.mincom.com", ResponseNamespace="http://stdtext.ellipse.enterpriseservice.mincom.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public StdTextServiceDeleteReplyCollectionDTO multipleDelete([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] OperationContext context, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] StdTextServiceDeleteRequestDTO[] requestParameters) {
            object[] results = this.Invoke("multipleDelete", new object[] {
                        context,
                        requestParameters});
            return ((StdTextServiceDeleteReplyCollectionDTO)(results[0]));
        }
        
        /// <remarks/>
        public void multipleDeleteAsync(OperationContext context, StdTextServiceDeleteRequestDTO[] requestParameters) {
            this.multipleDeleteAsync(context, requestParameters, null);
        }
        
        /// <remarks/>
        public void multipleDeleteAsync(OperationContext context, StdTextServiceDeleteRequestDTO[] requestParameters, object userState) {
            if ((this.multipleDeleteOperationCompleted == null)) {
                this.multipleDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmultipleDeleteOperationCompleted);
            }
            this.InvokeAsync("multipleDelete", new object[] {
                        context,
                        requestParameters}, this.multipleDeleteOperationCompleted, userState);
        }
        
        private void OnmultipleDeleteOperationCompleted(object arg) {
            if ((this.multipleDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.multipleDeleteCompleted(this, new multipleDeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://stdtext.ellipse.enterpriseservice.mincom.com", ResponseNamespace="http://stdtext.ellipse.enterpriseservice.mincom.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public StdTextServiceGetHeadingReplyCollectionDTO multipleGetHeadingWithPartialResults([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] OperationContext context, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] StdTextServiceGetHeadingRequestDTO[] requestParameters) {
            object[] results = this.Invoke("multipleGetHeadingWithPartialResults", new object[] {
                        context,
                        requestParameters});
            return ((StdTextServiceGetHeadingReplyCollectionDTO)(results[0]));
        }
        
        /// <remarks/>
        public void multipleGetHeadingWithPartialResultsAsync(OperationContext context, StdTextServiceGetHeadingRequestDTO[] requestParameters) {
            this.multipleGetHeadingWithPartialResultsAsync(context, requestParameters, null);
        }
        
        /// <remarks/>
        public void multipleGetHeadingWithPartialResultsAsync(OperationContext context, StdTextServiceGetHeadingRequestDTO[] requestParameters, object userState) {
            if ((this.multipleGetHeadingWithPartialResultsOperationCompleted == null)) {
                this.multipleGetHeadingWithPartialResultsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmultipleGetHeadingWithPartialResultsOperationCompleted);
            }
            this.InvokeAsync("multipleGetHeadingWithPartialResults", new object[] {
                        context,
                        requestParameters}, this.multipleGetHeadingWithPartialResultsOperationCompleted, userState);
        }
        
        private void OnmultipleGetHeadingWithPartialResultsOperationCompleted(object arg) {
            if ((this.multipleGetHeadingWithPartialResultsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.multipleGetHeadingWithPartialResultsCompleted(this, new multipleGetHeadingWithPartialResultsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://stdtext.ellipse.enterpriseservice.mincom.com", ResponseNamespace="http://stdtext.ellipse.enterpriseservice.mincom.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public StdTextServiceDeleteReplyDTO delete([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] OperationContext context, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] StdTextServiceDeleteRequestDTO requestParameters) {
            object[] results = this.Invoke("delete", new object[] {
                        context,
                        requestParameters});
            return ((StdTextServiceDeleteReplyDTO)(results[0]));
        }
        
        /// <remarks/>
        public void deleteAsync(OperationContext context, StdTextServiceDeleteRequestDTO requestParameters) {
            this.deleteAsync(context, requestParameters, null);
        }
        
        /// <remarks/>
        public void deleteAsync(OperationContext context, StdTextServiceDeleteRequestDTO requestParameters, object userState) {
            if ((this.deleteOperationCompleted == null)) {
                this.deleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteOperationCompleted);
            }
            this.InvokeAsync("delete", new object[] {
                        context,
                        requestParameters}, this.deleteOperationCompleted, userState);
        }
        
        private void OndeleteOperationCompleted(object arg) {
            if ((this.deleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteCompleted(this, new deleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://stdtext.ellipse.enterpriseservice.mincom.com", ResponseNamespace="http://stdtext.ellipse.enterpriseservice.mincom.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public StdTextServiceGetHeadingReplyCollectionDTO multipleGetHeading([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] OperationContext context, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] StdTextServiceGetHeadingRequestDTO[] requestParameters) {
            object[] results = this.Invoke("multipleGetHeading", new object[] {
                        context,
                        requestParameters});
            return ((StdTextServiceGetHeadingReplyCollectionDTO)(results[0]));
        }
        
        /// <remarks/>
        public void multipleGetHeadingAsync(OperationContext context, StdTextServiceGetHeadingRequestDTO[] requestParameters) {
            this.multipleGetHeadingAsync(context, requestParameters, null);
        }
        
        /// <remarks/>
        public void multipleGetHeadingAsync(OperationContext context, StdTextServiceGetHeadingRequestDTO[] requestParameters, object userState) {
            if ((this.multipleGetHeadingOperationCompleted == null)) {
                this.multipleGetHeadingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmultipleGetHeadingOperationCompleted);
            }
            this.InvokeAsync("multipleGetHeading", new object[] {
                        context,
                        requestParameters}, this.multipleGetHeadingOperationCompleted, userState);
        }
        
        private void OnmultipleGetHeadingOperationCompleted(object arg) {
            if ((this.multipleGetHeadingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.multipleGetHeadingCompleted(this, new multipleGetHeadingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://stdtext.ellipse.enterpriseservice.mincom.com", ResponseNamespace="http://stdtext.ellipse.enterpriseservice.mincom.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public StdTextServiceSetHeadingReplyCollectionDTO multipleSetHeading([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] OperationContext context, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] StdTextServiceSetHeadingRequestDTO[] requestParameters) {
            object[] results = this.Invoke("multipleSetHeading", new object[] {
                        context,
                        requestParameters});
            return ((StdTextServiceSetHeadingReplyCollectionDTO)(results[0]));
        }
        
        /// <remarks/>
        public void multipleSetHeadingAsync(OperationContext context, StdTextServiceSetHeadingRequestDTO[] requestParameters) {
            this.multipleSetHeadingAsync(context, requestParameters, null);
        }
        
        /// <remarks/>
        public void multipleSetHeadingAsync(OperationContext context, StdTextServiceSetHeadingRequestDTO[] requestParameters, object userState) {
            if ((this.multipleSetHeadingOperationCompleted == null)) {
                this.multipleSetHeadingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmultipleSetHeadingOperationCompleted);
            }
            this.InvokeAsync("multipleSetHeading", new object[] {
                        context,
                        requestParameters}, this.multipleSetHeadingOperationCompleted, userState);
        }
        
        private void OnmultipleSetHeadingOperationCompleted(object arg) {
            if ((this.multipleSetHeadingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.multipleSetHeadingCompleted(this, new multipleSetHeadingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://stdtext.ellipse.enterpriseservice.mincom.com", ResponseNamespace="http://stdtext.ellipse.enterpriseservice.mincom.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public StdTextServiceGetHeadingReplyDTO getHeading([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] OperationContext context, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] StdTextServiceGetHeadingRequestDTO requestParameters) {
            object[] results = this.Invoke("getHeading", new object[] {
                        context,
                        requestParameters});
            return ((StdTextServiceGetHeadingReplyDTO)(results[0]));
        }
        
        /// <remarks/>
        public void getHeadingAsync(OperationContext context, StdTextServiceGetHeadingRequestDTO requestParameters) {
            this.getHeadingAsync(context, requestParameters, null);
        }
        
        /// <remarks/>
        public void getHeadingAsync(OperationContext context, StdTextServiceGetHeadingRequestDTO requestParameters, object userState) {
            if ((this.getHeadingOperationCompleted == null)) {
                this.getHeadingOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetHeadingOperationCompleted);
            }
            this.InvokeAsync("getHeading", new object[] {
                        context,
                        requestParameters}, this.getHeadingOperationCompleted, userState);
        }
        
        private void OngetHeadingOperationCompleted(object arg) {
            if ((this.getHeadingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getHeadingCompleted(this, new getHeadingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://stdtext.ellipse.enterpriseservice.mincom.com", ResponseNamespace="http://stdtext.ellipse.enterpriseservice.mincom.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public StdTextServiceCreateReplyDTO create([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] OperationContext context, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] StdTextServiceCreateRequestDTO requestParameters) {
            object[] results = this.Invoke("create", new object[] {
                        context,
                        requestParameters});
            return ((StdTextServiceCreateReplyDTO)(results[0]));
        }
        
        /// <remarks/>
        public void createAsync(OperationContext context, StdTextServiceCreateRequestDTO requestParameters) {
            this.createAsync(context, requestParameters, null);
        }
        
        /// <remarks/>
        public void createAsync(OperationContext context, StdTextServiceCreateRequestDTO requestParameters, object userState) {
            if ((this.createOperationCompleted == null)) {
                this.createOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateOperationCompleted);
            }
            this.InvokeAsync("create", new object[] {
                        context,
                        requestParameters}, this.createOperationCompleted, userState);
        }
        
        private void OncreateOperationCompleted(object arg) {
            if ((this.createCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createCompleted(this, new createCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://stdtext.ellipse.enterpriseservice.mincom.com", ResponseNamespace="http://stdtext.ellipse.enterpriseservice.mincom.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public StdTextServiceAppendReplyCollectionDTO multipleAppend([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] OperationContext context, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] StdTextServiceAppendRequestDTO[] requestParameters) {
            object[] results = this.Invoke("multipleAppend", new object[] {
                        context,
                        requestParameters});
            return ((StdTextServiceAppendReplyCollectionDTO)(results[0]));
        }
        
        /// <remarks/>
        public void multipleAppendAsync(OperationContext context, StdTextServiceAppendRequestDTO[] requestParameters) {
            this.multipleAppendAsync(context, requestParameters, null);
        }
        
        /// <remarks/>
        public void multipleAppendAsync(OperationContext context, StdTextServiceAppendRequestDTO[] requestParameters, object userState) {
            if ((this.multipleAppendOperationCompleted == null)) {
                this.multipleAppendOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmultipleAppendOperationCompleted);
            }
            this.InvokeAsync("multipleAppend", new object[] {
                        context,
                        requestParameters}, this.multipleAppendOperationCompleted, userState);
        }
        
        private void OnmultipleAppendOperationCompleted(object arg) {
            if ((this.multipleAppendCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.multipleAppendCompleted(this, new multipleAppendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://stdtext.ellipse.enterpriseservice.mincom.com", ResponseNamespace="http://stdtext.ellipse.enterpriseservice.mincom.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public StdTextServiceAppendReplyDTO append([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] OperationContext context, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] StdTextServiceAppendRequestDTO requestParameters) {
            object[] results = this.Invoke("append", new object[] {
                        context,
                        requestParameters});
            return ((StdTextServiceAppendReplyDTO)(results[0]));
        }
        
        /// <remarks/>
        public void appendAsync(OperationContext context, StdTextServiceAppendRequestDTO requestParameters) {
            this.appendAsync(context, requestParameters, null);
        }
        
        /// <remarks/>
        public void appendAsync(OperationContext context, StdTextServiceAppendRequestDTO requestParameters, object userState) {
            if ((this.appendOperationCompleted == null)) {
                this.appendOperationCompleted = new System.Threading.SendOrPostCallback(this.OnappendOperationCompleted);
            }
            this.InvokeAsync("append", new object[] {
                        context,
                        requestParameters}, this.appendOperationCompleted, userState);
        }
        
        private void OnappendOperationCompleted(object arg) {
            if ((this.appendCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.appendCompleted(this, new appendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://stdtext.ellipse.enterpriseservice.mincom.com", ResponseNamespace="http://stdtext.ellipse.enterpriseservice.mincom.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public StdTextServiceCreateReplyCollectionDTO multipleCreate([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] OperationContext context, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] StdTextServiceCreateRequestDTO[] requestParameters) {
            object[] results = this.Invoke("multipleCreate", new object[] {
                        context,
                        requestParameters});
            return ((StdTextServiceCreateReplyCollectionDTO)(results[0]));
        }
        
        /// <remarks/>
        public void multipleCreateAsync(OperationContext context, StdTextServiceCreateRequestDTO[] requestParameters) {
            this.multipleCreateAsync(context, requestParameters, null);
        }
        
        /// <remarks/>
        public void multipleCreateAsync(OperationContext context, StdTextServiceCreateRequestDTO[] requestParameters, object userState) {
            if ((this.multipleCreateOperationCompleted == null)) {
                this.multipleCreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmultipleCreateOperationCompleted);
            }
            this.InvokeAsync("multipleCreate", new object[] {
                        context,
                        requestParameters}, this.multipleCreateOperationCompleted, userState);
        }
        
        private void OnmultipleCreateOperationCompleted(object arg) {
            if ((this.multipleCreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.multipleCreateCompleted(this, new multipleCreateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://stdtext.ellipse.enterpriseservice.mincom.com", ResponseNamespace="http://stdtext.ellipse.enterpriseservice.mincom.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public StdTextServiceSetTextReplyDTO setText([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] OperationContext context, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] StdTextServiceSetTextRequestDTO requestParameters) {
            object[] results = this.Invoke("setText", new object[] {
                        context,
                        requestParameters});
            return ((StdTextServiceSetTextReplyDTO)(results[0]));
        }
        
        /// <remarks/>
        public void setTextAsync(OperationContext context, StdTextServiceSetTextRequestDTO requestParameters) {
            this.setTextAsync(context, requestParameters, null);
        }
        
        /// <remarks/>
        public void setTextAsync(OperationContext context, StdTextServiceSetTextRequestDTO requestParameters, object userState) {
            if ((this.setTextOperationCompleted == null)) {
                this.setTextOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetTextOperationCompleted);
            }
            this.InvokeAsync("setText", new object[] {
                        context,
                        requestParameters}, this.setTextOperationCompleted, userState);
        }
        
        private void OnsetTextOperationCompleted(object arg) {
            if ((this.setTextCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setTextCompleted(this, new setTextCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://connectivity.service.ews.mincom.com")]
    public partial class OperationContext {
        
        private string applicationClientIdField;
        
        private string districtField;
        
        private bool eventDisableField;
        
        private bool eventDisableFieldSpecified;
        
        private int maxInstancesField;
        
        private bool maxInstancesFieldSpecified;
        
        private string positionField;
        
        private bool returnWarningsField;
        
        private bool returnWarningsFieldSpecified;
        
        private RunAs runAsField;
        
        private string tenantIdField;
        
        private bool traceField;
        
        private bool traceFieldSpecified;
        
        private string transactionField;
        
        /// <remarks/>
        public string applicationClientId {
            get {
                return this.applicationClientIdField;
            }
            set {
                this.applicationClientIdField = value;
            }
        }
        
        /// <remarks/>
        public string district {
            get {
                return this.districtField;
            }
            set {
                this.districtField = value;
            }
        }
        
        /// <remarks/>
        public bool eventDisable {
            get {
                return this.eventDisableField;
            }
            set {
                this.eventDisableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool eventDisableSpecified {
            get {
                return this.eventDisableFieldSpecified;
            }
            set {
                this.eventDisableFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int maxInstances {
            get {
                return this.maxInstancesField;
            }
            set {
                this.maxInstancesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool maxInstancesSpecified {
            get {
                return this.maxInstancesFieldSpecified;
            }
            set {
                this.maxInstancesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string position {
            get {
                return this.positionField;
            }
            set {
                this.positionField = value;
            }
        }
        
        /// <remarks/>
        public bool returnWarnings {
            get {
                return this.returnWarningsField;
            }
            set {
                this.returnWarningsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool returnWarningsSpecified {
            get {
                return this.returnWarningsFieldSpecified;
            }
            set {
                this.returnWarningsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public RunAs runAs {
            get {
                return this.runAsField;
            }
            set {
                this.runAsField = value;
            }
        }
        
        /// <remarks/>
        public string tenantId {
            get {
                return this.tenantIdField;
            }
            set {
                this.tenantIdField = value;
            }
        }
        
        /// <remarks/>
        public bool trace {
            get {
                return this.traceField;
            }
            set {
                this.traceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool traceSpecified {
            get {
                return this.traceFieldSpecified;
            }
            set {
                this.traceFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string transaction {
            get {
                return this.transactionField;
            }
            set {
                this.transactionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://connectivity.service.ews.mincom.com")]
    public partial class RunAs {
        
        private string districtField;
        
        private string positionField;
        
        private string userField;
        
        /// <remarks/>
        public string district {
            get {
                return this.districtField;
            }
            set {
                this.districtField = value;
            }
        }
        
        /// <remarks/>
        public string position {
            get {
                return this.positionField;
            }
            set {
                this.positionField = value;
            }
        }
        
        /// <remarks/>
        public string user {
            get {
                return this.userField;
            }
            set {
                this.userField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StdTextServiceCreateReplyCollectionDTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StdTextServiceAppendReplyCollectionDTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StdTextServiceSetHeadingReplyCollectionDTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StdTextServiceGetHeadingReplyCollectionDTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StdTextServiceDeleteReplyCollectionDTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StdTextServiceGetTextReplyCollectionDTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StdTextServiceRetrieveTextNamesReplyCollectionDTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StdTextServiceSetTextReplyCollectionDTO))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ellipse.enterpriseservice.mincom.com")]
    public abstract partial class AbstractReplyCollectionDTO {
        
        private string collectionRestartPointField;
        
        /// <remarks/>
        public string collectionRestartPoint {
            get {
                return this.collectionRestartPointField;
            }
            set {
                this.collectionRestartPointField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://stdtext.ellipse.enterpriseservice.mincom.com")]
    public partial class StdTextServiceCreateReplyCollectionDTO : AbstractReplyCollectionDTO {
        
        private StdTextServiceCreateReplyDTO[] replyElementsField;
        
        /// <remarks/>
        public StdTextServiceCreateReplyDTO[] replyElements {
            get {
                return this.replyElementsField;
            }
            set {
                this.replyElementsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://stdtext.ellipse.enterpriseservice.mincom.com")]
    public partial class StdTextServiceCreateReplyDTO : AbstractReplyDTO {
        
        private string stdTextIdField;
        
        /// <remarks/>
        public string stdTextId {
            get {
                return this.stdTextIdField;
            }
            set {
                this.stdTextIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StdTextServiceAppendReplyDTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StdTextServiceCreateReplyDTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StdTextServiceGetHeadingReplyDTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StdTextServiceDeleteReplyDTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StdTextServiceSetHeadingReplyDTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StdTextServiceGetTextReplyDTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StdTextServiceRetrieveTextNamesReplyDTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StdTextServiceSetTextReplyDTO))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ellipse.enterpriseservice.mincom.com")]
    public abstract partial class AbstractReplyDTO : AbstractDTO {
        
        private WarningMessageDTO[] warningsAndInformationField;
        
        /// <remarks/>
        public WarningMessageDTO[] warningsAndInformation {
            get {
                return this.warningsAndInformationField;
            }
            set {
                this.warningsAndInformationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ellipse.enterpriseservice.mincom.com")]
    public partial class WarningMessageDTO : ApplicationMessageImpl {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ErrorMessageDTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WarningMessageDTO))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ellipse.enterpriseservice.mincom.com")]
    public partial class ApplicationMessageImpl {
        
        private string codeField;
        
        private int dtoIndexField;
        
        private bool dtoIndexFieldSpecified;
        
        private int fieldIndexField;
        
        private bool fieldIndexFieldSpecified;
        
        private string fieldNameField;
        
        private string messageField;
        
        /// <remarks/>
        public string code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public int dtoIndex {
            get {
                return this.dtoIndexField;
            }
            set {
                this.dtoIndexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dtoIndexSpecified {
            get {
                return this.dtoIndexFieldSpecified;
            }
            set {
                this.dtoIndexFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int fieldIndex {
            get {
                return this.fieldIndexField;
            }
            set {
                this.fieldIndexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool fieldIndexSpecified {
            get {
                return this.fieldIndexFieldSpecified;
            }
            set {
                this.fieldIndexFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string fieldName {
            get {
                return this.fieldNameField;
            }
            set {
                this.fieldNameField = value;
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ellipse.enterpriseservice.mincom.com")]
    public partial class ErrorMessageDTO : ApplicationMessageImpl {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StdTextServiceGetTextRequestDTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StdTextServiceRetrieveTextNamesRequestDTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StdTextServiceCreateRequestDTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StdTextServiceAppendRequestDTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StdTextServiceSetHeadingRequestDTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StdTextServiceGetHeadingRequestDTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StdTextServiceDeleteRequestDTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AbstractReplyDTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StdTextServiceAppendReplyDTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StdTextServiceCreateReplyDTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StdTextServiceGetHeadingReplyDTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StdTextServiceDeleteReplyDTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StdTextServiceSetHeadingReplyDTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StdTextServiceGetTextReplyDTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StdTextServiceRetrieveTextNamesReplyDTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StdTextServiceSetTextReplyDTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StdTextServiceSetTextRequestDTO))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ellipse.enterpriseservice.mincom.com")]
    public abstract partial class AbstractDTO {
        
        private Attribute[] customAttributesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://attribute.ellipse.mincom.com")]
        public Attribute[] customAttributes {
            get {
                return this.customAttributesField;
            }
            set {
                this.customAttributesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://attribute.ellipse.mincom.com")]
    public partial class Attribute {
        
        private string dataTypeField;
        
        private string nameField;
        
        private string namespaceField;
        
        private anyType2anyTypeMapEntry[] propertiesField;
        
        private string valueField;
        
        /// <remarks/>
        public string dataType {
            get {
                return this.dataTypeField;
            }
            set {
                this.dataTypeField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string @namespace {
            get {
                return this.namespaceField;
            }
            set {
                this.namespaceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("entry", Namespace="http://stdtext.ellipse.enterpriseservice.mincom.com", IsNullable=false)]
        public anyType2anyTypeMapEntry[] properties {
            get {
                return this.propertiesField;
            }
            set {
                this.propertiesField = value;
            }
        }
        
        /// <remarks/>
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://stdtext.ellipse.enterpriseservice.mincom.com")]
    public partial class anyType2anyTypeMapEntry {
        
        private object keyField;
        
        private object valueField;
        
        /// <remarks/>
        public object key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        public object value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://stdtext.ellipse.enterpriseservice.mincom.com")]
    public partial class StdTextServiceGetTextRequestDTO : AbstractDTO {
        
        private string duplicateStdTextIdField;
        
        private string stdTextIdField;
        
        /// <remarks/>
        public string duplicateStdTextId {
            get {
                return this.duplicateStdTextIdField;
            }
            set {
                this.duplicateStdTextIdField = value;
            }
        }
        
        /// <remarks/>
        public string stdTextId {
            get {
                return this.stdTextIdField;
            }
            set {
                this.stdTextIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://stdtext.ellipse.enterpriseservice.mincom.com")]
    public partial class StdTextServiceRetrieveTextNamesRequestDTO : AbstractDTO {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://stdtext.ellipse.enterpriseservice.mincom.com")]
    public partial class StdTextServiceCreateRequestDTO : AbstractDTO {
        
        private string headingLineField;
        
        private decimal lineCountField;
        
        private bool lineCountFieldSpecified;
        
        private StdTextServiceCreateRequiredAttributesDTO requiredAttributesField;
        
        private decimal startLineNoField;
        
        private bool startLineNoFieldSpecified;
        
        private string stdTextIdField;
        
        private string[] textLineField;
        
        private decimal totalCurrentLinesField;
        
        private bool totalCurrentLinesFieldSpecified;
        
        /// <remarks/>
        public string headingLine {
            get {
                return this.headingLineField;
            }
            set {
                this.headingLineField = value;
            }
        }
        
        /// <remarks/>
        public decimal lineCount {
            get {
                return this.lineCountField;
            }
            set {
                this.lineCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool lineCountSpecified {
            get {
                return this.lineCountFieldSpecified;
            }
            set {
                this.lineCountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public StdTextServiceCreateRequiredAttributesDTO requiredAttributes {
            get {
                return this.requiredAttributesField;
            }
            set {
                this.requiredAttributesField = value;
            }
        }
        
        /// <remarks/>
        public decimal startLineNo {
            get {
                return this.startLineNoField;
            }
            set {
                this.startLineNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool startLineNoSpecified {
            get {
                return this.startLineNoFieldSpecified;
            }
            set {
                this.startLineNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string stdTextId {
            get {
                return this.stdTextIdField;
            }
            set {
                this.stdTextIdField = value;
            }
        }
        
        /// <remarks/>
        public string[] textLine {
            get {
                return this.textLineField;
            }
            set {
                this.textLineField = value;
            }
        }
        
        /// <remarks/>
        public decimal totalCurrentLines {
            get {
                return this.totalCurrentLinesField;
            }
            set {
                this.totalCurrentLinesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool totalCurrentLinesSpecified {
            get {
                return this.totalCurrentLinesFieldSpecified;
            }
            set {
                this.totalCurrentLinesFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://stdtext.ellipse.enterpriseservice.mincom.com")]
    public partial class StdTextServiceCreateRequiredAttributesDTO : AbstractRequiredAttributesDTO {
        
        private bool returnStdTextIdField;
        
        private bool returnStdTextIdFieldSpecified;
        
        /// <remarks/>
        public bool returnStdTextId {
            get {
                return this.returnStdTextIdField;
            }
            set {
                this.returnStdTextIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool returnStdTextIdSpecified {
            get {
                return this.returnStdTextIdFieldSpecified;
            }
            set {
                this.returnStdTextIdFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StdTextServiceAppendRequiredAttributesDTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StdTextServiceCreateRequiredAttributesDTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StdTextServiceGetHeadingRequiredAttributesDTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StdTextServiceDeleteRequiredAttributesDTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StdTextServiceSetHeadingRequiredAttributesDTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StdTextServiceGetTextRequiredAttributesDTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StdTextServiceRetrieveTextNamesRequiredAttributesDTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StdTextServiceSetTextRequiredAttributesDTO))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ellipse.enterpriseservice.mincom.com")]
    public abstract partial class AbstractRequiredAttributesDTO {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://stdtext.ellipse.enterpriseservice.mincom.com")]
    public partial class StdTextServiceAppendRequiredAttributesDTO : AbstractRequiredAttributesDTO {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://stdtext.ellipse.enterpriseservice.mincom.com")]
    public partial class StdTextServiceGetHeadingRequiredAttributesDTO : AbstractRequiredAttributesDTO {
        
        private bool returnHeadingLineField;
        
        private bool returnHeadingLineFieldSpecified;
        
        private bool returnHeadingMandatoryField;
        
        private bool returnHeadingMandatoryFieldSpecified;
        
        private bool returnLineLengthField;
        
        private bool returnLineLengthFieldSpecified;
        
        private bool returnMaxLineLengthField;
        
        private bool returnMaxLineLengthFieldSpecified;
        
        private bool returnStdTextExistsField;
        
        private bool returnStdTextExistsFieldSpecified;
        
        private bool returnTextTypeHasHeadingField;
        
        private bool returnTextTypeHasHeadingFieldSpecified;
        
        /// <remarks/>
        public bool returnHeadingLine {
            get {
                return this.returnHeadingLineField;
            }
            set {
                this.returnHeadingLineField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool returnHeadingLineSpecified {
            get {
                return this.returnHeadingLineFieldSpecified;
            }
            set {
                this.returnHeadingLineFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool returnHeadingMandatory {
            get {
                return this.returnHeadingMandatoryField;
            }
            set {
                this.returnHeadingMandatoryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool returnHeadingMandatorySpecified {
            get {
                return this.returnHeadingMandatoryFieldSpecified;
            }
            set {
                this.returnHeadingMandatoryFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool returnLineLength {
            get {
                return this.returnLineLengthField;
            }
            set {
                this.returnLineLengthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool returnLineLengthSpecified {
            get {
                return this.returnLineLengthFieldSpecified;
            }
            set {
                this.returnLineLengthFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool returnMaxLineLength {
            get {
                return this.returnMaxLineLengthField;
            }
            set {
                this.returnMaxLineLengthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool returnMaxLineLengthSpecified {
            get {
                return this.returnMaxLineLengthFieldSpecified;
            }
            set {
                this.returnMaxLineLengthFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool returnStdTextExists {
            get {
                return this.returnStdTextExistsField;
            }
            set {
                this.returnStdTextExistsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool returnStdTextExistsSpecified {
            get {
                return this.returnStdTextExistsFieldSpecified;
            }
            set {
                this.returnStdTextExistsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool returnTextTypeHasHeading {
            get {
                return this.returnTextTypeHasHeadingField;
            }
            set {
                this.returnTextTypeHasHeadingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool returnTextTypeHasHeadingSpecified {
            get {
                return this.returnTextTypeHasHeadingFieldSpecified;
            }
            set {
                this.returnTextTypeHasHeadingFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://stdtext.ellipse.enterpriseservice.mincom.com")]
    public partial class StdTextServiceDeleteRequiredAttributesDTO : AbstractRequiredAttributesDTO {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://stdtext.ellipse.enterpriseservice.mincom.com")]
    public partial class StdTextServiceSetHeadingRequiredAttributesDTO : AbstractRequiredAttributesDTO {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://stdtext.ellipse.enterpriseservice.mincom.com")]
    public partial class StdTextServiceGetTextRequiredAttributesDTO : AbstractRequiredAttributesDTO {
        
        private bool returnLineCountField;
        
        private bool returnLineCountFieldSpecified;
        
        private bool returnStartLineNoField;
        
        private bool returnStartLineNoFieldSpecified;
        
        private bool returnTextLineField;
        
        private bool returnTextLineFieldSpecified;
        
        /// <remarks/>
        public bool returnLineCount {
            get {
                return this.returnLineCountField;
            }
            set {
                this.returnLineCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool returnLineCountSpecified {
            get {
                return this.returnLineCountFieldSpecified;
            }
            set {
                this.returnLineCountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool returnStartLineNo {
            get {
                return this.returnStartLineNoField;
            }
            set {
                this.returnStartLineNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool returnStartLineNoSpecified {
            get {
                return this.returnStartLineNoFieldSpecified;
            }
            set {
                this.returnStartLineNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool returnTextLine {
            get {
                return this.returnTextLineField;
            }
            set {
                this.returnTextLineField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool returnTextLineSpecified {
            get {
                return this.returnTextLineFieldSpecified;
            }
            set {
                this.returnTextLineFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://stdtext.ellipse.enterpriseservice.mincom.com")]
    public partial class StdTextServiceRetrieveTextNamesRequiredAttributesDTO : AbstractRequiredAttributesDTO {
        
        private bool returnHeadingLineField;
        
        private bool returnHeadingLineFieldSpecified;
        
        private bool returnStdTextIdField;
        
        private bool returnStdTextIdFieldSpecified;
        
        /// <remarks/>
        public bool returnHeadingLine {
            get {
                return this.returnHeadingLineField;
            }
            set {
                this.returnHeadingLineField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool returnHeadingLineSpecified {
            get {
                return this.returnHeadingLineFieldSpecified;
            }
            set {
                this.returnHeadingLineFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool returnStdTextId {
            get {
                return this.returnStdTextIdField;
            }
            set {
                this.returnStdTextIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool returnStdTextIdSpecified {
            get {
                return this.returnStdTextIdFieldSpecified;
            }
            set {
                this.returnStdTextIdFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://stdtext.ellipse.enterpriseservice.mincom.com")]
    public partial class StdTextServiceSetTextRequiredAttributesDTO : AbstractRequiredAttributesDTO {
        
        private bool returnStdTextExistsField;
        
        private bool returnStdTextExistsFieldSpecified;
        
        private bool returnStdTextIdField;
        
        private bool returnStdTextIdFieldSpecified;
        
        /// <remarks/>
        public bool returnStdTextExists {
            get {
                return this.returnStdTextExistsField;
            }
            set {
                this.returnStdTextExistsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool returnStdTextExistsSpecified {
            get {
                return this.returnStdTextExistsFieldSpecified;
            }
            set {
                this.returnStdTextExistsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool returnStdTextId {
            get {
                return this.returnStdTextIdField;
            }
            set {
                this.returnStdTextIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool returnStdTextIdSpecified {
            get {
                return this.returnStdTextIdFieldSpecified;
            }
            set {
                this.returnStdTextIdFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://stdtext.ellipse.enterpriseservice.mincom.com")]
    public partial class StdTextServiceAppendRequestDTO : AbstractDTO {
        
        private decimal lineCountField;
        
        private bool lineCountFieldSpecified;
        
        private StdTextServiceAppendRequiredAttributesDTO requiredAttributesField;
        
        private string stdTextIdField;
        
        private string[] textLineField;
        
        /// <remarks/>
        public decimal lineCount {
            get {
                return this.lineCountField;
            }
            set {
                this.lineCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool lineCountSpecified {
            get {
                return this.lineCountFieldSpecified;
            }
            set {
                this.lineCountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public StdTextServiceAppendRequiredAttributesDTO requiredAttributes {
            get {
                return this.requiredAttributesField;
            }
            set {
                this.requiredAttributesField = value;
            }
        }
        
        /// <remarks/>
        public string stdTextId {
            get {
                return this.stdTextIdField;
            }
            set {
                this.stdTextIdField = value;
            }
        }
        
        /// <remarks/>
        public string[] textLine {
            get {
                return this.textLineField;
            }
            set {
                this.textLineField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://stdtext.ellipse.enterpriseservice.mincom.com")]
    public partial class StdTextServiceSetHeadingRequestDTO : AbstractDTO {
        
        private string headingLineField;
        
        private StdTextServiceSetHeadingRequiredAttributesDTO requiredAttributesField;
        
        private string stdTextIdField;
        
        /// <remarks/>
        public string headingLine {
            get {
                return this.headingLineField;
            }
            set {
                this.headingLineField = value;
            }
        }
        
        /// <remarks/>
        public StdTextServiceSetHeadingRequiredAttributesDTO requiredAttributes {
            get {
                return this.requiredAttributesField;
            }
            set {
                this.requiredAttributesField = value;
            }
        }
        
        /// <remarks/>
        public string stdTextId {
            get {
                return this.stdTextIdField;
            }
            set {
                this.stdTextIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://stdtext.ellipse.enterpriseservice.mincom.com")]
    public partial class StdTextServiceGetHeadingRequestDTO : AbstractDTO {
        
        private string duplicateStdTextIdField;
        
        private StdTextServiceGetHeadingRequiredAttributesDTO requiredAttributesField;
        
        private string stdTextIdField;
        
        /// <remarks/>
        public string duplicateStdTextId {
            get {
                return this.duplicateStdTextIdField;
            }
            set {
                this.duplicateStdTextIdField = value;
            }
        }
        
        /// <remarks/>
        public StdTextServiceGetHeadingRequiredAttributesDTO requiredAttributes {
            get {
                return this.requiredAttributesField;
            }
            set {
                this.requiredAttributesField = value;
            }
        }
        
        /// <remarks/>
        public string stdTextId {
            get {
                return this.stdTextIdField;
            }
            set {
                this.stdTextIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://stdtext.ellipse.enterpriseservice.mincom.com")]
    public partial class StdTextServiceDeleteRequestDTO : AbstractDTO {
        
        private StdTextServiceDeleteRequiredAttributesDTO requiredAttributesField;
        
        private string stdTextIdField;
        
        /// <remarks/>
        public StdTextServiceDeleteRequiredAttributesDTO requiredAttributes {
            get {
                return this.requiredAttributesField;
            }
            set {
                this.requiredAttributesField = value;
            }
        }
        
        /// <remarks/>
        public string stdTextId {
            get {
                return this.stdTextIdField;
            }
            set {
                this.stdTextIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://stdtext.ellipse.enterpriseservice.mincom.com")]
    public partial class StdTextServiceSetTextRequestDTO : AbstractDTO {
        
        private decimal lineCountField;
        
        private bool lineCountFieldSpecified;
        
        private StdTextServiceSetTextRequiredAttributesDTO requiredAttributesField;
        
        private decimal startLineNoField;
        
        private bool startLineNoFieldSpecified;
        
        private string stdTextIdField;
        
        private string[] textLineField;
        
        private decimal totalCurrentLinesField;
        
        private bool totalCurrentLinesFieldSpecified;
        
        private decimal totalRetrievedLinesField;
        
        private bool totalRetrievedLinesFieldSpecified;
        
        /// <remarks/>
        public decimal lineCount {
            get {
                return this.lineCountField;
            }
            set {
                this.lineCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool lineCountSpecified {
            get {
                return this.lineCountFieldSpecified;
            }
            set {
                this.lineCountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public StdTextServiceSetTextRequiredAttributesDTO requiredAttributes {
            get {
                return this.requiredAttributesField;
            }
            set {
                this.requiredAttributesField = value;
            }
        }
        
        /// <remarks/>
        public decimal startLineNo {
            get {
                return this.startLineNoField;
            }
            set {
                this.startLineNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool startLineNoSpecified {
            get {
                return this.startLineNoFieldSpecified;
            }
            set {
                this.startLineNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string stdTextId {
            get {
                return this.stdTextIdField;
            }
            set {
                this.stdTextIdField = value;
            }
        }
        
        /// <remarks/>
        public string[] textLine {
            get {
                return this.textLineField;
            }
            set {
                this.textLineField = value;
            }
        }
        
        /// <remarks/>
        public decimal totalCurrentLines {
            get {
                return this.totalCurrentLinesField;
            }
            set {
                this.totalCurrentLinesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool totalCurrentLinesSpecified {
            get {
                return this.totalCurrentLinesFieldSpecified;
            }
            set {
                this.totalCurrentLinesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public decimal totalRetrievedLines {
            get {
                return this.totalRetrievedLinesField;
            }
            set {
                this.totalRetrievedLinesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool totalRetrievedLinesSpecified {
            get {
                return this.totalRetrievedLinesFieldSpecified;
            }
            set {
                this.totalRetrievedLinesFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://stdtext.ellipse.enterpriseservice.mincom.com")]
    public partial class StdTextServiceAppendReplyDTO : AbstractReplyDTO {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://stdtext.ellipse.enterpriseservice.mincom.com")]
    public partial class StdTextServiceGetHeadingReplyDTO : AbstractReplyDTO {
        
        private string headingLineField;
        
        private bool headingMandatoryField;
        
        private bool headingMandatoryFieldSpecified;
        
        private decimal lineLengthField;
        
        private bool lineLengthFieldSpecified;
        
        private decimal maxLineLengthField;
        
        private bool maxLineLengthFieldSpecified;
        
        private bool stdTextExistsField;
        
        private bool stdTextExistsFieldSpecified;
        
        private bool textTypeHasHeadingField;
        
        private bool textTypeHasHeadingFieldSpecified;
        
        /// <remarks/>
        public string headingLine {
            get {
                return this.headingLineField;
            }
            set {
                this.headingLineField = value;
            }
        }
        
        /// <remarks/>
        public bool headingMandatory {
            get {
                return this.headingMandatoryField;
            }
            set {
                this.headingMandatoryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool headingMandatorySpecified {
            get {
                return this.headingMandatoryFieldSpecified;
            }
            set {
                this.headingMandatoryFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public decimal lineLength {
            get {
                return this.lineLengthField;
            }
            set {
                this.lineLengthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool lineLengthSpecified {
            get {
                return this.lineLengthFieldSpecified;
            }
            set {
                this.lineLengthFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public decimal maxLineLength {
            get {
                return this.maxLineLengthField;
            }
            set {
                this.maxLineLengthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool maxLineLengthSpecified {
            get {
                return this.maxLineLengthFieldSpecified;
            }
            set {
                this.maxLineLengthFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool stdTextExists {
            get {
                return this.stdTextExistsField;
            }
            set {
                this.stdTextExistsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool stdTextExistsSpecified {
            get {
                return this.stdTextExistsFieldSpecified;
            }
            set {
                this.stdTextExistsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool textTypeHasHeading {
            get {
                return this.textTypeHasHeadingField;
            }
            set {
                this.textTypeHasHeadingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool textTypeHasHeadingSpecified {
            get {
                return this.textTypeHasHeadingFieldSpecified;
            }
            set {
                this.textTypeHasHeadingFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://stdtext.ellipse.enterpriseservice.mincom.com")]
    public partial class StdTextServiceDeleteReplyDTO : AbstractReplyDTO {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://stdtext.ellipse.enterpriseservice.mincom.com")]
    public partial class StdTextServiceSetHeadingReplyDTO : AbstractReplyDTO {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://stdtext.ellipse.enterpriseservice.mincom.com")]
    public partial class StdTextServiceGetTextReplyDTO : AbstractReplyDTO {
        
        private decimal lineCountField;
        
        private bool lineCountFieldSpecified;
        
        private decimal startLineNoField;
        
        private bool startLineNoFieldSpecified;
        
        private string[] textLineField;
        
        /// <remarks/>
        public decimal lineCount {
            get {
                return this.lineCountField;
            }
            set {
                this.lineCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool lineCountSpecified {
            get {
                return this.lineCountFieldSpecified;
            }
            set {
                this.lineCountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public decimal startLineNo {
            get {
                return this.startLineNoField;
            }
            set {
                this.startLineNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool startLineNoSpecified {
            get {
                return this.startLineNoFieldSpecified;
            }
            set {
                this.startLineNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string[] textLine {
            get {
                return this.textLineField;
            }
            set {
                this.textLineField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://stdtext.ellipse.enterpriseservice.mincom.com")]
    public partial class StdTextServiceRetrieveTextNamesReplyDTO : AbstractReplyDTO {
        
        private string headingLineField;
        
        private string stdTextIdField;
        
        /// <remarks/>
        public string headingLine {
            get {
                return this.headingLineField;
            }
            set {
                this.headingLineField = value;
            }
        }
        
        /// <remarks/>
        public string stdTextId {
            get {
                return this.stdTextIdField;
            }
            set {
                this.stdTextIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://stdtext.ellipse.enterpriseservice.mincom.com")]
    public partial class StdTextServiceSetTextReplyDTO : AbstractReplyDTO {
        
        private bool stdTextExistsField;
        
        private bool stdTextExistsFieldSpecified;
        
        private string stdTextIdField;
        
        /// <remarks/>
        public bool stdTextExists {
            get {
                return this.stdTextExistsField;
            }
            set {
                this.stdTextExistsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool stdTextExistsSpecified {
            get {
                return this.stdTextExistsFieldSpecified;
            }
            set {
                this.stdTextExistsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string stdTextId {
            get {
                return this.stdTextIdField;
            }
            set {
                this.stdTextIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://stdtext.ellipse.enterpriseservice.mincom.com")]
    public partial class StdTextServiceAppendReplyCollectionDTO : AbstractReplyCollectionDTO {
        
        private StdTextServiceAppendReplyDTO[] replyElementsField;
        
        /// <remarks/>
        public StdTextServiceAppendReplyDTO[] replyElements {
            get {
                return this.replyElementsField;
            }
            set {
                this.replyElementsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://stdtext.ellipse.enterpriseservice.mincom.com")]
    public partial class StdTextServiceSetHeadingReplyCollectionDTO : AbstractReplyCollectionDTO {
        
        private StdTextServiceSetHeadingReplyDTO[] replyElementsField;
        
        /// <remarks/>
        public StdTextServiceSetHeadingReplyDTO[] replyElements {
            get {
                return this.replyElementsField;
            }
            set {
                this.replyElementsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://stdtext.ellipse.enterpriseservice.mincom.com")]
    public partial class StdTextServiceGetHeadingReplyCollectionDTO : AbstractReplyCollectionDTO {
        
        private StdTextServiceGetHeadingReplyDTO[] replyElementsField;
        
        /// <remarks/>
        public StdTextServiceGetHeadingReplyDTO[] replyElements {
            get {
                return this.replyElementsField;
            }
            set {
                this.replyElementsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://stdtext.ellipse.enterpriseservice.mincom.com")]
    public partial class StdTextServiceDeleteReplyCollectionDTO : AbstractReplyCollectionDTO {
        
        private StdTextServiceDeleteReplyDTO[] replyElementsField;
        
        /// <remarks/>
        public StdTextServiceDeleteReplyDTO[] replyElements {
            get {
                return this.replyElementsField;
            }
            set {
                this.replyElementsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://stdtext.ellipse.enterpriseservice.mincom.com")]
    public partial class StdTextServiceGetTextReplyCollectionDTO : AbstractReplyCollectionDTO {
        
        private StdTextServiceGetTextReplyDTO[] replyElementsField;
        
        /// <remarks/>
        public StdTextServiceGetTextReplyDTO[] replyElements {
            get {
                return this.replyElementsField;
            }
            set {
                this.replyElementsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://stdtext.ellipse.enterpriseservice.mincom.com")]
    public partial class StdTextServiceRetrieveTextNamesReplyCollectionDTO : AbstractReplyCollectionDTO {
        
        private StdTextServiceRetrieveTextNamesReplyDTO[] replyElementsField;
        
        /// <remarks/>
        public StdTextServiceRetrieveTextNamesReplyDTO[] replyElements {
            get {
                return this.replyElementsField;
            }
            set {
                this.replyElementsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://stdtext.ellipse.enterpriseservice.mincom.com")]
    public partial class StdTextServiceSetTextReplyCollectionDTO : AbstractReplyCollectionDTO {
        
        private StdTextServiceSetTextReplyDTO[] replyElementsField;
        
        /// <remarks/>
        public StdTextServiceSetTextReplyDTO[] replyElements {
            get {
                return this.replyElementsField;
            }
            set {
                this.replyElementsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://exception.enterpriseservice.mincom.com")]
    public partial class EnterpriseServiceOperationException {
        
        private ErrorMessageDTO[] errorMessagesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://ellipse.enterpriseservice.mincom.com")]
        public ErrorMessageDTO[] errorMessages {
            get {
                return this.errorMessagesField;
            }
            set {
                this.errorMessagesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void multipleSetTextCompletedEventHandler(object sender, multipleSetTextCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class multipleSetTextCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal multipleSetTextCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StdTextServiceSetTextReplyCollectionDTO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StdTextServiceSetTextReplyCollectionDTO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void retrieveTextNamesCompletedEventHandler(object sender, retrieveTextNamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class retrieveTextNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal retrieveTextNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StdTextServiceRetrieveTextNamesReplyCollectionDTO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StdTextServiceRetrieveTextNamesReplyCollectionDTO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getTextCompletedEventHandler(object sender, getTextCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTextCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTextCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StdTextServiceGetTextReplyCollectionDTO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StdTextServiceGetTextReplyCollectionDTO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void setHeadingCompletedEventHandler(object sender, setHeadingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setHeadingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setHeadingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StdTextServiceSetHeadingReplyDTO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StdTextServiceSetHeadingReplyDTO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void multipleDeleteCompletedEventHandler(object sender, multipleDeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class multipleDeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal multipleDeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StdTextServiceDeleteReplyCollectionDTO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StdTextServiceDeleteReplyCollectionDTO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void multipleGetHeadingWithPartialResultsCompletedEventHandler(object sender, multipleGetHeadingWithPartialResultsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class multipleGetHeadingWithPartialResultsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal multipleGetHeadingWithPartialResultsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StdTextServiceGetHeadingReplyCollectionDTO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StdTextServiceGetHeadingReplyCollectionDTO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void deleteCompletedEventHandler(object sender, deleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StdTextServiceDeleteReplyDTO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StdTextServiceDeleteReplyDTO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void multipleGetHeadingCompletedEventHandler(object sender, multipleGetHeadingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class multipleGetHeadingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal multipleGetHeadingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StdTextServiceGetHeadingReplyCollectionDTO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StdTextServiceGetHeadingReplyCollectionDTO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void multipleSetHeadingCompletedEventHandler(object sender, multipleSetHeadingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class multipleSetHeadingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal multipleSetHeadingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StdTextServiceSetHeadingReplyCollectionDTO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StdTextServiceSetHeadingReplyCollectionDTO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getHeadingCompletedEventHandler(object sender, getHeadingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getHeadingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getHeadingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StdTextServiceGetHeadingReplyDTO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StdTextServiceGetHeadingReplyDTO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void createCompletedEventHandler(object sender, createCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StdTextServiceCreateReplyDTO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StdTextServiceCreateReplyDTO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void multipleAppendCompletedEventHandler(object sender, multipleAppendCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class multipleAppendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal multipleAppendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StdTextServiceAppendReplyCollectionDTO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StdTextServiceAppendReplyCollectionDTO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void appendCompletedEventHandler(object sender, appendCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class appendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal appendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StdTextServiceAppendReplyDTO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StdTextServiceAppendReplyDTO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void multipleCreateCompletedEventHandler(object sender, multipleCreateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class multipleCreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal multipleCreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StdTextServiceCreateReplyCollectionDTO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StdTextServiceCreateReplyCollectionDTO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void setTextCompletedEventHandler(object sender, setTextCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setTextCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setTextCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StdTextServiceSetTextReplyDTO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StdTextServiceSetTextReplyDTO)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591