//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace EllipseDiscrepanciasExcelAddIn.AdjustDiscrepantHoldingService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="AdjustDiscrepantHoldingServiceHttpBinding", Namespace="http://adjustdiscrepantholding.m3140.service.ellipse.mincom.com")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BaseServiceResult))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Base))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Attribute[]))]
    public partial class AdjustDiscrepantHoldingService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback finaliseOperationCompleted;
        
        private System.Threading.SendOrPostCallback readOperationCompleted;
        
        private System.Threading.SendOrPostCallback multipleDeleteItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateOperationCompleted;
        
        private System.Threading.SendOrPostCallback multipleCreateItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback multipleFinaliseOperationCompleted;
        
        private System.Threading.SendOrPostCallback multipleUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback createItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback multipleUpdateItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback multipleReadOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchItemsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public AdjustDiscrepantHoldingService() {
            this.Url = global::EllipseDiscrepanciasExcelAddIn.Properties.Settings.Default.EllipseDiscrepanciasExcelAddIn_AdjustDiscrepantHoldingService_AdjustDiscrepantHoldingService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event finaliseCompletedEventHandler finaliseCompleted;
        
        /// <remarks/>
        public event readCompletedEventHandler readCompleted;
        
        /// <remarks/>
        public event multipleDeleteItemCompletedEventHandler multipleDeleteItemCompleted;
        
        /// <remarks/>
        public event updateCompletedEventHandler updateCompleted;
        
        /// <remarks/>
        public event multipleCreateItemCompletedEventHandler multipleCreateItemCompleted;
        
        /// <remarks/>
        public event updateItemCompletedEventHandler updateItemCompleted;
        
        /// <remarks/>
        public event multipleFinaliseCompletedEventHandler multipleFinaliseCompleted;
        
        /// <remarks/>
        public event multipleUpdateCompletedEventHandler multipleUpdateCompleted;
        
        /// <remarks/>
        public event deleteItemCompletedEventHandler deleteItemCompleted;
        
        /// <remarks/>
        public event createItemCompletedEventHandler createItemCompleted;
        
        /// <remarks/>
        public event multipleUpdateItemCompletedEventHandler multipleUpdateItemCompleted;
        
        /// <remarks/>
        public event multipleReadCompletedEventHandler multipleReadCompleted;
        
        /// <remarks/>
        public event searchItemsCompletedEventHandler searchItemsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://adjustdiscrepantholding.m3140.service.ellipse.mincom.com", ResponseNamespace="http://adjustdiscrepantholding.m3140.service.ellipse.mincom.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public AdjustDiscrepantHoldingServiceResult finalise([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] OperationContext context, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] AdjustDiscrepantHoldingDTO serviceDTO) {
            object[] results = this.Invoke("finalise", new object[] {
                        context,
                        serviceDTO});
            return ((AdjustDiscrepantHoldingServiceResult)(results[0]));
        }
        
        /// <remarks/>
        public void finaliseAsync(OperationContext context, AdjustDiscrepantHoldingDTO serviceDTO) {
            this.finaliseAsync(context, serviceDTO, null);
        }
        
        /// <remarks/>
        public void finaliseAsync(OperationContext context, AdjustDiscrepantHoldingDTO serviceDTO, object userState) {
            if ((this.finaliseOperationCompleted == null)) {
                this.finaliseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfinaliseOperationCompleted);
            }
            this.InvokeAsync("finalise", new object[] {
                        context,
                        serviceDTO}, this.finaliseOperationCompleted, userState);
        }
        
        private void OnfinaliseOperationCompleted(object arg) {
            if ((this.finaliseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.finaliseCompleted(this, new finaliseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://adjustdiscrepantholding.m3140.service.ellipse.mincom.com", ResponseNamespace="http://adjustdiscrepantholding.m3140.service.ellipse.mincom.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public AdjustDiscrepantHoldingServiceResult read([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] OperationContext context, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] AdjustDiscrepantHoldingDTO serviceDTO) {
            object[] results = this.Invoke("read", new object[] {
                        context,
                        serviceDTO});
            return ((AdjustDiscrepantHoldingServiceResult)(results[0]));
        }
        
        /// <remarks/>
        public void readAsync(OperationContext context, AdjustDiscrepantHoldingDTO serviceDTO) {
            this.readAsync(context, serviceDTO, null);
        }
        
        /// <remarks/>
        public void readAsync(OperationContext context, AdjustDiscrepantHoldingDTO serviceDTO, object userState) {
            if ((this.readOperationCompleted == null)) {
                this.readOperationCompleted = new System.Threading.SendOrPostCallback(this.OnreadOperationCompleted);
            }
            this.InvokeAsync("read", new object[] {
                        context,
                        serviceDTO}, this.readOperationCompleted, userState);
        }
        
        private void OnreadOperationCompleted(object arg) {
            if ((this.readCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.readCompleted(this, new readCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://adjustdiscrepantholding.m3140.service.ellipse.mincom.com", ResponseNamespace="http://adjustdiscrepantholding.m3140.service.ellipse.mincom.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("out", IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://instances.m3140.types.ellipse.mincom.com")]
        public AdjustDiscrepantHoldingItemServiceResult[] multipleDeleteItem([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] OperationContext context, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://instances.m3140.types.ellipse.mincom.com")] AdjustDiscrepantHoldingItemDTO[] inputDtos) {
            object[] results = this.Invoke("multipleDeleteItem", new object[] {
                        context,
                        inputDtos});
            return ((AdjustDiscrepantHoldingItemServiceResult[])(results[0]));
        }
        
        /// <remarks/>
        public void multipleDeleteItemAsync(OperationContext context, AdjustDiscrepantHoldingItemDTO[] inputDtos) {
            this.multipleDeleteItemAsync(context, inputDtos, null);
        }
        
        /// <remarks/>
        public void multipleDeleteItemAsync(OperationContext context, AdjustDiscrepantHoldingItemDTO[] inputDtos, object userState) {
            if ((this.multipleDeleteItemOperationCompleted == null)) {
                this.multipleDeleteItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmultipleDeleteItemOperationCompleted);
            }
            this.InvokeAsync("multipleDeleteItem", new object[] {
                        context,
                        inputDtos}, this.multipleDeleteItemOperationCompleted, userState);
        }
        
        private void OnmultipleDeleteItemOperationCompleted(object arg) {
            if ((this.multipleDeleteItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.multipleDeleteItemCompleted(this, new multipleDeleteItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://adjustdiscrepantholding.m3140.service.ellipse.mincom.com", ResponseNamespace="http://adjustdiscrepantholding.m3140.service.ellipse.mincom.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public AdjustDiscrepantHoldingServiceResult update([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] OperationContext context, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] AdjustDiscrepantHoldingDTO serviceDTO) {
            object[] results = this.Invoke("update", new object[] {
                        context,
                        serviceDTO});
            return ((AdjustDiscrepantHoldingServiceResult)(results[0]));
        }
        
        /// <remarks/>
        public void updateAsync(OperationContext context, AdjustDiscrepantHoldingDTO serviceDTO) {
            this.updateAsync(context, serviceDTO, null);
        }
        
        /// <remarks/>
        public void updateAsync(OperationContext context, AdjustDiscrepantHoldingDTO serviceDTO, object userState) {
            if ((this.updateOperationCompleted == null)) {
                this.updateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateOperationCompleted);
            }
            this.InvokeAsync("update", new object[] {
                        context,
                        serviceDTO}, this.updateOperationCompleted, userState);
        }
        
        private void OnupdateOperationCompleted(object arg) {
            if ((this.updateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateCompleted(this, new updateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://adjustdiscrepantholding.m3140.service.ellipse.mincom.com", ResponseNamespace="http://adjustdiscrepantholding.m3140.service.ellipse.mincom.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("out", IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://instances.m3140.types.ellipse.mincom.com")]
        public AdjustDiscrepantHoldingItemServiceResult[] multipleCreateItem([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] OperationContext context, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://instances.m3140.types.ellipse.mincom.com")] AdjustDiscrepantHoldingItemDTO[] inputDtos) {
            object[] results = this.Invoke("multipleCreateItem", new object[] {
                        context,
                        inputDtos});
            return ((AdjustDiscrepantHoldingItemServiceResult[])(results[0]));
        }
        
        /// <remarks/>
        public void multipleCreateItemAsync(OperationContext context, AdjustDiscrepantHoldingItemDTO[] inputDtos) {
            this.multipleCreateItemAsync(context, inputDtos, null);
        }
        
        /// <remarks/>
        public void multipleCreateItemAsync(OperationContext context, AdjustDiscrepantHoldingItemDTO[] inputDtos, object userState) {
            if ((this.multipleCreateItemOperationCompleted == null)) {
                this.multipleCreateItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmultipleCreateItemOperationCompleted);
            }
            this.InvokeAsync("multipleCreateItem", new object[] {
                        context,
                        inputDtos}, this.multipleCreateItemOperationCompleted, userState);
        }
        
        private void OnmultipleCreateItemOperationCompleted(object arg) {
            if ((this.multipleCreateItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.multipleCreateItemCompleted(this, new multipleCreateItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://adjustdiscrepantholding.m3140.service.ellipse.mincom.com", ResponseNamespace="http://adjustdiscrepantholding.m3140.service.ellipse.mincom.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public AdjustDiscrepantHoldingItemServiceResult updateItem([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] OperationContext context, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] AdjustDiscrepantHoldingItemDTO serviceDTO) {
            object[] results = this.Invoke("updateItem", new object[] {
                        context,
                        serviceDTO});
            return ((AdjustDiscrepantHoldingItemServiceResult)(results[0]));
        }
        
        /// <remarks/>
        public void updateItemAsync(OperationContext context, AdjustDiscrepantHoldingItemDTO serviceDTO) {
            this.updateItemAsync(context, serviceDTO, null);
        }
        
        /// <remarks/>
        public void updateItemAsync(OperationContext context, AdjustDiscrepantHoldingItemDTO serviceDTO, object userState) {
            if ((this.updateItemOperationCompleted == null)) {
                this.updateItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateItemOperationCompleted);
            }
            this.InvokeAsync("updateItem", new object[] {
                        context,
                        serviceDTO}, this.updateItemOperationCompleted, userState);
        }
        
        private void OnupdateItemOperationCompleted(object arg) {
            if ((this.updateItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateItemCompleted(this, new updateItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://adjustdiscrepantholding.m3140.service.ellipse.mincom.com", ResponseNamespace="http://adjustdiscrepantholding.m3140.service.ellipse.mincom.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("out", IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://instances.m3140.types.ellipse.mincom.com")]
        public AdjustDiscrepantHoldingServiceResult[] multipleFinalise([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] OperationContext context, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://instances.m3140.types.ellipse.mincom.com")] AdjustDiscrepantHoldingDTO[] inputDtos) {
            object[] results = this.Invoke("multipleFinalise", new object[] {
                        context,
                        inputDtos});
            return ((AdjustDiscrepantHoldingServiceResult[])(results[0]));
        }
        
        /// <remarks/>
        public void multipleFinaliseAsync(OperationContext context, AdjustDiscrepantHoldingDTO[] inputDtos) {
            this.multipleFinaliseAsync(context, inputDtos, null);
        }
        
        /// <remarks/>
        public void multipleFinaliseAsync(OperationContext context, AdjustDiscrepantHoldingDTO[] inputDtos, object userState) {
            if ((this.multipleFinaliseOperationCompleted == null)) {
                this.multipleFinaliseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmultipleFinaliseOperationCompleted);
            }
            this.InvokeAsync("multipleFinalise", new object[] {
                        context,
                        inputDtos}, this.multipleFinaliseOperationCompleted, userState);
        }
        
        private void OnmultipleFinaliseOperationCompleted(object arg) {
            if ((this.multipleFinaliseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.multipleFinaliseCompleted(this, new multipleFinaliseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://adjustdiscrepantholding.m3140.service.ellipse.mincom.com", ResponseNamespace="http://adjustdiscrepantholding.m3140.service.ellipse.mincom.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("out", IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://instances.m3140.types.ellipse.mincom.com")]
        public AdjustDiscrepantHoldingServiceResult[] multipleUpdate([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] OperationContext context, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://instances.m3140.types.ellipse.mincom.com")] AdjustDiscrepantHoldingDTO[] inputDtos) {
            object[] results = this.Invoke("multipleUpdate", new object[] {
                        context,
                        inputDtos});
            return ((AdjustDiscrepantHoldingServiceResult[])(results[0]));
        }
        
        /// <remarks/>
        public void multipleUpdateAsync(OperationContext context, AdjustDiscrepantHoldingDTO[] inputDtos) {
            this.multipleUpdateAsync(context, inputDtos, null);
        }
        
        /// <remarks/>
        public void multipleUpdateAsync(OperationContext context, AdjustDiscrepantHoldingDTO[] inputDtos, object userState) {
            if ((this.multipleUpdateOperationCompleted == null)) {
                this.multipleUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmultipleUpdateOperationCompleted);
            }
            this.InvokeAsync("multipleUpdate", new object[] {
                        context,
                        inputDtos}, this.multipleUpdateOperationCompleted, userState);
        }
        
        private void OnmultipleUpdateOperationCompleted(object arg) {
            if ((this.multipleUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.multipleUpdateCompleted(this, new multipleUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://adjustdiscrepantholding.m3140.service.ellipse.mincom.com", ResponseNamespace="http://adjustdiscrepantholding.m3140.service.ellipse.mincom.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public AdjustDiscrepantHoldingItemServiceResult deleteItem([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] OperationContext context, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] AdjustDiscrepantHoldingItemDTO serviceDTO) {
            object[] results = this.Invoke("deleteItem", new object[] {
                        context,
                        serviceDTO});
            return ((AdjustDiscrepantHoldingItemServiceResult)(results[0]));
        }
        
        /// <remarks/>
        public void deleteItemAsync(OperationContext context, AdjustDiscrepantHoldingItemDTO serviceDTO) {
            this.deleteItemAsync(context, serviceDTO, null);
        }
        
        /// <remarks/>
        public void deleteItemAsync(OperationContext context, AdjustDiscrepantHoldingItemDTO serviceDTO, object userState) {
            if ((this.deleteItemOperationCompleted == null)) {
                this.deleteItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteItemOperationCompleted);
            }
            this.InvokeAsync("deleteItem", new object[] {
                        context,
                        serviceDTO}, this.deleteItemOperationCompleted, userState);
        }
        
        private void OndeleteItemOperationCompleted(object arg) {
            if ((this.deleteItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteItemCompleted(this, new deleteItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://adjustdiscrepantholding.m3140.service.ellipse.mincom.com", ResponseNamespace="http://adjustdiscrepantholding.m3140.service.ellipse.mincom.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public AdjustDiscrepantHoldingItemServiceResult createItem([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] OperationContext context, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] AdjustDiscrepantHoldingItemDTO serviceDTO) {
            object[] results = this.Invoke("createItem", new object[] {
                        context,
                        serviceDTO});
            return ((AdjustDiscrepantHoldingItemServiceResult)(results[0]));
        }
        
        /// <remarks/>
        public void createItemAsync(OperationContext context, AdjustDiscrepantHoldingItemDTO serviceDTO) {
            this.createItemAsync(context, serviceDTO, null);
        }
        
        /// <remarks/>
        public void createItemAsync(OperationContext context, AdjustDiscrepantHoldingItemDTO serviceDTO, object userState) {
            if ((this.createItemOperationCompleted == null)) {
                this.createItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateItemOperationCompleted);
            }
            this.InvokeAsync("createItem", new object[] {
                        context,
                        serviceDTO}, this.createItemOperationCompleted, userState);
        }
        
        private void OncreateItemOperationCompleted(object arg) {
            if ((this.createItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createItemCompleted(this, new createItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://adjustdiscrepantholding.m3140.service.ellipse.mincom.com", ResponseNamespace="http://adjustdiscrepantholding.m3140.service.ellipse.mincom.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("out", IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://instances.m3140.types.ellipse.mincom.com")]
        public AdjustDiscrepantHoldingItemServiceResult[] multipleUpdateItem([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] OperationContext context, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://instances.m3140.types.ellipse.mincom.com")] AdjustDiscrepantHoldingItemDTO[] inputDtos) {
            object[] results = this.Invoke("multipleUpdateItem", new object[] {
                        context,
                        inputDtos});
            return ((AdjustDiscrepantHoldingItemServiceResult[])(results[0]));
        }
        
        /// <remarks/>
        public void multipleUpdateItemAsync(OperationContext context, AdjustDiscrepantHoldingItemDTO[] inputDtos) {
            this.multipleUpdateItemAsync(context, inputDtos, null);
        }
        
        /// <remarks/>
        public void multipleUpdateItemAsync(OperationContext context, AdjustDiscrepantHoldingItemDTO[] inputDtos, object userState) {
            if ((this.multipleUpdateItemOperationCompleted == null)) {
                this.multipleUpdateItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmultipleUpdateItemOperationCompleted);
            }
            this.InvokeAsync("multipleUpdateItem", new object[] {
                        context,
                        inputDtos}, this.multipleUpdateItemOperationCompleted, userState);
        }
        
        private void OnmultipleUpdateItemOperationCompleted(object arg) {
            if ((this.multipleUpdateItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.multipleUpdateItemCompleted(this, new multipleUpdateItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://adjustdiscrepantholding.m3140.service.ellipse.mincom.com", ResponseNamespace="http://adjustdiscrepantholding.m3140.service.ellipse.mincom.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("out", IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://instances.m3140.types.ellipse.mincom.com")]
        public AdjustDiscrepantHoldingServiceResult[] multipleRead([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] OperationContext context, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://instances.m3140.types.ellipse.mincom.com")] AdjustDiscrepantHoldingDTO[] inputDtos) {
            object[] results = this.Invoke("multipleRead", new object[] {
                        context,
                        inputDtos});
            return ((AdjustDiscrepantHoldingServiceResult[])(results[0]));
        }
        
        /// <remarks/>
        public void multipleReadAsync(OperationContext context, AdjustDiscrepantHoldingDTO[] inputDtos) {
            this.multipleReadAsync(context, inputDtos, null);
        }
        
        /// <remarks/>
        public void multipleReadAsync(OperationContext context, AdjustDiscrepantHoldingDTO[] inputDtos, object userState) {
            if ((this.multipleReadOperationCompleted == null)) {
                this.multipleReadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmultipleReadOperationCompleted);
            }
            this.InvokeAsync("multipleRead", new object[] {
                        context,
                        inputDtos}, this.multipleReadOperationCompleted, userState);
        }
        
        private void OnmultipleReadOperationCompleted(object arg) {
            if ((this.multipleReadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.multipleReadCompleted(this, new multipleReadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://adjustdiscrepantholding.m3140.service.ellipse.mincom.com", ResponseNamespace="http://adjustdiscrepantholding.m3140.service.ellipse.mincom.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("out", IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://instances.m3140.types.ellipse.mincom.com")]
        public AdjustDiscrepantHoldingItemServiceResult[] searchItems([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] OperationContext context, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] AdjustDiscrepantHoldingItemSearchParam searchParams, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] AdjustDiscrepantHoldingItemDTO restart) {
            object[] results = this.Invoke("searchItems", new object[] {
                        context,
                        searchParams,
                        restart});
            return ((AdjustDiscrepantHoldingItemServiceResult[])(results[0]));
        }
        
        /// <remarks/>
        public void searchItemsAsync(OperationContext context, AdjustDiscrepantHoldingItemSearchParam searchParams, AdjustDiscrepantHoldingItemDTO restart) {
            this.searchItemsAsync(context, searchParams, restart, null);
        }
        
        /// <remarks/>
        public void searchItemsAsync(OperationContext context, AdjustDiscrepantHoldingItemSearchParam searchParams, AdjustDiscrepantHoldingItemDTO restart, object userState) {
            if ((this.searchItemsOperationCompleted == null)) {
                this.searchItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchItemsOperationCompleted);
            }
            this.InvokeAsync("searchItems", new object[] {
                        context,
                        searchParams,
                        restart}, this.searchItemsOperationCompleted, userState);
        }
        
        private void OnsearchItemsOperationCompleted(object arg) {
            if ((this.searchItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchItemsCompleted(this, new searchItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://connectivity.service.ews.mincom.com")]
    public partial class OperationContext {
        
        private string applicationClientIdField;
        
        private string districtField;
        
        private bool eventDisableField;
        
        private bool eventDisableFieldSpecified;
        
        private int maxInstancesField;
        
        private bool maxInstancesFieldSpecified;
        
        private string positionField;
        
        private bool returnWarningsField;
        
        private bool returnWarningsFieldSpecified;
        
        private RunAs runAsField;
        
        private string tenantIdField;
        
        private bool traceField;
        
        private bool traceFieldSpecified;
        
        private string transactionField;
        
        /// <remarks/>
        public string applicationClientId {
            get {
                return this.applicationClientIdField;
            }
            set {
                this.applicationClientIdField = value;
            }
        }
        
        /// <remarks/>
        public string district {
            get {
                return this.districtField;
            }
            set {
                this.districtField = value;
            }
        }
        
        /// <remarks/>
        public bool eventDisable {
            get {
                return this.eventDisableField;
            }
            set {
                this.eventDisableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool eventDisableSpecified {
            get {
                return this.eventDisableFieldSpecified;
            }
            set {
                this.eventDisableFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int maxInstances {
            get {
                return this.maxInstancesField;
            }
            set {
                this.maxInstancesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool maxInstancesSpecified {
            get {
                return this.maxInstancesFieldSpecified;
            }
            set {
                this.maxInstancesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string position {
            get {
                return this.positionField;
            }
            set {
                this.positionField = value;
            }
        }
        
        /// <remarks/>
        public bool returnWarnings {
            get {
                return this.returnWarningsField;
            }
            set {
                this.returnWarningsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool returnWarningsSpecified {
            get {
                return this.returnWarningsFieldSpecified;
            }
            set {
                this.returnWarningsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public RunAs runAs {
            get {
                return this.runAsField;
            }
            set {
                this.runAsField = value;
            }
        }
        
        /// <remarks/>
        public string tenantId {
            get {
                return this.tenantIdField;
            }
            set {
                this.tenantIdField = value;
            }
        }
        
        /// <remarks/>
        public bool trace {
            get {
                return this.traceField;
            }
            set {
                this.traceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool traceSpecified {
            get {
                return this.traceFieldSpecified;
            }
            set {
                this.traceFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string transaction {
            get {
                return this.transactionField;
            }
            set {
                this.transactionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://connectivity.service.ews.mincom.com")]
    public partial class RunAs {
        
        private string districtField;
        
        private string positionField;
        
        private string userField;
        
        /// <remarks/>
        public string district {
            get {
                return this.districtField;
            }
            set {
                this.districtField = value;
            }
        }
        
        /// <remarks/>
        public string position {
            get {
                return this.positionField;
            }
            set {
                this.positionField = value;
            }
        }
        
        /// <remarks/>
        public string user {
            get {
                return this.userField;
            }
            set {
                this.userField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://service.ellipse.mincom.com")]
    public partial class ServiceRequiredAttributes {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Error))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Warning))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://errors.ellipse.mincom.com")]
    public partial class Message {
        
        private string fieldIdField;
        
        private int fieldIndexField;
        
        private bool fieldIndexFieldSpecified;
        
        private bool localisableField;
        
        private bool localisableFieldSpecified;
        
        private string messageIdField;
        
        private string messageInstanceField;
        
        private string messageTextField;
        
        private string parentInstanceField;
        
        private string userField;
        
        /// <remarks/>
        public string fieldId {
            get {
                return this.fieldIdField;
            }
            set {
                this.fieldIdField = value;
            }
        }
        
        /// <remarks/>
        public int fieldIndex {
            get {
                return this.fieldIndexField;
            }
            set {
                this.fieldIndexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool fieldIndexSpecified {
            get {
                return this.fieldIndexFieldSpecified;
            }
            set {
                this.fieldIndexFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool localisable {
            get {
                return this.localisableField;
            }
            set {
                this.localisableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localisableSpecified {
            get {
                return this.localisableFieldSpecified;
            }
            set {
                this.localisableFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string messageId {
            get {
                return this.messageIdField;
            }
            set {
                this.messageIdField = value;
            }
        }
        
        /// <remarks/>
        public string messageInstance {
            get {
                return this.messageInstanceField;
            }
            set {
                this.messageInstanceField = value;
            }
        }
        
        /// <remarks/>
        public string messageText {
            get {
                return this.messageTextField;
            }
            set {
                this.messageTextField = value;
            }
        }
        
        /// <remarks/>
        public string parentInstance {
            get {
                return this.parentInstanceField;
            }
            set {
                this.parentInstanceField = value;
            }
        }
        
        /// <remarks/>
        public string user {
            get {
                return this.userField;
            }
            set {
                this.userField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://errors.ellipse.mincom.com")]
    public partial class Error : Message {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://errors.ellipse.mincom.com")]
    public partial class Warning : Message {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ServiceResult))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AdjustDiscrepantHoldingItemServiceResult))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AdjustDiscrepantHoldingServiceResult))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://service.ellipse.mincom.com")]
    public abstract partial class BaseServiceResult {
        
        private Error[] errorsField;
        
        private Message[] informationalMessagesField;
        
        private Warning[] warningsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://errors.ellipse.mincom.com")]
        public Error[] errors {
            get {
                return this.errorsField;
            }
            set {
                this.errorsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://errors.ellipse.mincom.com")]
        public Message[] informationalMessages {
            get {
                return this.informationalMessagesField;
            }
            set {
                this.informationalMessagesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://errors.ellipse.mincom.com")]
        public Warning[] warnings {
            get {
                return this.warningsField;
            }
            set {
                this.warningsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AdjustDiscrepantHoldingItemServiceResult))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AdjustDiscrepantHoldingServiceResult))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://service.ellipse.mincom.com")]
    public partial class ServiceResult : BaseServiceResult {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://instances.m3140.types.ellipse.mincom.com")]
    public partial class AdjustDiscrepantHoldingItemServiceResult : ServiceResult {
        
        private AdjustDiscrepantHoldingItemDTO adjustdiscrepantholdingitemdtoField;
        
        /// <remarks/>
        public AdjustDiscrepantHoldingItemDTO adjustdiscrepantholdingitemdto {
            get {
                return this.adjustdiscrepantholdingitemdtoField;
            }
            set {
                this.adjustdiscrepantholdingitemdtoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://instances.m3140.types.ellipse.mincom.com")]
    public partial class AdjustDiscrepantHoldingItemDTO : ServiceDTO {
        
        private string batchLotNumberField;
        
        private string binCodeField;
        
        private decimal bringOnField;
        
        private bool bringOnFieldSpecified;
        
        private string conditionCodeField;
        
        private string custodianIdField;
        
        private string equipmentNumberField;
        
        private string fixedStatusField;
        
        private string holdingIdField;
        
        private string holdingTypeField;
        
        private string inventoryCategoryField;
        
        private string stockCodeField;
        
        private decimal stockOnHandField;
        
        private bool stockOnHandFieldSpecified;
        
        private string stockOwnershipIndicatorField;
        
        private string taskIdField;
        
        private string trackingIndicatorField;
        
        private string trackingReferenceField;
        
        private System.DateTime useByDateField;
        
        private bool useByDateFieldSpecified;
        
        private decimal writeOffField;
        
        private bool writeOffFieldSpecified;
        
        /// <remarks/>
        public string batchLotNumber {
            get {
                return this.batchLotNumberField;
            }
            set {
                this.batchLotNumberField = value;
            }
        }
        
        /// <remarks/>
        public string binCode {
            get {
                return this.binCodeField;
            }
            set {
                this.binCodeField = value;
            }
        }
        
        /// <remarks/>
        public decimal bringOn {
            get {
                return this.bringOnField;
            }
            set {
                this.bringOnField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool bringOnSpecified {
            get {
                return this.bringOnFieldSpecified;
            }
            set {
                this.bringOnFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string conditionCode {
            get {
                return this.conditionCodeField;
            }
            set {
                this.conditionCodeField = value;
            }
        }
        
        /// <remarks/>
        public string custodianId {
            get {
                return this.custodianIdField;
            }
            set {
                this.custodianIdField = value;
            }
        }
        
        /// <remarks/>
        public string equipmentNumber {
            get {
                return this.equipmentNumberField;
            }
            set {
                this.equipmentNumberField = value;
            }
        }
        
        /// <remarks/>
        public string fixedStatus {
            get {
                return this.fixedStatusField;
            }
            set {
                this.fixedStatusField = value;
            }
        }
        
        /// <remarks/>
        public string holdingId {
            get {
                return this.holdingIdField;
            }
            set {
                this.holdingIdField = value;
            }
        }
        
        /// <remarks/>
        public string holdingType {
            get {
                return this.holdingTypeField;
            }
            set {
                this.holdingTypeField = value;
            }
        }
        
        /// <remarks/>
        public string inventoryCategory {
            get {
                return this.inventoryCategoryField;
            }
            set {
                this.inventoryCategoryField = value;
            }
        }
        
        /// <remarks/>
        public string stockCode {
            get {
                return this.stockCodeField;
            }
            set {
                this.stockCodeField = value;
            }
        }
        
        /// <remarks/>
        public decimal stockOnHand {
            get {
                return this.stockOnHandField;
            }
            set {
                this.stockOnHandField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool stockOnHandSpecified {
            get {
                return this.stockOnHandFieldSpecified;
            }
            set {
                this.stockOnHandFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string stockOwnershipIndicator {
            get {
                return this.stockOwnershipIndicatorField;
            }
            set {
                this.stockOwnershipIndicatorField = value;
            }
        }
        
        /// <remarks/>
        public string taskId {
            get {
                return this.taskIdField;
            }
            set {
                this.taskIdField = value;
            }
        }
        
        /// <remarks/>
        public string trackingIndicator {
            get {
                return this.trackingIndicatorField;
            }
            set {
                this.trackingIndicatorField = value;
            }
        }
        
        /// <remarks/>
        public string trackingReference {
            get {
                return this.trackingReferenceField;
            }
            set {
                this.trackingReferenceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        public System.DateTime useByDate {
            get {
                return this.useByDateField;
            }
            set {
                this.useByDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool useByDateSpecified {
            get {
                return this.useByDateFieldSpecified;
            }
            set {
                this.useByDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public decimal writeOff {
            get {
                return this.writeOffField;
            }
            set {
                this.writeOffField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool writeOffSpecified {
            get {
                return this.writeOffFieldSpecified;
            }
            set {
                this.writeOffFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AbstractSearchParam))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AdjustDiscrepantHoldingItemSearchParam))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AdjustDiscrepantHoldingItemDTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AdjustDiscrepantHoldingDTO))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://service.ellipse.mincom.com")]
    public abstract partial class ServiceDTO : Base {
        
        private Attribute[] customAttributesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://attribute.ellipse.mincom.com")]
        public Attribute[] customAttributes {
            get {
                return this.customAttributesField;
            }
            set {
                this.customAttributesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://attribute.ellipse.mincom.com")]
    public partial class Attribute {
        
        private string dataTypeField;
        
        private string nameField;
        
        private string namespaceField;
        
        private anyType2anyTypeMapEntry[] propertiesField;
        
        private string valueField;
        
        /// <remarks/>
        public string dataType {
            get {
                return this.dataTypeField;
            }
            set {
                this.dataTypeField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string @namespace {
            get {
                return this.namespaceField;
            }
            set {
                this.namespaceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("entry", Namespace="http://adjustdiscrepantholding.m3140.service.ellipse.mincom.com", IsNullable=false)]
        public anyType2anyTypeMapEntry[] properties {
            get {
                return this.propertiesField;
            }
            set {
                this.propertiesField = value;
            }
        }
        
        /// <remarks/>
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://adjustdiscrepantholding.m3140.service.ellipse.mincom.com")]
    public partial class anyType2anyTypeMapEntry {
        
        private object keyField;
        
        private object valueField;
        
        /// <remarks/>
        public object key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        public object value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ServiceDTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AbstractSearchParam))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AdjustDiscrepantHoldingItemSearchParam))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AdjustDiscrepantHoldingItemDTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AdjustDiscrepantHoldingDTO))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://instances.base.types.ellipse.mincom.com")]
    public abstract partial class Base {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AdjustDiscrepantHoldingItemSearchParam))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://service.ellipse.mincom.com")]
    public abstract partial class AbstractSearchParam : ServiceDTO {
        
        private ServiceRequiredAttributes serviceRequiredAttributesField;
        
        /// <remarks/>
        public ServiceRequiredAttributes serviceRequiredAttributes {
            get {
                return this.serviceRequiredAttributesField;
            }
            set {
                this.serviceRequiredAttributesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://instances.m3140.types.ellipse.mincom.com")]
    public partial class AdjustDiscrepantHoldingItemSearchParam : AbstractSearchParam {
        
        private string batchLotNumberField;
        
        private string binCodeField;
        
        private string conditionCodeField;
        
        private string custodianIdField;
        
        private string inventoryCategoryField;
        
        private string stockCodeField;
        
        private string taskIdField;
        
        private System.DateTime useByDateField;
        
        private bool useByDateFieldSpecified;
        
        /// <remarks/>
        public string batchLotNumber {
            get {
                return this.batchLotNumberField;
            }
            set {
                this.batchLotNumberField = value;
            }
        }
        
        /// <remarks/>
        public string binCode {
            get {
                return this.binCodeField;
            }
            set {
                this.binCodeField = value;
            }
        }
        
        /// <remarks/>
        public string conditionCode {
            get {
                return this.conditionCodeField;
            }
            set {
                this.conditionCodeField = value;
            }
        }
        
        /// <remarks/>
        public string custodianId {
            get {
                return this.custodianIdField;
            }
            set {
                this.custodianIdField = value;
            }
        }
        
        /// <remarks/>
        public string inventoryCategory {
            get {
                return this.inventoryCategoryField;
            }
            set {
                this.inventoryCategoryField = value;
            }
        }
        
        /// <remarks/>
        public string stockCode {
            get {
                return this.stockCodeField;
            }
            set {
                this.stockCodeField = value;
            }
        }
        
        /// <remarks/>
        public string taskId {
            get {
                return this.taskIdField;
            }
            set {
                this.taskIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        public System.DateTime useByDate {
            get {
                return this.useByDateField;
            }
            set {
                this.useByDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool useByDateSpecified {
            get {
                return this.useByDateFieldSpecified;
            }
            set {
                this.useByDateFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://instances.m3140.types.ellipse.mincom.com")]
    public partial class AdjustDiscrepantHoldingDTO : ServiceDTO {
        
        private string batchLotNumberField;
        
        private string binCodeField;
        
        private string conditionCodeField;
        
        private string custodianIdField;
        
        private string districtCodeField;
        
        private string employeeIdField;
        
        private string inventoryCategoryField;
        
        private bool isBatchLotManagedField;
        
        private bool isBatchLotManagedFieldSpecified;
        
        private bool isCategoryManagedField;
        
        private bool isCategoryManagedFieldSpecified;
        
        private bool isSSAVItemAtPendingField;
        
        private bool isSSAVItemAtPendingFieldSpecified;
        
        private bool isShelfLifeManagedField;
        
        private bool isShelfLifeManagedFieldSpecified;
        
        private string resolutionCodeField;
        
        private string stockCodeField;
        
        private string stockCodePackedDescriptionField;
        
        private string supplyCustomerAccountIdField;
        
        private string taskIdField;
        
        private string trackingIndicatorField;
        
        private string unitOfIssueField;
        
        private System.DateTime useByDateField;
        
        private bool useByDateFieldSpecified;
        
        private string warehouseIdField;
        
        /// <remarks/>
        public string batchLotNumber {
            get {
                return this.batchLotNumberField;
            }
            set {
                this.batchLotNumberField = value;
            }
        }
        
        /// <remarks/>
        public string binCode {
            get {
                return this.binCodeField;
            }
            set {
                this.binCodeField = value;
            }
        }
        
        /// <remarks/>
        public string conditionCode {
            get {
                return this.conditionCodeField;
            }
            set {
                this.conditionCodeField = value;
            }
        }
        
        /// <remarks/>
        public string custodianId {
            get {
                return this.custodianIdField;
            }
            set {
                this.custodianIdField = value;
            }
        }
        
        /// <remarks/>
        public string districtCode {
            get {
                return this.districtCodeField;
            }
            set {
                this.districtCodeField = value;
            }
        }
        
        /// <remarks/>
        public string employeeId {
            get {
                return this.employeeIdField;
            }
            set {
                this.employeeIdField = value;
            }
        }
        
        /// <remarks/>
        public string inventoryCategory {
            get {
                return this.inventoryCategoryField;
            }
            set {
                this.inventoryCategoryField = value;
            }
        }
        
        /// <remarks/>
        public bool isBatchLotManaged {
            get {
                return this.isBatchLotManagedField;
            }
            set {
                this.isBatchLotManagedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isBatchLotManagedSpecified {
            get {
                return this.isBatchLotManagedFieldSpecified;
            }
            set {
                this.isBatchLotManagedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool isCategoryManaged {
            get {
                return this.isCategoryManagedField;
            }
            set {
                this.isCategoryManagedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isCategoryManagedSpecified {
            get {
                return this.isCategoryManagedFieldSpecified;
            }
            set {
                this.isCategoryManagedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool isSSAVItemAtPending {
            get {
                return this.isSSAVItemAtPendingField;
            }
            set {
                this.isSSAVItemAtPendingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isSSAVItemAtPendingSpecified {
            get {
                return this.isSSAVItemAtPendingFieldSpecified;
            }
            set {
                this.isSSAVItemAtPendingFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool isShelfLifeManaged {
            get {
                return this.isShelfLifeManagedField;
            }
            set {
                this.isShelfLifeManagedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isShelfLifeManagedSpecified {
            get {
                return this.isShelfLifeManagedFieldSpecified;
            }
            set {
                this.isShelfLifeManagedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string resolutionCode {
            get {
                return this.resolutionCodeField;
            }
            set {
                this.resolutionCodeField = value;
            }
        }
        
        /// <remarks/>
        public string stockCode {
            get {
                return this.stockCodeField;
            }
            set {
                this.stockCodeField = value;
            }
        }
        
        /// <remarks/>
        public string stockCodePackedDescription {
            get {
                return this.stockCodePackedDescriptionField;
            }
            set {
                this.stockCodePackedDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string supplyCustomerAccountId {
            get {
                return this.supplyCustomerAccountIdField;
            }
            set {
                this.supplyCustomerAccountIdField = value;
            }
        }
        
        /// <remarks/>
        public string taskId {
            get {
                return this.taskIdField;
            }
            set {
                this.taskIdField = value;
            }
        }
        
        /// <remarks/>
        public string trackingIndicator {
            get {
                return this.trackingIndicatorField;
            }
            set {
                this.trackingIndicatorField = value;
            }
        }
        
        /// <remarks/>
        public string unitOfIssue {
            get {
                return this.unitOfIssueField;
            }
            set {
                this.unitOfIssueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        public System.DateTime useByDate {
            get {
                return this.useByDateField;
            }
            set {
                this.useByDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool useByDateSpecified {
            get {
                return this.useByDateFieldSpecified;
            }
            set {
                this.useByDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string warehouseId {
            get {
                return this.warehouseIdField;
            }
            set {
                this.warehouseIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://instances.m3140.types.ellipse.mincom.com")]
    public partial class AdjustDiscrepantHoldingServiceResult : ServiceResult {
        
        private AdjustDiscrepantHoldingDTO adjustDiscrepantHoldingDTOField;
        
        /// <remarks/>
        public AdjustDiscrepantHoldingDTO adjustDiscrepantHoldingDTO {
            get {
                return this.adjustDiscrepantHoldingDTOField;
            }
            set {
                this.adjustDiscrepantHoldingDTOField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void finaliseCompletedEventHandler(object sender, finaliseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class finaliseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal finaliseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AdjustDiscrepantHoldingServiceResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AdjustDiscrepantHoldingServiceResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void readCompletedEventHandler(object sender, readCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class readCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal readCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AdjustDiscrepantHoldingServiceResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AdjustDiscrepantHoldingServiceResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void multipleDeleteItemCompletedEventHandler(object sender, multipleDeleteItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class multipleDeleteItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal multipleDeleteItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AdjustDiscrepantHoldingItemServiceResult[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AdjustDiscrepantHoldingItemServiceResult[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void updateCompletedEventHandler(object sender, updateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AdjustDiscrepantHoldingServiceResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AdjustDiscrepantHoldingServiceResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void multipleCreateItemCompletedEventHandler(object sender, multipleCreateItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class multipleCreateItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal multipleCreateItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AdjustDiscrepantHoldingItemServiceResult[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AdjustDiscrepantHoldingItemServiceResult[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void updateItemCompletedEventHandler(object sender, updateItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AdjustDiscrepantHoldingItemServiceResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AdjustDiscrepantHoldingItemServiceResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void multipleFinaliseCompletedEventHandler(object sender, multipleFinaliseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class multipleFinaliseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal multipleFinaliseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AdjustDiscrepantHoldingServiceResult[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AdjustDiscrepantHoldingServiceResult[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void multipleUpdateCompletedEventHandler(object sender, multipleUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class multipleUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal multipleUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AdjustDiscrepantHoldingServiceResult[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AdjustDiscrepantHoldingServiceResult[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void deleteItemCompletedEventHandler(object sender, deleteItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AdjustDiscrepantHoldingItemServiceResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AdjustDiscrepantHoldingItemServiceResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void createItemCompletedEventHandler(object sender, createItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AdjustDiscrepantHoldingItemServiceResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AdjustDiscrepantHoldingItemServiceResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void multipleUpdateItemCompletedEventHandler(object sender, multipleUpdateItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class multipleUpdateItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal multipleUpdateItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AdjustDiscrepantHoldingItemServiceResult[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AdjustDiscrepantHoldingItemServiceResult[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void multipleReadCompletedEventHandler(object sender, multipleReadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class multipleReadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal multipleReadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AdjustDiscrepantHoldingServiceResult[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AdjustDiscrepantHoldingServiceResult[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void searchItemsCompletedEventHandler(object sender, searchItemsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AdjustDiscrepantHoldingItemServiceResult[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AdjustDiscrepantHoldingItemServiceResult[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591