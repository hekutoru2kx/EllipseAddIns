//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace EllipseDiscrepanciasExcelAddIn.DiscrepancyTaskService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="DiscrepancyTaskServiceHttpBinding", Namespace="http://discrepancytask.m3140.service.ellipse.mincom.com")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BaseServiceResult))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Base))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Attribute[]))]
    public partial class DiscrepancyTaskService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback readOperationCompleted;
        
        private System.Threading.SendOrPostCallback readBySourceTaskIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback resolveOperationCompleted;
        
        private System.Threading.SendOrPostCallback multipleReadBySourceTaskIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback multipleResolveOperationCompleted;
        
        private System.Threading.SendOrPostCallback multipleReadBySourceTaskIdNoErrorOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateOperationCompleted;
        
        private System.Threading.SendOrPostCallback observeOperationCompleted;
        
        private System.Threading.SendOrPostCallback multipleObserveOperationCompleted;
        
        private System.Threading.SendOrPostCallback readBySourceTaskIdNoErrorOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchOperationCompleted;
        
        private System.Threading.SendOrPostCallback multipleUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback multipleReadOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public DiscrepancyTaskService() {
            this.Url = global::EllipseDiscrepanciasExcelAddIn.Properties.Settings.Default.EllipseDiscrepanciasExcelAddIn_DiscrepancyTaskService_DiscrepancyTaskService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event readCompletedEventHandler readCompleted;
        
        /// <remarks/>
        public event readBySourceTaskIdCompletedEventHandler readBySourceTaskIdCompleted;
        
        /// <remarks/>
        public event resolveCompletedEventHandler resolveCompleted;
        
        /// <remarks/>
        public event multipleReadBySourceTaskIdCompletedEventHandler multipleReadBySourceTaskIdCompleted;
        
        /// <remarks/>
        public event multipleResolveCompletedEventHandler multipleResolveCompleted;
        
        /// <remarks/>
        public event multipleReadBySourceTaskIdNoErrorCompletedEventHandler multipleReadBySourceTaskIdNoErrorCompleted;
        
        /// <remarks/>
        public event updateCompletedEventHandler updateCompleted;
        
        /// <remarks/>
        public event observeCompletedEventHandler observeCompleted;
        
        /// <remarks/>
        public event multipleObserveCompletedEventHandler multipleObserveCompleted;
        
        /// <remarks/>
        public event readBySourceTaskIdNoErrorCompletedEventHandler readBySourceTaskIdNoErrorCompleted;
        
        /// <remarks/>
        public event searchCompletedEventHandler searchCompleted;
        
        /// <remarks/>
        public event multipleUpdateCompletedEventHandler multipleUpdateCompleted;
        
        /// <remarks/>
        public event multipleReadCompletedEventHandler multipleReadCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://discrepancytask.m3140.service.ellipse.mincom.com", ResponseNamespace="http://discrepancytask.m3140.service.ellipse.mincom.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public DiscrepancyTaskServiceResult read([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] OperationContext context, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] DiscrepancyTaskDTO serviceDTO) {
            object[] results = this.Invoke("read", new object[] {
                        context,
                        serviceDTO});
            return ((DiscrepancyTaskServiceResult)(results[0]));
        }
        
        /// <remarks/>
        public void readAsync(OperationContext context, DiscrepancyTaskDTO serviceDTO) {
            this.readAsync(context, serviceDTO, null);
        }
        
        /// <remarks/>
        public void readAsync(OperationContext context, DiscrepancyTaskDTO serviceDTO, object userState) {
            if ((this.readOperationCompleted == null)) {
                this.readOperationCompleted = new System.Threading.SendOrPostCallback(this.OnreadOperationCompleted);
            }
            this.InvokeAsync("read", new object[] {
                        context,
                        serviceDTO}, this.readOperationCompleted, userState);
        }
        
        private void OnreadOperationCompleted(object arg) {
            if ((this.readCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.readCompleted(this, new readCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://discrepancytask.m3140.service.ellipse.mincom.com", ResponseNamespace="http://discrepancytask.m3140.service.ellipse.mincom.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public DiscrepancyTaskServiceResult readBySourceTaskId([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] OperationContext context, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] DiscrepancyTaskDTO serviceDTO) {
            object[] results = this.Invoke("readBySourceTaskId", new object[] {
                        context,
                        serviceDTO});
            return ((DiscrepancyTaskServiceResult)(results[0]));
        }
        
        /// <remarks/>
        public void readBySourceTaskIdAsync(OperationContext context, DiscrepancyTaskDTO serviceDTO) {
            this.readBySourceTaskIdAsync(context, serviceDTO, null);
        }
        
        /// <remarks/>
        public void readBySourceTaskIdAsync(OperationContext context, DiscrepancyTaskDTO serviceDTO, object userState) {
            if ((this.readBySourceTaskIdOperationCompleted == null)) {
                this.readBySourceTaskIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnreadBySourceTaskIdOperationCompleted);
            }
            this.InvokeAsync("readBySourceTaskId", new object[] {
                        context,
                        serviceDTO}, this.readBySourceTaskIdOperationCompleted, userState);
        }
        
        private void OnreadBySourceTaskIdOperationCompleted(object arg) {
            if ((this.readBySourceTaskIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.readBySourceTaskIdCompleted(this, new readBySourceTaskIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://discrepancytask.m3140.service.ellipse.mincom.com", ResponseNamespace="http://discrepancytask.m3140.service.ellipse.mincom.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public DiscrepancyTaskServiceResult resolve([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] OperationContext context, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] DiscrepancyTaskDTO serviceDTO) {
            object[] results = this.Invoke("resolve", new object[] {
                        context,
                        serviceDTO});
            return ((DiscrepancyTaskServiceResult)(results[0]));
        }
        
        /// <remarks/>
        public void resolveAsync(OperationContext context, DiscrepancyTaskDTO serviceDTO) {
            this.resolveAsync(context, serviceDTO, null);
        }
        
        /// <remarks/>
        public void resolveAsync(OperationContext context, DiscrepancyTaskDTO serviceDTO, object userState) {
            if ((this.resolveOperationCompleted == null)) {
                this.resolveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnresolveOperationCompleted);
            }
            this.InvokeAsync("resolve", new object[] {
                        context,
                        serviceDTO}, this.resolveOperationCompleted, userState);
        }
        
        private void OnresolveOperationCompleted(object arg) {
            if ((this.resolveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.resolveCompleted(this, new resolveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://discrepancytask.m3140.service.ellipse.mincom.com", ResponseNamespace="http://discrepancytask.m3140.service.ellipse.mincom.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("out", IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://instances.m3140.types.ellipse.mincom.com")]
        public DiscrepancyTaskServiceResult[] multipleReadBySourceTaskId([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] OperationContext context, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://instances.m3140.types.ellipse.mincom.com")] DiscrepancyTaskDTO[] inputDtos) {
            object[] results = this.Invoke("multipleReadBySourceTaskId", new object[] {
                        context,
                        inputDtos});
            return ((DiscrepancyTaskServiceResult[])(results[0]));
        }
        
        /// <remarks/>
        public void multipleReadBySourceTaskIdAsync(OperationContext context, DiscrepancyTaskDTO[] inputDtos) {
            this.multipleReadBySourceTaskIdAsync(context, inputDtos, null);
        }
        
        /// <remarks/>
        public void multipleReadBySourceTaskIdAsync(OperationContext context, DiscrepancyTaskDTO[] inputDtos, object userState) {
            if ((this.multipleReadBySourceTaskIdOperationCompleted == null)) {
                this.multipleReadBySourceTaskIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmultipleReadBySourceTaskIdOperationCompleted);
            }
            this.InvokeAsync("multipleReadBySourceTaskId", new object[] {
                        context,
                        inputDtos}, this.multipleReadBySourceTaskIdOperationCompleted, userState);
        }
        
        private void OnmultipleReadBySourceTaskIdOperationCompleted(object arg) {
            if ((this.multipleReadBySourceTaskIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.multipleReadBySourceTaskIdCompleted(this, new multipleReadBySourceTaskIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://discrepancytask.m3140.service.ellipse.mincom.com", ResponseNamespace="http://discrepancytask.m3140.service.ellipse.mincom.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("out", IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://instances.m3140.types.ellipse.mincom.com")]
        public DiscrepancyTaskServiceResult[] multipleResolve([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] OperationContext context, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://instances.m3140.types.ellipse.mincom.com")] DiscrepancyTaskDTO[] inputDtos) {
            object[] results = this.Invoke("multipleResolve", new object[] {
                        context,
                        inputDtos});
            return ((DiscrepancyTaskServiceResult[])(results[0]));
        }
        
        /// <remarks/>
        public void multipleResolveAsync(OperationContext context, DiscrepancyTaskDTO[] inputDtos) {
            this.multipleResolveAsync(context, inputDtos, null);
        }
        
        /// <remarks/>
        public void multipleResolveAsync(OperationContext context, DiscrepancyTaskDTO[] inputDtos, object userState) {
            if ((this.multipleResolveOperationCompleted == null)) {
                this.multipleResolveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmultipleResolveOperationCompleted);
            }
            this.InvokeAsync("multipleResolve", new object[] {
                        context,
                        inputDtos}, this.multipleResolveOperationCompleted, userState);
        }
        
        private void OnmultipleResolveOperationCompleted(object arg) {
            if ((this.multipleResolveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.multipleResolveCompleted(this, new multipleResolveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://discrepancytask.m3140.service.ellipse.mincom.com", ResponseNamespace="http://discrepancytask.m3140.service.ellipse.mincom.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("out", IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://instances.m3140.types.ellipse.mincom.com")]
        public DiscrepancyTaskServiceResult[] multipleReadBySourceTaskIdNoError([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] OperationContext context, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://instances.m3140.types.ellipse.mincom.com")] DiscrepancyTaskDTO[] inputDtos) {
            object[] results = this.Invoke("multipleReadBySourceTaskIdNoError", new object[] {
                        context,
                        inputDtos});
            return ((DiscrepancyTaskServiceResult[])(results[0]));
        }
        
        /// <remarks/>
        public void multipleReadBySourceTaskIdNoErrorAsync(OperationContext context, DiscrepancyTaskDTO[] inputDtos) {
            this.multipleReadBySourceTaskIdNoErrorAsync(context, inputDtos, null);
        }
        
        /// <remarks/>
        public void multipleReadBySourceTaskIdNoErrorAsync(OperationContext context, DiscrepancyTaskDTO[] inputDtos, object userState) {
            if ((this.multipleReadBySourceTaskIdNoErrorOperationCompleted == null)) {
                this.multipleReadBySourceTaskIdNoErrorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmultipleReadBySourceTaskIdNoErrorOperationCompleted);
            }
            this.InvokeAsync("multipleReadBySourceTaskIdNoError", new object[] {
                        context,
                        inputDtos}, this.multipleReadBySourceTaskIdNoErrorOperationCompleted, userState);
        }
        
        private void OnmultipleReadBySourceTaskIdNoErrorOperationCompleted(object arg) {
            if ((this.multipleReadBySourceTaskIdNoErrorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.multipleReadBySourceTaskIdNoErrorCompleted(this, new multipleReadBySourceTaskIdNoErrorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://discrepancytask.m3140.service.ellipse.mincom.com", ResponseNamespace="http://discrepancytask.m3140.service.ellipse.mincom.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public DiscrepancyTaskServiceResult update([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] OperationContext context, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] DiscrepancyTaskDTO serviceDTO) {
            object[] results = this.Invoke("update", new object[] {
                        context,
                        serviceDTO});
            return ((DiscrepancyTaskServiceResult)(results[0]));
        }
        
        /// <remarks/>
        public void updateAsync(OperationContext context, DiscrepancyTaskDTO serviceDTO) {
            this.updateAsync(context, serviceDTO, null);
        }
        
        /// <remarks/>
        public void updateAsync(OperationContext context, DiscrepancyTaskDTO serviceDTO, object userState) {
            if ((this.updateOperationCompleted == null)) {
                this.updateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateOperationCompleted);
            }
            this.InvokeAsync("update", new object[] {
                        context,
                        serviceDTO}, this.updateOperationCompleted, userState);
        }
        
        private void OnupdateOperationCompleted(object arg) {
            if ((this.updateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateCompleted(this, new updateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://discrepancytask.m3140.service.ellipse.mincom.com", ResponseNamespace="http://discrepancytask.m3140.service.ellipse.mincom.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public ObserveServiceResult observe([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] OperationContext context, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ObserveDTO serviceDTO) {
            object[] results = this.Invoke("observe", new object[] {
                        context,
                        serviceDTO});
            return ((ObserveServiceResult)(results[0]));
        }
        
        /// <remarks/>
        public void observeAsync(OperationContext context, ObserveDTO serviceDTO) {
            this.observeAsync(context, serviceDTO, null);
        }
        
        /// <remarks/>
        public void observeAsync(OperationContext context, ObserveDTO serviceDTO, object userState) {
            if ((this.observeOperationCompleted == null)) {
                this.observeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnobserveOperationCompleted);
            }
            this.InvokeAsync("observe", new object[] {
                        context,
                        serviceDTO}, this.observeOperationCompleted, userState);
        }
        
        private void OnobserveOperationCompleted(object arg) {
            if ((this.observeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.observeCompleted(this, new observeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://discrepancytask.m3140.service.ellipse.mincom.com", ResponseNamespace="http://discrepancytask.m3140.service.ellipse.mincom.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("out", IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://instances.m3140.types.ellipse.mincom.com")]
        public ObserveServiceResult[] multipleObserve([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] OperationContext context, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://instances.m3140.types.ellipse.mincom.com")] ObserveDTO[] inputDtos) {
            object[] results = this.Invoke("multipleObserve", new object[] {
                        context,
                        inputDtos});
            return ((ObserveServiceResult[])(results[0]));
        }
        
        /// <remarks/>
        public void multipleObserveAsync(OperationContext context, ObserveDTO[] inputDtos) {
            this.multipleObserveAsync(context, inputDtos, null);
        }
        
        /// <remarks/>
        public void multipleObserveAsync(OperationContext context, ObserveDTO[] inputDtos, object userState) {
            if ((this.multipleObserveOperationCompleted == null)) {
                this.multipleObserveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmultipleObserveOperationCompleted);
            }
            this.InvokeAsync("multipleObserve", new object[] {
                        context,
                        inputDtos}, this.multipleObserveOperationCompleted, userState);
        }
        
        private void OnmultipleObserveOperationCompleted(object arg) {
            if ((this.multipleObserveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.multipleObserveCompleted(this, new multipleObserveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://discrepancytask.m3140.service.ellipse.mincom.com", ResponseNamespace="http://discrepancytask.m3140.service.ellipse.mincom.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public DiscrepancyTaskServiceResult readBySourceTaskIdNoError([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] OperationContext context, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] DiscrepancyTaskDTO serviceDTO) {
            object[] results = this.Invoke("readBySourceTaskIdNoError", new object[] {
                        context,
                        serviceDTO});
            return ((DiscrepancyTaskServiceResult)(results[0]));
        }
        
        /// <remarks/>
        public void readBySourceTaskIdNoErrorAsync(OperationContext context, DiscrepancyTaskDTO serviceDTO) {
            this.readBySourceTaskIdNoErrorAsync(context, serviceDTO, null);
        }
        
        /// <remarks/>
        public void readBySourceTaskIdNoErrorAsync(OperationContext context, DiscrepancyTaskDTO serviceDTO, object userState) {
            if ((this.readBySourceTaskIdNoErrorOperationCompleted == null)) {
                this.readBySourceTaskIdNoErrorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnreadBySourceTaskIdNoErrorOperationCompleted);
            }
            this.InvokeAsync("readBySourceTaskIdNoError", new object[] {
                        context,
                        serviceDTO}, this.readBySourceTaskIdNoErrorOperationCompleted, userState);
        }
        
        private void OnreadBySourceTaskIdNoErrorOperationCompleted(object arg) {
            if ((this.readBySourceTaskIdNoErrorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.readBySourceTaskIdNoErrorCompleted(this, new readBySourceTaskIdNoErrorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://discrepancytask.m3140.service.ellipse.mincom.com", ResponseNamespace="http://discrepancytask.m3140.service.ellipse.mincom.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("out", IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://instances.m3140.types.ellipse.mincom.com")]
        public DiscrepancyTaskServiceResult[] search([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] OperationContext context, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] DiscrepancyTaskSearchParam searchParams, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] DiscrepancyTaskDTO restart) {
            object[] results = this.Invoke("search", new object[] {
                        context,
                        searchParams,
                        restart});
            return ((DiscrepancyTaskServiceResult[])(results[0]));
        }
        
        /// <remarks/>
        public void searchAsync(OperationContext context, DiscrepancyTaskSearchParam searchParams, DiscrepancyTaskDTO restart) {
            this.searchAsync(context, searchParams, restart, null);
        }
        
        /// <remarks/>
        public void searchAsync(OperationContext context, DiscrepancyTaskSearchParam searchParams, DiscrepancyTaskDTO restart, object userState) {
            if ((this.searchOperationCompleted == null)) {
                this.searchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchOperationCompleted);
            }
            this.InvokeAsync("search", new object[] {
                        context,
                        searchParams,
                        restart}, this.searchOperationCompleted, userState);
        }
        
        private void OnsearchOperationCompleted(object arg) {
            if ((this.searchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchCompleted(this, new searchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://discrepancytask.m3140.service.ellipse.mincom.com", ResponseNamespace="http://discrepancytask.m3140.service.ellipse.mincom.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("out", IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://instances.m3140.types.ellipse.mincom.com")]
        public DiscrepancyTaskServiceResult[] multipleUpdate([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] OperationContext context, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://instances.m3140.types.ellipse.mincom.com")] DiscrepancyTaskDTO[] inputDtos) {
            object[] results = this.Invoke("multipleUpdate", new object[] {
                        context,
                        inputDtos});
            return ((DiscrepancyTaskServiceResult[])(results[0]));
        }
        
        /// <remarks/>
        public void multipleUpdateAsync(OperationContext context, DiscrepancyTaskDTO[] inputDtos) {
            this.multipleUpdateAsync(context, inputDtos, null);
        }
        
        /// <remarks/>
        public void multipleUpdateAsync(OperationContext context, DiscrepancyTaskDTO[] inputDtos, object userState) {
            if ((this.multipleUpdateOperationCompleted == null)) {
                this.multipleUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmultipleUpdateOperationCompleted);
            }
            this.InvokeAsync("multipleUpdate", new object[] {
                        context,
                        inputDtos}, this.multipleUpdateOperationCompleted, userState);
        }
        
        private void OnmultipleUpdateOperationCompleted(object arg) {
            if ((this.multipleUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.multipleUpdateCompleted(this, new multipleUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://discrepancytask.m3140.service.ellipse.mincom.com", ResponseNamespace="http://discrepancytask.m3140.service.ellipse.mincom.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("out", IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://instances.m3140.types.ellipse.mincom.com")]
        public DiscrepancyTaskServiceResult[] multipleRead([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] OperationContext context, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://instances.m3140.types.ellipse.mincom.com")] DiscrepancyTaskDTO[] inputDtos) {
            object[] results = this.Invoke("multipleRead", new object[] {
                        context,
                        inputDtos});
            return ((DiscrepancyTaskServiceResult[])(results[0]));
        }
        
        /// <remarks/>
        public void multipleReadAsync(OperationContext context, DiscrepancyTaskDTO[] inputDtos) {
            this.multipleReadAsync(context, inputDtos, null);
        }
        
        /// <remarks/>
        public void multipleReadAsync(OperationContext context, DiscrepancyTaskDTO[] inputDtos, object userState) {
            if ((this.multipleReadOperationCompleted == null)) {
                this.multipleReadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmultipleReadOperationCompleted);
            }
            this.InvokeAsync("multipleRead", new object[] {
                        context,
                        inputDtos}, this.multipleReadOperationCompleted, userState);
        }
        
        private void OnmultipleReadOperationCompleted(object arg) {
            if ((this.multipleReadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.multipleReadCompleted(this, new multipleReadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://connectivity.service.ews.mincom.com")]
    public partial class OperationContext {
        
        private string applicationClientIdField;
        
        private string districtField;
        
        private bool eventDisableField;
        
        private bool eventDisableFieldSpecified;
        
        private int maxInstancesField;
        
        private bool maxInstancesFieldSpecified;
        
        private string positionField;
        
        private bool returnWarningsField;
        
        private bool returnWarningsFieldSpecified;
        
        private RunAs runAsField;
        
        private string tenantIdField;
        
        private bool traceField;
        
        private bool traceFieldSpecified;
        
        private string transactionField;
        
        /// <remarks/>
        public string applicationClientId {
            get {
                return this.applicationClientIdField;
            }
            set {
                this.applicationClientIdField = value;
            }
        }
        
        /// <remarks/>
        public string district {
            get {
                return this.districtField;
            }
            set {
                this.districtField = value;
            }
        }
        
        /// <remarks/>
        public bool eventDisable {
            get {
                return this.eventDisableField;
            }
            set {
                this.eventDisableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool eventDisableSpecified {
            get {
                return this.eventDisableFieldSpecified;
            }
            set {
                this.eventDisableFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int maxInstances {
            get {
                return this.maxInstancesField;
            }
            set {
                this.maxInstancesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool maxInstancesSpecified {
            get {
                return this.maxInstancesFieldSpecified;
            }
            set {
                this.maxInstancesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string position {
            get {
                return this.positionField;
            }
            set {
                this.positionField = value;
            }
        }
        
        /// <remarks/>
        public bool returnWarnings {
            get {
                return this.returnWarningsField;
            }
            set {
                this.returnWarningsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool returnWarningsSpecified {
            get {
                return this.returnWarningsFieldSpecified;
            }
            set {
                this.returnWarningsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public RunAs runAs {
            get {
                return this.runAsField;
            }
            set {
                this.runAsField = value;
            }
        }
        
        /// <remarks/>
        public string tenantId {
            get {
                return this.tenantIdField;
            }
            set {
                this.tenantIdField = value;
            }
        }
        
        /// <remarks/>
        public bool trace {
            get {
                return this.traceField;
            }
            set {
                this.traceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool traceSpecified {
            get {
                return this.traceFieldSpecified;
            }
            set {
                this.traceFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string transaction {
            get {
                return this.transactionField;
            }
            set {
                this.transactionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://connectivity.service.ews.mincom.com")]
    public partial class RunAs {
        
        private string districtField;
        
        private string positionField;
        
        private string userField;
        
        /// <remarks/>
        public string district {
            get {
                return this.districtField;
            }
            set {
                this.districtField = value;
            }
        }
        
        /// <remarks/>
        public string position {
            get {
                return this.positionField;
            }
            set {
                this.positionField = value;
            }
        }
        
        /// <remarks/>
        public string user {
            get {
                return this.userField;
            }
            set {
                this.userField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://service.ellipse.mincom.com")]
    public partial class ServiceRequiredAttributes {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ServiceResult))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ObserveServiceResult))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DiscrepancyTaskServiceResult))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://service.ellipse.mincom.com")]
    public abstract partial class BaseServiceResult {
        
        private Error[] errorsField;
        
        private Message[] informationalMessagesField;
        
        private Warning[] warningsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://errors.ellipse.mincom.com")]
        public Error[] errors {
            get {
                return this.errorsField;
            }
            set {
                this.errorsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://errors.ellipse.mincom.com")]
        public Message[] informationalMessages {
            get {
                return this.informationalMessagesField;
            }
            set {
                this.informationalMessagesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://errors.ellipse.mincom.com")]
        public Warning[] warnings {
            get {
                return this.warningsField;
            }
            set {
                this.warningsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://errors.ellipse.mincom.com")]
    public partial class Error : Message {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Error))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Warning))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://errors.ellipse.mincom.com")]
    public partial class Message {
        
        private string fieldIdField;
        
        private int fieldIndexField;
        
        private bool fieldIndexFieldSpecified;
        
        private bool localisableField;
        
        private bool localisableFieldSpecified;
        
        private string messageIdField;
        
        private string messageInstanceField;
        
        private string messageTextField;
        
        private string parentInstanceField;
        
        private string userField;
        
        /// <remarks/>
        public string fieldId {
            get {
                return this.fieldIdField;
            }
            set {
                this.fieldIdField = value;
            }
        }
        
        /// <remarks/>
        public int fieldIndex {
            get {
                return this.fieldIndexField;
            }
            set {
                this.fieldIndexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool fieldIndexSpecified {
            get {
                return this.fieldIndexFieldSpecified;
            }
            set {
                this.fieldIndexFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool localisable {
            get {
                return this.localisableField;
            }
            set {
                this.localisableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localisableSpecified {
            get {
                return this.localisableFieldSpecified;
            }
            set {
                this.localisableFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string messageId {
            get {
                return this.messageIdField;
            }
            set {
                this.messageIdField = value;
            }
        }
        
        /// <remarks/>
        public string messageInstance {
            get {
                return this.messageInstanceField;
            }
            set {
                this.messageInstanceField = value;
            }
        }
        
        /// <remarks/>
        public string messageText {
            get {
                return this.messageTextField;
            }
            set {
                this.messageTextField = value;
            }
        }
        
        /// <remarks/>
        public string parentInstance {
            get {
                return this.parentInstanceField;
            }
            set {
                this.parentInstanceField = value;
            }
        }
        
        /// <remarks/>
        public string user {
            get {
                return this.userField;
            }
            set {
                this.userField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://errors.ellipse.mincom.com")]
    public partial class Warning : Message {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ObserveServiceResult))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DiscrepancyTaskServiceResult))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://service.ellipse.mincom.com")]
    public partial class ServiceResult : BaseServiceResult {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://instances.m3140.types.ellipse.mincom.com")]
    public partial class ObserveServiceResult : ServiceResult {
        
        private ObserveDTO observeDTOField;
        
        /// <remarks/>
        public ObserveDTO observeDTO {
            get {
                return this.observeDTOField;
            }
            set {
                this.observeDTOField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://instances.m3140.types.ellipse.mincom.com")]
    public partial class ObserveDTO : ServiceDTO {
        
        private string commentField;
        
        private string custodianIdField;
        
        private string districtCodeField;
        
        private string employeeIdField;
        
        private string reasonField;
        
        private string sourceTaskIdField;
        
        private string stockCodeField;
        
        private string supplyCustomerAccountIdField;
        
        private string warehouseIdField;
        
        /// <remarks/>
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        public string custodianId {
            get {
                return this.custodianIdField;
            }
            set {
                this.custodianIdField = value;
            }
        }
        
        /// <remarks/>
        public string districtCode {
            get {
                return this.districtCodeField;
            }
            set {
                this.districtCodeField = value;
            }
        }
        
        /// <remarks/>
        public string employeeId {
            get {
                return this.employeeIdField;
            }
            set {
                this.employeeIdField = value;
            }
        }
        
        /// <remarks/>
        public string reason {
            get {
                return this.reasonField;
            }
            set {
                this.reasonField = value;
            }
        }
        
        /// <remarks/>
        public string sourceTaskId {
            get {
                return this.sourceTaskIdField;
            }
            set {
                this.sourceTaskIdField = value;
            }
        }
        
        /// <remarks/>
        public string stockCode {
            get {
                return this.stockCodeField;
            }
            set {
                this.stockCodeField = value;
            }
        }
        
        /// <remarks/>
        public string supplyCustomerAccountId {
            get {
                return this.supplyCustomerAccountIdField;
            }
            set {
                this.supplyCustomerAccountIdField = value;
            }
        }
        
        /// <remarks/>
        public string warehouseId {
            get {
                return this.warehouseIdField;
            }
            set {
                this.warehouseIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AbstractSearchParam))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DiscrepancyTaskSearchParam))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ObserveDTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(HoldingsTaskDTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DiscrepancyTaskDTO))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://service.ellipse.mincom.com")]
    public abstract partial class ServiceDTO : Base {
        
        private Attribute[] customAttributesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://attribute.ellipse.mincom.com")]
        public Attribute[] customAttributes {
            get {
                return this.customAttributesField;
            }
            set {
                this.customAttributesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://attribute.ellipse.mincom.com")]
    public partial class Attribute {
        
        private string dataTypeField;
        
        private string nameField;
        
        private string namespaceField;
        
        private anyType2anyTypeMapEntry[] propertiesField;
        
        private string valueField;
        
        /// <remarks/>
        public string dataType {
            get {
                return this.dataTypeField;
            }
            set {
                this.dataTypeField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string @namespace {
            get {
                return this.namespaceField;
            }
            set {
                this.namespaceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("entry", Namespace="http://discrepancytask.m3140.service.ellipse.mincom.com", IsNullable=false)]
        public anyType2anyTypeMapEntry[] properties {
            get {
                return this.propertiesField;
            }
            set {
                this.propertiesField = value;
            }
        }
        
        /// <remarks/>
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://discrepancytask.m3140.service.ellipse.mincom.com")]
    public partial class anyType2anyTypeMapEntry {
        
        private object keyField;
        
        private object valueField;
        
        /// <remarks/>
        public object key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        public object value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ServiceDTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AbstractSearchParam))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DiscrepancyTaskSearchParam))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ObserveDTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(HoldingsTaskDTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DiscrepancyTaskDTO))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://instances.base.types.ellipse.mincom.com")]
    public abstract partial class Base {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DiscrepancyTaskSearchParam))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://service.ellipse.mincom.com")]
    public abstract partial class AbstractSearchParam : ServiceDTO {
        
        private ServiceRequiredAttributes serviceRequiredAttributesField;
        
        /// <remarks/>
        public ServiceRequiredAttributes serviceRequiredAttributes {
            get {
                return this.serviceRequiredAttributesField;
            }
            set {
                this.serviceRequiredAttributesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://instances.m3140.types.ellipse.mincom.com")]
    public partial class DiscrepancyTaskSearchParam : AbstractSearchParam {
        
        private string assignedToField;
        
        private string discrepancyTypeField;
        
        private string districtCodeField;
        
        private string employeeIdField;
        
        private string foreignMilitarySalesRequisitionNumberField;
        
        private string purchaseOrderItemNumberField;
        
        private string purchaseOrderNumberField;
        
        private string scaTransferItemNumberField;
        
        private string scaTransferNumberField;
        
        private string stockCodeField;
        
        private string supplyCustomerAccountIdField;
        
        private string taskIdField;
        
        private string warehouseIdField;
        
        private string warehouseRequisitionDistrictCodeField;
        
        private string warehouseRequisitionItemNumberField;
        
        private string warehouseRequisitionNumberField;
        
        private string waybillItemNumberField;
        
        private string waybillNumberField;
        
        /// <remarks/>
        public string assignedTo {
            get {
                return this.assignedToField;
            }
            set {
                this.assignedToField = value;
            }
        }
        
        /// <remarks/>
        public string discrepancyType {
            get {
                return this.discrepancyTypeField;
            }
            set {
                this.discrepancyTypeField = value;
            }
        }
        
        /// <remarks/>
        public string districtCode {
            get {
                return this.districtCodeField;
            }
            set {
                this.districtCodeField = value;
            }
        }
        
        /// <remarks/>
        public string employeeId {
            get {
                return this.employeeIdField;
            }
            set {
                this.employeeIdField = value;
            }
        }
        
        /// <remarks/>
        public string foreignMilitarySalesRequisitionNumber {
            get {
                return this.foreignMilitarySalesRequisitionNumberField;
            }
            set {
                this.foreignMilitarySalesRequisitionNumberField = value;
            }
        }
        
        /// <remarks/>
        public string purchaseOrderItemNumber {
            get {
                return this.purchaseOrderItemNumberField;
            }
            set {
                this.purchaseOrderItemNumberField = value;
            }
        }
        
        /// <remarks/>
        public string purchaseOrderNumber {
            get {
                return this.purchaseOrderNumberField;
            }
            set {
                this.purchaseOrderNumberField = value;
            }
        }
        
        /// <remarks/>
        public string scaTransferItemNumber {
            get {
                return this.scaTransferItemNumberField;
            }
            set {
                this.scaTransferItemNumberField = value;
            }
        }
        
        /// <remarks/>
        public string scaTransferNumber {
            get {
                return this.scaTransferNumberField;
            }
            set {
                this.scaTransferNumberField = value;
            }
        }
        
        /// <remarks/>
        public string stockCode {
            get {
                return this.stockCodeField;
            }
            set {
                this.stockCodeField = value;
            }
        }
        
        /// <remarks/>
        public string supplyCustomerAccountId {
            get {
                return this.supplyCustomerAccountIdField;
            }
            set {
                this.supplyCustomerAccountIdField = value;
            }
        }
        
        /// <remarks/>
        public string taskId {
            get {
                return this.taskIdField;
            }
            set {
                this.taskIdField = value;
            }
        }
        
        /// <remarks/>
        public string warehouseId {
            get {
                return this.warehouseIdField;
            }
            set {
                this.warehouseIdField = value;
            }
        }
        
        /// <remarks/>
        public string warehouseRequisitionDistrictCode {
            get {
                return this.warehouseRequisitionDistrictCodeField;
            }
            set {
                this.warehouseRequisitionDistrictCodeField = value;
            }
        }
        
        /// <remarks/>
        public string warehouseRequisitionItemNumber {
            get {
                return this.warehouseRequisitionItemNumberField;
            }
            set {
                this.warehouseRequisitionItemNumberField = value;
            }
        }
        
        /// <remarks/>
        public string warehouseRequisitionNumber {
            get {
                return this.warehouseRequisitionNumberField;
            }
            set {
                this.warehouseRequisitionNumberField = value;
            }
        }
        
        /// <remarks/>
        public string waybillItemNumber {
            get {
                return this.waybillItemNumberField;
            }
            set {
                this.waybillItemNumberField = value;
            }
        }
        
        /// <remarks/>
        public string waybillNumber {
            get {
                return this.waybillNumberField;
            }
            set {
                this.waybillNumberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DiscrepancyTaskDTO))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://instances.m3140.types.ellipse.mincom.com")]
    public partial class HoldingsTaskDTO : ServiceDTO {
        
        private System.DateTime assignedDateField;
        
        private bool assignedDateFieldSpecified;
        
        private System.DateTime assignedTimeField;
        
        private bool assignedTimeFieldSpecified;
        
        private string assignedToField;
        
        private string closureCodeField;
        
        private string closureCommentField;
        
        private System.DateTime creationDateField;
        
        private bool creationDateFieldSpecified;
        
        private System.DateTime creationTimeField;
        
        private bool creationTimeFieldSpecified;
        
        private string creationUserField;
        
        private string custodianIdField;
        
        private string holdingTaskTypeField;
        
        private string priorityCodeField;
        
        private string sourceTaskIdField;
        
        private string stockCodeField;
        
        private string taskIdField;
        
        private bool underCountFlagField;
        
        private bool underCountFlagFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        public System.DateTime assignedDate {
            get {
                return this.assignedDateField;
            }
            set {
                this.assignedDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool assignedDateSpecified {
            get {
                return this.assignedDateFieldSpecified;
            }
            set {
                this.assignedDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="time")]
        public System.DateTime assignedTime {
            get {
                return this.assignedTimeField;
            }
            set {
                this.assignedTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool assignedTimeSpecified {
            get {
                return this.assignedTimeFieldSpecified;
            }
            set {
                this.assignedTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string assignedTo {
            get {
                return this.assignedToField;
            }
            set {
                this.assignedToField = value;
            }
        }
        
        /// <remarks/>
        public string closureCode {
            get {
                return this.closureCodeField;
            }
            set {
                this.closureCodeField = value;
            }
        }
        
        /// <remarks/>
        public string closureComment {
            get {
                return this.closureCommentField;
            }
            set {
                this.closureCommentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        public System.DateTime creationDate {
            get {
                return this.creationDateField;
            }
            set {
                this.creationDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool creationDateSpecified {
            get {
                return this.creationDateFieldSpecified;
            }
            set {
                this.creationDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="time")]
        public System.DateTime creationTime {
            get {
                return this.creationTimeField;
            }
            set {
                this.creationTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool creationTimeSpecified {
            get {
                return this.creationTimeFieldSpecified;
            }
            set {
                this.creationTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string creationUser {
            get {
                return this.creationUserField;
            }
            set {
                this.creationUserField = value;
            }
        }
        
        /// <remarks/>
        public string custodianId {
            get {
                return this.custodianIdField;
            }
            set {
                this.custodianIdField = value;
            }
        }
        
        /// <remarks/>
        public string holdingTaskType {
            get {
                return this.holdingTaskTypeField;
            }
            set {
                this.holdingTaskTypeField = value;
            }
        }
        
        /// <remarks/>
        public string priorityCode {
            get {
                return this.priorityCodeField;
            }
            set {
                this.priorityCodeField = value;
            }
        }
        
        /// <remarks/>
        public string sourceTaskId {
            get {
                return this.sourceTaskIdField;
            }
            set {
                this.sourceTaskIdField = value;
            }
        }
        
        /// <remarks/>
        public string stockCode {
            get {
                return this.stockCodeField;
            }
            set {
                this.stockCodeField = value;
            }
        }
        
        /// <remarks/>
        public string taskId {
            get {
                return this.taskIdField;
            }
            set {
                this.taskIdField = value;
            }
        }
        
        /// <remarks/>
        public bool underCountFlag {
            get {
                return this.underCountFlagField;
            }
            set {
                this.underCountFlagField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool underCountFlagSpecified {
            get {
                return this.underCountFlagFieldSpecified;
            }
            set {
                this.underCountFlagFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://instances.m3140.types.ellipse.mincom.com")]
    public partial class DiscrepancyTaskDTO : HoldingsTaskDTO {
        
        private bool allowAdjustField;
        
        private bool allowAdjustFieldSpecified;
        
        private string cataloguePackedDescriptionField;
        
        private string discrepancyTypeField;
        
        private decimal discrepantQtyField;
        
        private bool discrepantQtyFieldSpecified;
        
        private string districtCodeField;
        
        private string documentDistrictCodeField;
        
        private string documentItemField;
        
        private string documentNumberField;
        
        private string documentTypeField;
        
        private string employeeIdField;
        
        private decimal itemPriceField;
        
        private bool itemPriceFieldSpecified;
        
        private string reasonField;
        
        private string resolutionCodeField;
        
        private string supplyCustomerAccountIdField;
        
        /// <remarks/>
        public bool allowAdjust {
            get {
                return this.allowAdjustField;
            }
            set {
                this.allowAdjustField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool allowAdjustSpecified {
            get {
                return this.allowAdjustFieldSpecified;
            }
            set {
                this.allowAdjustFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string cataloguePackedDescription {
            get {
                return this.cataloguePackedDescriptionField;
            }
            set {
                this.cataloguePackedDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string discrepancyType {
            get {
                return this.discrepancyTypeField;
            }
            set {
                this.discrepancyTypeField = value;
            }
        }
        
        /// <remarks/>
        public decimal discrepantQty {
            get {
                return this.discrepantQtyField;
            }
            set {
                this.discrepantQtyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool discrepantQtySpecified {
            get {
                return this.discrepantQtyFieldSpecified;
            }
            set {
                this.discrepantQtyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string districtCode {
            get {
                return this.districtCodeField;
            }
            set {
                this.districtCodeField = value;
            }
        }
        
        /// <remarks/>
        public string documentDistrictCode {
            get {
                return this.documentDistrictCodeField;
            }
            set {
                this.documentDistrictCodeField = value;
            }
        }
        
        /// <remarks/>
        public string documentItem {
            get {
                return this.documentItemField;
            }
            set {
                this.documentItemField = value;
            }
        }
        
        /// <remarks/>
        public string documentNumber {
            get {
                return this.documentNumberField;
            }
            set {
                this.documentNumberField = value;
            }
        }
        
        /// <remarks/>
        public string documentType {
            get {
                return this.documentTypeField;
            }
            set {
                this.documentTypeField = value;
            }
        }
        
        /// <remarks/>
        public string employeeId {
            get {
                return this.employeeIdField;
            }
            set {
                this.employeeIdField = value;
            }
        }
        
        /// <remarks/>
        public decimal itemPrice {
            get {
                return this.itemPriceField;
            }
            set {
                this.itemPriceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool itemPriceSpecified {
            get {
                return this.itemPriceFieldSpecified;
            }
            set {
                this.itemPriceFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string reason {
            get {
                return this.reasonField;
            }
            set {
                this.reasonField = value;
            }
        }
        
        /// <remarks/>
        public string resolutionCode {
            get {
                return this.resolutionCodeField;
            }
            set {
                this.resolutionCodeField = value;
            }
        }
        
        /// <remarks/>
        public string supplyCustomerAccountId {
            get {
                return this.supplyCustomerAccountIdField;
            }
            set {
                this.supplyCustomerAccountIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://instances.m3140.types.ellipse.mincom.com")]
    public partial class DiscrepancyTaskServiceResult : ServiceResult {
        
        private DiscrepancyTaskDTO discrepancyTaskDTOField;
        
        /// <remarks/>
        public DiscrepancyTaskDTO discrepancyTaskDTO {
            get {
                return this.discrepancyTaskDTOField;
            }
            set {
                this.discrepancyTaskDTOField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void readCompletedEventHandler(object sender, readCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class readCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal readCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DiscrepancyTaskServiceResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DiscrepancyTaskServiceResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void readBySourceTaskIdCompletedEventHandler(object sender, readBySourceTaskIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class readBySourceTaskIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal readBySourceTaskIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DiscrepancyTaskServiceResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DiscrepancyTaskServiceResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void resolveCompletedEventHandler(object sender, resolveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class resolveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal resolveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DiscrepancyTaskServiceResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DiscrepancyTaskServiceResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void multipleReadBySourceTaskIdCompletedEventHandler(object sender, multipleReadBySourceTaskIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class multipleReadBySourceTaskIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal multipleReadBySourceTaskIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DiscrepancyTaskServiceResult[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DiscrepancyTaskServiceResult[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void multipleResolveCompletedEventHandler(object sender, multipleResolveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class multipleResolveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal multipleResolveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DiscrepancyTaskServiceResult[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DiscrepancyTaskServiceResult[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void multipleReadBySourceTaskIdNoErrorCompletedEventHandler(object sender, multipleReadBySourceTaskIdNoErrorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class multipleReadBySourceTaskIdNoErrorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal multipleReadBySourceTaskIdNoErrorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DiscrepancyTaskServiceResult[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DiscrepancyTaskServiceResult[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void updateCompletedEventHandler(object sender, updateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DiscrepancyTaskServiceResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DiscrepancyTaskServiceResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void observeCompletedEventHandler(object sender, observeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class observeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal observeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ObserveServiceResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ObserveServiceResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void multipleObserveCompletedEventHandler(object sender, multipleObserveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class multipleObserveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal multipleObserveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ObserveServiceResult[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ObserveServiceResult[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void readBySourceTaskIdNoErrorCompletedEventHandler(object sender, readBySourceTaskIdNoErrorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class readBySourceTaskIdNoErrorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal readBySourceTaskIdNoErrorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DiscrepancyTaskServiceResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DiscrepancyTaskServiceResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void searchCompletedEventHandler(object sender, searchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DiscrepancyTaskServiceResult[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DiscrepancyTaskServiceResult[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void multipleUpdateCompletedEventHandler(object sender, multipleUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class multipleUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal multipleUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DiscrepancyTaskServiceResult[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DiscrepancyTaskServiceResult[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void multipleReadCompletedEventHandler(object sender, multipleReadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class multipleReadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal multipleReadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DiscrepancyTaskServiceResult[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DiscrepancyTaskServiceResult[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591